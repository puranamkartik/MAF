Script started on 2024-04-14 03:33:00-04:00
]777;notify;Command completed;exit]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export DB2_INSTANCE_NAME=db2u-manage
]777;notify;Command completed;export DB2_INSTANCE_NAME=db2u-manage]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export DB2_INSTANCE_NAME=db2u-manage]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export IBM_ENTITLEMENT_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJQk0gTWFya2V0cGxhY2UiLCJpYXQiOjE2OTkyODU4NTAsImmp0aSI6Ijc1MTY3ODcwYjc3NzRjZjdiNjg0MzJlNDNjZmMxMjdjIn0.P-U5hbcUiE92BRNWQNV7i-dx0aO7hXoJHUmzM_zYb_4
]777;notify;Command completed;export IBM_ENTITLEMENT_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJQk0gTWFya2V0cGxhY2UiLCJpYXQiOjE2OTkyODU4NTAsImp0aSI6Ijc1MTY3ODcwYjc3NzRjZjdiNjg0MzJlNDNjZmMxMjdjIn0.P-U5hbcUiE92BRNWQNV7i-dx0aO7hXoJHUmzM_zYb_4]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export IBM_ENTITLEMENT_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJJQk0gTWFya2V0cGxhY2UiLCJpYXQiOjE2OTkyODU4NTAsImp0aSI6Ijc1MTY3ODcwYjc3NzRjZjdiNjg0MzJlNDNjZmMxMjdjIn0.P-U5hbcUiE92BRNWQNV7i-dx0aO7hXoJHUmzM_zYb_4]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export DB2_META_STORAGE_CLASS=ocs-storagecluster-cephfs
]777;notify;Command completed;export DB2_META_STORAGE_CLASS=ocs-storagecluster-cephfs]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export DB2_META_STORAGE_CLASS=ocs-storagecluster-cephfs]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export DB2_DATA_STORAGE_CLASS=gp3-csi
]777;notify;Command completed;export DB2_DATA_STORAGE_CLASS=gp3-csi]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export DB2_DATA_STORAGE_CLASS=gp3-csi]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export DB2_BACKUP_STORAGE_CLASS=ocs-storagecluster-cephfs
]777;notify;Command completed;export DB2_BACKUP_STORAGE_CLASS=ocs-storagecluster-cephfs]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export DB2_BACKUP_STORAGE_CLASS=ocs-storagecluster-cephfs]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export DB2_LOGS_STORAGE_CLASS=gp3-csi
]777;notify;Command completed;export DB2_LOGS_STORAGE_CLASS=gp3-csi]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export DB2_LOGS_STORAGE_CLASS=gp3-csi]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export DB2_TEMP_STORAGE_CLASS=gp3-csi
]777;notify;Command completed;export DB2_TEMP_STORAGE_CLASS=gp3-csi]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export DB2_TEMP_STORAGE_CLASS=gp3-csi]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export MAS_INSTANCE_ID=masdemo
]777;notify;Command completed;export MAS_INSTANCE_ID=masdemo]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ 
]777;notify;Command completed;export MAS_INSTANCE_ID=masdemo]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ export MAS_CONFIG_DIR=~/itzuser/msconfig
]777;notify;Command completed;export MAS_CONFIG_DIR=~/itzuser/msconfig]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ clear
[3J[H[2J]777;notify;Command completed;clear]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ ansible localhost -m include_role -a name=ibm.mas_devops.db2
[1;35m[WARNING]: No inventory was parsed, only implicit localhost is available[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include_args": {[0m
[0;32m        "name": "ibm.mas_devops.db2"[0m
[0;32m    }[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include": "tasks/install/main.yml",[0m
[0;32m    "include_args": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include": "tasks/install/determine-storage-classes.yml",[0m
[0;32m    "include_args": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "ansible_facts": {[0m
[0;32m        "default_storage_classes_rwo": [[0m
[0;32m            "ibmc-block-gold",[0m
[0;32m            "ocs-storagecluster-ceph-rbd",[0m
[0;32m            "gp3-csi",[0m
[0;32m            "managed-premium"[0m
[0;32m        ],[0m
[0;32m        "default_storage_classes_rwx": [[0m
[0;32m            "ibmc-file-gold-gid",[0m
[0;32m            "ocs-storagecluster-cephfs",[0m
[0;32m            "efs",[0m
[0;32m            "azurefiles-premium"[0m
[0;32m        ],[0m
[0;32m        "default_storage_classes_rwx_nogid": [[0m
[0;32m            "ibmc-file-gold",[0m
[0;32m            "ocs-storagecluster-cephfs",[0m
[0;32m            "efs",[0m
[0;32m            "azurefiles-premium"[0m
[0;32m        ][0m
[0;32m    },[0m
[0;32m    "ansible_included_var_files": [[0m
[0;32m        "/home/admin/.ansible/collections/ansible_collections/ibm/mas_devops/common_vars/default_storage_classes.yml"[0m
[0;32m    ],[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "allowVolumeExpansion": true,[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "creationTimestamp": "2024-04-05T18:28:43Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:allowVolumeExpansion": {},[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:encrypted": {},[0m
[0;32m                                "f:type": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "cluster-bootstrap",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T18:28:43Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "gp2",[0m
[0;32m                "resourceVersion": "539",[0m
[0;32m                "uid": "cb42312a-f595-4328-8e6e-f7a4878f0b73"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "encrypted": "true",[0m
[0;32m                "type": "gp2"[0m
[0;32m            },[0m
[0;32m            "provisioner": "kubernetes.io/aws-ebs",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "WaitForFirstConsumer"[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "allowVolumeExpansion": true,[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "creationTimestamp": "2024-04-05T18:32:43Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:allowVolumeExpansion": {},[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:encrypted": {},[0m
[0;32m                                "f:type": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "aws-ebs-csi-driver-operator",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T18:32:43Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "gp2-csi",[0m
[0;32m                "resourceVersion": "5702",[0m
[0;32m                "uid": "13f1f715-7765-4539-88df-7da00819f622"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "encrypted": "true",[0m
[0;32m                "type": "gp2"[0m
[0;32m            },[0m
[0;32m            "provisioner": "ebs.csi.aws.com",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "WaitForFirstConsumer"[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "allowVolumeExpansion": true,[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "storageclass.kubernetes.io/is-default-class": "true"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-05T18:28:43Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:allowVolumeExpansion": {},[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:storageclass.kubernetes.io/is-default-class": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:encrypted": {},[0m
[0;32m                                "f:type": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "cluster-bootstrap",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T18:28:43Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "gp3",[0m
[0;32m                "resourceVersion": "540",[0m
[0;32m                "uid": "eae49c7d-b589-44be-b3f5-5642dea668c4"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "encrypted": "true",[0m
[0;32m                "type": "gp3"[0m
[0;32m            },[0m
[0;32m            "provisioner": "ebs.csi.aws.com",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "WaitForFirstConsumer"[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "allowVolumeExpansion": true,[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "storageclass.kubernetes.io/is-default-class": "false"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-05T18:32:43Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:allowVolumeExpansion": {},[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:storageclass.kubernetes.io/is-default-class": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:encrypted": {},[0m
[0;32m                                "f:type": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "aws-ebs-csi-driver-operator",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T18:32:43Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "gp3-csi",[0m
[0;32m                "resourceVersion": "5690",[0m
[0;32m                "uid": "5f3d3b7e-4e0a-4483-929f-34246cb5cd76"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "encrypted": "true",[0m
[0;32m                "type": "gp3"[0m
[0;32m            },[0m
[0;32m            "provisioner": "ebs.csi.aws.com",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "WaitForFirstConsumer"[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "allowVolumeExpansion": true,[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "description": "Provides RWO Filesystem volumes, and RWO and RWX Block volumes"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-05T19:22:06Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:allowVolumeExpansion": {},[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:description": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:clusterID": {},[0m
[0;32m                                "f:csi.storage.k8s.io/controller-expand-secret-name": {},[0m
[0;32m                                "f:csi.storage.k8s.io/controller-expand-secret-namespace": {},[0m
[0;32m                                "f:csi.storage.k8s.io/fstype": {},[0m
[0;32m                                "f:csi.storage.k8s.io/node-stage-secret-name": {},[0m
[0;32m                                "f:csi.storage.k8s.io/node-stage-secret-namespace": {},[0m
[0;32m                                "f:csi.storage.k8s.io/provisioner-secret-name": {},[0m
[0;32m                                "f:csi.storage.k8s.io/provisioner-secret-namespace": {},[0m
[0;32m                                "f:imageFeatures": {},[0m
[0;32m                                "f:imageFormat": {},[0m
[0;32m                                "f:pool": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "ocs-operator",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T19:22:06Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "ocs-storagecluster-ceph-rbd",[0m
[0;32m                "resourceVersion": "91881",[0m
[0;32m                "uid": "b177d2a3-cd35-4c4e-bf1e-499fa16844a5"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "clusterID": "openshift-storage",[0m
[0;32m                "csi.storage.k8s.io/controller-expand-secret-name": "rook-csi-rbd-provisioner",[0m
[0;32m                "csi.storage.k8s.io/controller-expand-secret-namespace": "openshift-storage",[0m
[0;32m                "csi.storage.k8s.io/fstype": "ext4",[0m
[0;32m                "csi.storage.k8s.io/node-stage-secret-name": "rook-csi-rbd-node",[0m
[0;32m                "csi.storage.k8s.io/node-stage-secret-namespace": "openshift-storage",[0m
[0;32m                "csi.storage.k8s.io/provisioner-secret-name": "rook-csi-rbd-provisioner",[0m
[0;32m                "csi.storage.k8s.io/provisioner-secret-namespace": "openshift-storage",[0m
[0;32m                "imageFeatures": "layering,deep-flatten,exclusive-lock,object-map,fast-diff",[0m
[0;32m                "imageFormat": "2",[0m
[0;32m                "pool": "ocs-storagecluster-cephblockpool"[0m
[0;32m            },[0m
[0;32m            "provisioner": "openshift-storage.rbd.csi.ceph.com",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "Immediate"[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "allowVolumeExpansion": true,[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "description": "Provides RWO and RWX Filesystem volumes"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-05T19:22:19Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:allowVolumeExpansion": {},[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:description": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:clusterID": {},[0m
[0;32m                                "f:csi.storage.k8s.io/controller-expand-secret-name": {},[0m
[0;32m                                "f:csi.storage.k8s.io/controller-expand-secret-namespace": {},[0m
[0;32m                                "f:csi.storage.k8s.io/node-stage-secret-name": {},[0m
[0;32m                                "f:csi.storage.k8s.io/node-stage-secret-namespace": {},[0m
[0;32m                                "f:csi.storage.k8s.io/provisioner-secret-name": {},[0m
[0;32m                                "f:csi.storage.k8s.io/provisioner-secret-namespace": {},[0m
[0;32m                                "f:fsName": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "ocs-operator",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T19:22:19Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "ocs-storagecluster-cephfs",[0m
[0;32m                "resourceVersion": "92059",[0m
[0;32m                "uid": "bcfa6ccf-c5fb-4997-b3eb-ec131a594235"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "clusterID": "openshift-storage",[0m
[0;32m                "csi.storage.k8s.io/controller-expand-secret-name": "rook-csi-cephfs-provisioner",[0m
[0;32m                "csi.storage.k8s.io/controller-expand-secret-namespace": "openshift-storage",[0m
[0;32m                "csi.storage.k8s.io/node-stage-secret-name": "rook-csi-cephfs-node",[0m
[0;32m                "csi.storage.k8s.io/node-stage-secret-namespace": "openshift-storage",[0m
[0;32m                "csi.storage.k8s.io/provisioner-secret-name": "rook-csi-cephfs-provisioner",[0m
[0;32m                "csi.storage.k8s.io/provisioner-secret-namespace": "openshift-storage",[0m
[0;32m                "fsName": "ocs-storagecluster-cephfilesystem"[0m
[0;32m            },[0m
[0;32m            "provisioner": "openshift-storage.cephfs.csi.ceph.com",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "Immediate"[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "apiVersion": "storage.k8s.io/v1",[0m
[0;32m            "kind": "StorageClass",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "description": "Provides Object Bucket Claims (OBCs)"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-05T19:23:21Z",[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "storage.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:description": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:parameters": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:bucketclass": {}[0m
[0;32m                            },[0m
[0;32m                            "f:provisioner": {},[0m
[0;32m                            "f:reclaimPolicy": {},[0m
[0;32m                            "f:volumeBindingMode": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "noobaa-operator",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T19:23:21Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "openshift-storage.noobaa.io",[0m
[0;32m                "resourceVersion": "93196",[0m
[0;32m                "uid": "9a99a5d6-4354-416f-ba2f-92aa10ace52b"[0m
[0;32m            },[0m
[0;32m            "parameters": {[0m
[0;32m                "bucketclass": "noobaa-default-bucket-class"[0m
[0;32m            },[0m
[0;32m            "provisioner": "openshift-storage.noobaa.io/obc",[0m
[0;32m            "reclaimPolicy": "Delete",[0m
[0;32m            "volumeBindingMode": "Immediate"[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "gp2",[0m
[0;32m        "gp2-csi",[0m
[0;32m        "gp3",[0m
[0;32m        "gp3-csi",[0m
[0;32m        "ocs-storagecluster-ceph-rbd",[0m
[0;32m        "ocs-storagecluster-cephfs",[0m
[0;32m        "openshift-storage.noobaa.io"[0m
[0;32m    ][0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;36mlocalhost | SKIPPED[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Storage class (meta) ......... ocs-storagecluster-cephfs",[0m
[0;32m        "Storage class (data) ......... gp3-csi",[0m
[0;32m        "Storage class (backup) ....... ocs-storagecluster-cephfs",[0m
[0;32m        "Storage class (logs) ......... gp3-csi",[0m
[0;32m        "Storage class (temp) ......... gp3-csi"[0m
[0;32m    ][0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "MAS Instance ID ........................ masdemo",[0m
[0;32m        "MAS Config directory ................... /home/admin/itzuser/msconfig",[0m
[0;32m        "MAS Instance ID ........................ masdemo",[0m
[0;32m        "MAS Workspace ID ....................... <undefined>",[0m
[0;32m        "MAS Application ID ..................... <undefined>",[0m
[0;32m        "MAS Config Directory ................... /home/admin/itzuser/msconfig",[0m
[0;32m        "MAS Config Scope ....................... system"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Affinity key ........................... <undefined>",[0m
[0;32m        "Affinity value ......................... <undefined>",[0m
[0;32m        "Toleration key ......................... <undefined>",[0m
[0;32m        "Toleration value ....................... <undefined>",[0m
[0;32m        "Toleration effect ...................... <undefined>"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Namespace .............................. db2u",[0m
[0;32m        "Db2 Instance ........................... db2u-manage"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Database Name .......................... BLUDB",[0m
[0;32m        "4K Device Support ...................... ON",[0m
[0;32m        "Table Organization ..................... ROW",[0m
[0;32m        "TLS Version ............................ TLSv1.2",[0m
[0;32m        "Workload ............................... ANALYTICS"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "CPU Request ............................ 4000m",[0m
[0;32m        "CPU Limit .............................. 6000m",[0m
[0;32m        "Memory Request ......................... 8Gi",[0m
[0;32m        "Memory Limit ........................... 16Gi"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Meta ................................... ocs-storagecluster-cephfs - 20Gi @ ReadWriteMany",[0m
[0;32m        "Data ................................... gp3-csi - 100Gi @ ReadWriteOnce",[0m
[0;32m        "Backup ................................. ocs-storagecluster-cephfs - 100Gi @ ReadWriteMany",[0m
[0;32m        "Logs ................................... gp3-csi - 100Gi @ ReadWriteOnce",[0m
[0;32m        "Temp ................................... gp3-csi - 100Gi @ ReadWriteOnce"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "attempts": 1,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "packages.operators.coreos.com/v1",[0m
[0;32m            "kind": "PackageManifest",[0m
[0;32m            "metadata": {[0m
[0;32m                "creationTimestamp": "2024-04-14T06:23:04Z",[0m
[0;32m                "labels": {[0m
[0;32m                    "catalog": "ibm-operator-catalog",[0m
[0;32m                    "catalog-namespace": "openshift-marketplace",[0m
[0;32m                    "operatorframework.io/arch.amd64": "supported",[0m
[0;32m                    "operatorframework.io/arch.ppc64le": "supported",[0m
[0;32m                    "operatorframework.io/arch.s390x": "supported",[0m
[0;32m                    "operatorframework.io/os.linux": "supported",[0m
[0;32m                    "provider": "IBM",[0m
[0;32m                    "provider-url": ""[0m
[0;32m                },[0m
[0;32m                "name": "db2u-operator",[0m
[0;32m                "namespace": "ibm-common-services"[0m
[0;32m            },[0m
[0;32m            "spec": {},[0m
[0;32m            "status": {[0m
[0;32m                "catalogSource": "ibm-operator-catalog",[0m
[0;32m                "catalogSourceDisplayName": "IBM Maximo Operators (v8-amd64)",[0m
[0;32m                "catalogSourceNamespace": "openshift-marketplace",[0m
[0;32m                "catalogSourcePublisher": "IBM",[0m
[0;32m                "channels": [[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v1.0.11",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.5.1-cn4\"\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHadr\",\n    \"metadata\": {\n      \"name\": \"db2uhadr-sample\"\n    },\n    \"spec\": {\n      \"primary\": {\n        \"db2uCluster\": \"db2u-oltp-1\"\n      },\n      \"standby\": {\n        \"db2uCluster\": \"db2u-oltp-2\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHelmMigration\",\n    \"metadata\": {\n      \"name\": \"db2uhelmmigration-sample\"\n    },\n    \"spec\": {\n      \"db2uClusterSpec\": {\n        \"version\": \"11.5.5.1-cn4\"\n      },\n      \"db2uHelmClusterSpec\": {\n        \"release\": \"db2uhelm-sample-11.5.3.0\",\n        \"version\": \"11.5.3.0\"\n      }\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "ibmcom/db2u-operator",[0m
[0;32m                                "createdAt": "2022-01-07 01:55:04.150271",[0m
[0;32m                                "olm.skipRange": ">=1.0.7 <1.0.11",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.1.0",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v2",[0m
[0;32m                                "support": "Db2U Development Team @ IBM"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation: For additional information https://ibm.biz/BdqNGJ License: By installing this product you accept the license terms https://ibm.biz/BdqNGh",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments Documentation: For additional information https://ibm.biz/BdqNGJ License: By installing this product you accept the license terms https://ibm.biz/BdqNGh",[0m
[0;32m                                        "displayName": "Db2u Hadr",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2 Documentation: For additional information https://ibm.biz/BdqNGJ License: By installing this product you accept the license terms https://ibm.biz/BdqNGh",[0m
[0;32m                                        "displayName": "Db2u Helm Migration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.5.1-cn4\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat Openshift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n### Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing the Db2U Operator\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n## SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following SCC\n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.1-cn4\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "docker.io/ibmcom/db2u-operator@sha256:2839d3fa84da960686bc90a2d81e56a37ad4a3051e512b5e1d6abcd4830ca10e"[0m
[0;32m                            ],[0m
[0;32m                            "version": "1.0.11"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.11",[0m
[0;32m                                "version": "1.0.11"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.10",[0m
[0;32m                                "version": "1.0.10"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.9",[0m
[0;32m                                "version": "1.0.9"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.6",[0m
[0;32m                                "version": "1.0.6"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.5",[0m
[0;32m                                "version": "1.0.5"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.4",[0m
[0;32m                                "version": "1.0.4"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.2",[0m
[0;32m                                "version": "1.0.2"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.1",[0m
[0;32m                                "version": "1.0.1"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v1.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v1.1.13",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn3\"\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"BigSQL\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"bigsql-sample\"\n    },\n    \"spec\": {\n      \"mode\": \"BigSQL\",\n      \"size\": 1,\n      \"version\": \"7.2.0.0\"\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHadr\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2uhadr-sample\"\n    },\n    \"spec\": {\n      \"primary\": {\n        \"db2uCluster\": \"db2u-oltp-1\"\n      },\n      \"standby\": {\n        \"db2uCluster\": \"db2u-oltp-2\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHelmMigration\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2uhelmmigration-sample\"\n    },\n    \"spec\": {\n      \"db2uClusterSpec\": {\n        \"version\": \"11.5.7.0-cn3\"\n      },\n      \"db2uHelmClusterSpec\": {\n        \"release\": \"db2uhelm-sample-11.5.3.0\",\n        \"version\": \"11.5.3.0\"\n      }\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:7735714144bdcedf53c1c737380e85ceb1022f4a6e6335476c42e2cca615fdfb",[0m
[0;32m                                "createdAt": "2022-04-09 23:01:58.489899",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <1.1.13",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productName": "IBM Db2U Operator",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics.  Internal objects",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP.  Internal objects",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introductionx\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat Openshift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.0.11.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.0.11-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.0.11-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.0.11.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.0.11-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.0.11-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following SCC\n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:7735714144bdcedf53c1c737380e85ceb1022f4a6e6335476c42e2cca615fdfb"[0m
[0;32m                            ],[0m
[0;32m                            "version": "1.1.13"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.13",[0m
[0;32m                                "version": "1.1.13"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.12",[0m
[0;32m                                "version": "1.1.12"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.11",[0m
[0;32m                                "version": "1.1.11"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.10",[0m
[0;32m                                "version": "1.1.10"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.9",[0m
[0;32m                                "version": "1.1.9"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.8",[0m
[0;32m                                "version": "1.1.8"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.6",[0m
[0;32m                                "version": "1.1.6"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.5",[0m
[0;32m                                "version": "1.1.5"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.4",[0m
[0;32m                                "version": "1.1.4"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.3",[0m
[0;32m                                "version": "1.1.3"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.2",[0m
[0;32m                                "version": "1.1.2"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.1",[0m
[0;32m                                "version": "1.1.1"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.0",[0m
[0;32m                                "version": "1.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v1.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v110508.0.3",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"spec\": {\"license\": {\"accept\": false}, \"storage\": [{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"meta\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"data\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"backup\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"tempts\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"archivelogs\", \"type\": \"create\"}], \"size\": 1, \"version\": \"s11.5.8.0-cn2\", \"environment\": {\"dbType\": \"db2oltp\"}, \"account\": {\"privileged\": true}}, \"metadata\": {\"name\": \"db2ucluster-sample\"}, \"kind\": \"Db2uCluster\"}, {\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"spec\": {\"nodes\": 1, \"license\": {\"accept\": false}, \"storage\": [{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"meta\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"data\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"backup\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"tempts\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"archivelogs\", \"type\": \"create\"}], \"version\": \"s11.5.8.0-cn2\", \"environment\": {\"dbType\": \"db2wh\", \"partitionConfig\": {\"volumePerPartition\": true, \"total\": 2}, \"databases\": [{\"name\": \"BLUDB\"}]}, \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}}, \"metadata\": {\"name\": \"db2uinstance-sample\"}, \"kind\": \"Db2uInstance\"}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"spec\": {\"databaseBackup\": {\"dbName\": \"BLUDB\", \"backupTarget\": {\"vendor\": \"disk\"}, \"type\": \"offline\"}, \"db2uName\": \"db2u-test\"}, \"metadata\": {\"name\": \"db2ubackup-test\"}, \"kind\": \"Db2uBackup\"}, {\"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"spec\": {\"connections\": {\"cp4d\": {\"endpoint\": \"https://zen-audit-svc.zen:9880/records\", \"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\"}}, \"configurations\": [{\"format\": \"cadf\", \"connection\": \"cp4d\", \"type\": \"audit\"}]}, \"metadata\": {\"name\": \"db2ulogstream-test\"}, \"kind\": \"Db2uLogStream\"}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}, \"metadata\": {\"name\": \"db2urestore-test\"}, \"kind\": \"Db2uRestore\"}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:3d75489519c8597270ac951864cd24064753bccdd552c96b8c78b02bfd2888f2",[0m
[0;32m                                "createdAt": "2023-10-04 11:48:01.556765",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=110508.0.0 <110508.0.3",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "s11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version s11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:3d75489519c8597270ac951864cd24064753bccdd552c96b8c78b02bfd2888f2",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:6b0101afecfc185a357916e0391869d29307073d4419137d9150062e697c30fc"[0m
[0;32m                            ],[0m
[0;32m                            "version": "110508.0.3"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v110508.0.3",[0m
[0;32m                                "version": "110508.0.3"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v110508.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v110509.0.1",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"spec\": {\"account\": {\"privileged\": true}, \"environment\": {\"dbType\": \"db2oltp\"}, \"version\": \"s11.5.9.0-cn1\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}, \"size\": 1}, \"metadata\": {\"name\": \"db2ucluster-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\"}, {\"spec\": {\"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"environment\": {\"dbType\": \"db2wh\", \"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"volumePerPartition\": true, \"total\": 2}}, \"version\": \"s11.5.9.0-cn1\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}, \"nodes\": 1}, \"metadata\": {\"name\": \"db2uinstance-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uInstance\"}, {\"spec\": {\"db2uName\": \"db2u-test\", \"databaseBackup\": {\"dbName\": \"BLUDB\", \"type\": \"offline\", \"backupTarget\": {\"vendor\": \"disk\"}}}, \"metadata\": {\"name\": \"db2ubackup-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\"}, {\"spec\": {\"configurations\": [{\"type\": \"audit\", \"format\": \"cadf\", \"connection\": \"cp4d\"}], \"connections\": {\"cp4d\": {\"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\", \"authType\": \"tls\"}}}, \"metadata\": {\"name\": \"db2ulogstream-test\"}, \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\"}, {\"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}, \"metadata\": {\"name\": \"db2urestore-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\"}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:03b322cd5e248a1b4d4d18eb7fad9debb687a8e93132fd50ef2db8dc10ae1f02",[0m
[0;32m                                "createdAt": "2024-02-17 09:21:09.575024",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=110508.0.0 <110509.0.1",[0m
[0;32m                                "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "s11.5.9.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version s11.5.9.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:cd26af5b0edb41f548c2857541df1e5d424d01b98e2516fd93698a091e8ba62c",[0m
[0;32m                                "icr.io/cpopen/ibm-db2uoperator-bundle@sha256:6ce3e3a63c4c85f2f983ee5f2b77025a973db4035f9dfb402a3919970a62d4fd",[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:03b322cd5e248a1b4d4d18eb7fad9debb687a8e93132fd50ef2db8dc10ae1f02"[0m
[0;32m                            ],[0m
[0;32m                            "version": "110509.0.1"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v110509.0.1",[0m
[0;32m                                "version": "110509.0.1"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v110509.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v2.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn5\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:e15b6ad411f3246f767c7c49158b2aafb88550b151962b8881691b9b18509a60",[0m
[0;32m                                "createdAt": "2022-06-14 18:17:26.685778",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <2.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productID": "5737-K73",[0m
[0;32m                                "productMetric": "VIRTUAL_PROCESSOR_CORE",[0m
[0;32m                                "productName": "IBM Db2U Operator",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:e15b6ad411f3246f767c7c49158b2aafb88550b151962b8881691b9b18509a60"[0m
[0;32m                            ],[0m
[0;32m                            "version": "2.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v2.0.0",[0m
[0;32m                                "version": "2.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v2.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v2.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn6\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:807b4bbbdb27e88500f8de7405153315c63a41fccf4e7ae577b5dd5e53e1d08b",[0m
[0;32m                                "createdAt": "2022-07-08 03:46:38.096762",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <2.1.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productID": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Cloud Pak for Data Common Database Services",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:807b4bbbdb27e88500f8de7405153315c63a41fccf4e7ae577b5dd5e53e1d08b"[0m
[0;32m                            ],[0m
[0;32m                            "version": "2.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v2.1.0",[0m
[0;32m                                "version": "2.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v2.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v2.2.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn6\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:a2c43d2ac1b4b479d32cc3b4caaea53749c2f07c493565c2e3b8137af30fabf2",[0m
[0;32m                                "createdAt": "2022-09-20 19:47:50.881488",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <2.2.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:a2c43d2ac1b4b479d32cc3b4caaea53749c2f07c493565c2e3b8137af30fabf2"[0m
[0;32m                            ],[0m
[0;32m                            "version": "2.2.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v2.2.0",[0m
[0;32m                                "version": "2.2.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v2.2"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v3.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn6\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:a0cead50f55b5ea7883229c2b69ba27842d3833cc5f27e4bf255e4e62c65b9e1",[0m
[0;32m                                "createdAt": "2022-11-11 23:41:55.979015",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <3.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:a0cead50f55b5ea7883229c2b69ba27842d3833cc5f27e4bf255e4e62c65b9e1"[0m
[0;32m                            ],[0m
[0;32m                            "version": "3.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v3.0.0",[0m
[0;32m                                "version": "3.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v3.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v3.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.8.0-cn1\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:b8a70a044e5c0217f43e945231bd5c18b06f35d29e1602083a9a84de175422af",[0m
[0;32m                                "createdAt": "2023-01-12 17:58:41.282134",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <3.1.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:b8a70a044e5c0217f43e945231bd5c18b06f35d29e1602083a9a84de175422af"[0m
[0;32m                            ],[0m
[0;32m                            "version": "3.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v3.1.0",[0m
[0;32m                                "version": "3.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v3.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v3.2.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.8.0-cn2\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:7d4999a9a8a074a173337c85a830304adcb4edb282db5e171bbda328e60e2ce3",[0m
[0;32m                                "createdAt": "2023-03-09 19:52:35.719381",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <3.2.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:7d4999a9a8a074a173337c85a830304adcb4edb282db5e171bbda328e60e2ce3"[0m
[0;32m                            ],[0m
[0;32m                            "version": "3.2.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v3.2.0",[0m
[0;32m                                "version": "3.2.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v3.2"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v4.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"metadata\": {\"name\": \"db2ucluster-sample\", \"labels\": {\"app.kubernetes.io/name\": \"db2u-operator\", \"app.kubernetes.io/instance\": \"db2u-operator\", \"app.kubernetes.io/managed-by\": \"Db2U-Team\"}}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\", \"spec\": {\"version\": \"11.5.8.0-cn4\", \"license\": {\"accept\": false}, \"account\": {\"privileged\": true}, \"storage\": [{\"name\": \"share\", \"type\": \"create\", \"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"managed-nfs-storage\", \"accessModes\": [\"ReadWriteMany\"]}}], \"size\": 1, \"environment\": {\"dbType\": \"db2oltp\"}}}, {\"metadata\": {\"name\": \"db2ubackup-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\", \"spec\": {\"databaseBackup\": {\"dbName\": \"BLUDB\", \"backupTarget\": {\"vendor\": \"disk\"}, \"type\": \"offline\"}, \"db2uName\": \"db2u-test\"}}, {\"metadata\": {\"name\": \"db2ulogstream-test\"}, \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\", \"spec\": {\"configurations\": [{\"format\": \"cadf\", \"connection\": \"cp4d\", \"type\": \"audit\"}], \"connections\": {\"cp4d\": {\"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}}}, {\"metadata\": {\"name\": \"db2urestore-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\", \"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:9e4e3fd2e73db919140fd496d5dd72c68f039354a4e29ce3f1b574a49611a314",[0m
[0;32m                                "createdAt": "2023-06-10 21:25:31.482674",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <4.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:9e4e3fd2e73db919140fd496d5dd72c68f039354a4e29ce3f1b574a49611a314",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:3537c1539b651f2fceac52dd4dc9b2b9a05136d5f9191cfba5013fa33a64b8a4"[0m
[0;32m                            ],[0m
[0;32m                            "version": "4.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v4.0.0",[0m
[0;32m                                "version": "4.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v4.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v4.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"spec\": {\"environment\": {\"dbType\": \"db2oltp\"}, \"license\": {\"accept\": false}, \"account\": {\"privileged\": true}, \"size\": 1, \"version\": \"11.5.8.0-cn4\", \"storage\": [{\"name\": \"share\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"managed-nfs-storage\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}]}, \"kind\": \"Db2uCluster\", \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"metadata\": {\"name\": \"db2ucluster-sample\", \"labels\": {\"app.kubernetes.io/name\": \"db2u-operator\", \"app.kubernetes.io/managed-by\": \"Db2U-Team\", \"app.kubernetes.io/instance\": \"db2u-operator\"}}}, {\"spec\": {\"databaseBackup\": {\"backupTarget\": {\"vendor\": \"disk\"}, \"dbName\": \"BLUDB\", \"type\": \"offline\"}, \"db2uName\": \"db2u-test\"}, \"kind\": \"Db2uBackup\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"db2ubackup-test\"}}, {\"spec\": {\"connections\": {\"cp4d\": {\"credentials\": \"db2oltp-internal-tls\", \"authType\": \"tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}, \"configurations\": [{\"format\": \"cadf\", \"type\": \"audit\", \"connection\": \"cp4d\"}]}, \"kind\": \"Db2uLogStream\", \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"db2ulogstream-test\"}}, {\"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}, \"kind\": \"Db2uRestore\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"db2urestore-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:ca701449fb1ea8be984fd5df169e0e224e39fb3e1ea5e0ae3f60fd6ab2b0d7e8",[0m
[0;32m                                "createdAt": "2023-08-04 17:49:03.000911",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <4.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:ca701449fb1ea8be984fd5df169e0e224e39fb3e1ea5e0ae3f60fd6ab2b0d7e8",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:d016607e1be938c4b7cc96f330354bb6979c4d06e543dc8e2ba62a8db2eb4fe0"[0m
[0;32m                            ],[0m
[0;32m                            "version": "4.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v4.1.0",[0m
[0;32m                                "version": "4.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v4.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v4.2.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"metadata\": {\"name\": \"db2ucluster-sample\"}, \"spec\": {\"size\": 1, \"environment\": {\"dbType\": \"db2oltp\"}, \"account\": {\"privileged\": true}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}}, \"kind\": \"Db2uCluster\", \"apiVersion\": \"db2u.databases.ibm.com/v1\"}, {\"metadata\": {\"name\": \"db2uinstance-sample\"}, \"spec\": {\"environment\": {\"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"total\": 2, \"volumePerPartition\": true}, \"dbType\": \"db2wh\"}, \"nodes\": 1, \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}}, \"kind\": \"Db2uInstance\", \"apiVersion\": \"db2u.databases.ibm.com/v1\"}, {\"metadata\": {\"name\": \"db2ubackup-test\"}, \"spec\": {\"databaseBackup\": {\"type\": \"offline\", \"backupTarget\": {\"vendor\": \"disk\"}, \"dbName\": \"BLUDB\"}, \"db2uName\": \"db2u-test\"}, \"kind\": \"Db2uBackup\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\"}, {\"metadata\": {\"name\": \"db2ulogstream-test\"}, \"spec\": {\"connections\": {\"cp4d\": {\"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}, \"configurations\": [{\"format\": \"cadf\", \"connection\": \"cp4d\", \"type\": \"audit\"}]}, \"kind\": \"Db2uLogStream\", \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\"}, {\"metadata\": {\"name\": \"db2urestore-test\"}, \"spec\": {\"db2uName\": \"db2u-test\", \"db2uBackup\": \"db2ubackup-test\"}, \"kind\": \"Db2uRestore\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\"}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:2199e37e457011a70644a0dcfc753023ed9b128617255085e4dd0f95f42d6bc4",[0m
[0;32m                                "createdAt": "2023-09-20 23:57:48.985621",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <110509.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:91f5a8a79d695683db78e42e3a23be652fe3fb2c8de8e331d536828fe5a7a241",[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:2199e37e457011a70644a0dcfc753023ed9b128617255085e4dd0f95f42d6bc4"[0m
[0;32m                            ],[0m
[0;32m                            "version": "4.2.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v4.2.0",[0m
[0;32m                                "version": "4.2.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v4.2"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v5.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\", \"metadata\": {\"name\": \"db2ucluster-sample\"}, \"spec\": {\"size\": 1, \"account\": {\"privileged\": true}, \"license\": {\"accept\": false}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}, \"name\": \"meta\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"data\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"backup\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}, \"name\": \"tempts\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}, \"name\": \"archivelogs\"}], \"environment\": {\"dbType\": \"db2oltp\"}}}, {\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uInstance\", \"metadata\": {\"name\": \"db2uinstance-sample\"}, \"spec\": {\"nodes\": 1, \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"license\": {\"accept\": false}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}, \"name\": \"meta\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"data\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"backup\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}, \"name\": \"tempts\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}, \"name\": \"archivelogs\"}], \"environment\": {\"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"volumePerPartition\": true, \"total\": 2}, \"dbType\": \"db2wh\"}}}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\", \"metadata\": {\"name\": \"db2ubackup-test\"}, \"spec\": {\"db2uName\": \"db2u-test\", \"databaseBackup\": {\"type\": \"offline\", \"dbName\": \"BLUDB\", \"backupTarget\": {\"vendor\": \"disk\"}}}}, {\"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\", \"metadata\": {\"name\": \"db2ulogstream-test\"}, \"spec\": {\"configurations\": [{\"type\": \"audit\", \"connection\": \"cp4d\", \"format\": \"cadf\"}], \"connections\": {\"cp4d\": {\"authType\": \"tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\", \"credentials\": \"db2oltp-internal-tls\"}}}}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\", \"metadata\": {\"name\": \"db2urestore-test\"}, \"spec\": {\"db2uName\": \"db2u-test\", \"db2uBackup\": \"db2ubackup-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:916793859860cda07c78feefb72b8efaacf2efcd379ce95cc4024ff8b61f8097",[0m
[0;32m                                "createdAt": "2023-11-17 03:52:04.519760",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <5.0.0",[0m
[0;32m                                "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:916793859860cda07c78feefb72b8efaacf2efcd379ce95cc4024ff8b61f8097",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:2a74a79df5b3a8cc6de4911c6461f854a71831b17cdf2e49f29976ff7c7b6ca7"[0m
[0;32m                            ],[0m
[0;32m                            "version": "5.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v5.0.0",[0m
[0;32m                                "version": "5.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v5.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v5.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"metadata\": {\"name\": \"db2ucluster-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\", \"spec\": {\"environment\": {\"dbType\": \"db2oltp\"}, \"license\": {\"accept\": false}, \"storage\": [{\"name\": \"meta\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}}, {\"name\": \"data\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"backup\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"tempts\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}}, {\"name\": \"archivelogs\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}}], \"account\": {\"privileged\": true}, \"size\": 1, \"version\": \"11.5.8.0-cn7\"}}, {\"metadata\": {\"name\": \"db2uinstance-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uInstance\", \"spec\": {\"environment\": {\"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"total\": 2, \"volumePerPartition\": true}, \"dbType\": \"db2wh\"}, \"nodes\": 1, \"license\": {\"accept\": false}, \"storage\": [{\"name\": \"meta\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}}, {\"name\": \"data\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"backup\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"tempts\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}}, {\"name\": \"archivelogs\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}}], \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"version\": \"11.5.8.0-cn7\"}}, {\"metadata\": {\"name\": \"db2ubackup-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\", \"spec\": {\"db2uName\": \"db2u-test\", \"databaseBackup\": {\"backupTarget\": {\"vendor\": \"disk\"}, \"dbName\": \"BLUDB\", \"type\": \"offline\"}}}, {\"metadata\": {\"name\": \"db2ulogstream-test\"}, \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\", \"spec\": {\"configurations\": [{\"type\": \"audit\", \"format\": \"cadf\", \"connection\": \"cp4d\"}], \"connections\": {\"cp4d\": {\"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}}}, {\"metadata\": {\"name\": \"db2urestore-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\", \"spec\": {\"db2uName\": \"db2u-test\", \"db2uBackup\": \"db2ubackup-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:5b3fcfd4883a02a0951b8ed25eb51f3a09f1bfcae1be0e6decad466e61f0a083",[0m
[0;32m                                "createdAt": "2024-01-17 21:02:04.389807",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": "2.0.0 <5.1.0",[0m
[0;32m                                "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:5b3fcfd4883a02a0951b8ed25eb51f3a09f1bfcae1be0e6decad466e61f0a083",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:670dcb509113730a5559b959750a1e65ba48648579a74e33e0c05782dc933515"[0m
[0;32m                            ],[0m
[0;32m                            "version": "5.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v5.1.0",[0m
[0;32m                                "version": "5.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v5.1"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "defaultChannel": "v110509.0",[0m
[0;32m                "packageName": "db2u-operator",[0m
[0;32m                "provider": {[0m
[0;32m                    "name": "IBM"[0m
[0;32m                }[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "ansible_facts": {[0m
[0;32m        "db2_channel": "v110509.0"[0m
[0;32m    },[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Db2 Channel ............................ v110509.0"[0m
[0;32m    ][0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "v1",[0m
[0;33m        "kind": "Namespace",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"db2u\"}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:33:32Z",[0m
[0;33m            "labels": {[0m
[0;33m                "kubernetes.io/metadata.name": "db2u"[0m
[0;33m            },[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            },[0m
[0;33m                            "f:labels": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubernetes.io/metadata.name": {}[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:33:32Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u",[0m
[0;33m            "resourceVersion": "10106398",[0m
[0;33m            "uid": "8ef998d3-c3bf-48ae-bd68-aac6f30eb1da"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "finalizers": [[0m
[0;33m                "kubernetes"[0m
[0;33m            ][0m
[0;33m        },[0m
[0;33m        "status": {[0m
[0;33m            "phase": "Active"[0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",[0m
[0;33m    "changed": true[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include": "tasks/delete_db2_operand_request.yml",[0m
[0;32m    "include_args": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "apps/v1",[0m
[0;32m            "kind": "Deployment",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "deployment.kubernetes.io/revision": "2"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-14T06:26:14Z",[0m
[0;32m                "generation": 4,[0m
[0;32m                "labels": {[0m
[0;32m                    "olm.deployment-spec-hash": "7467fc9b4",[0m
[0;32m                    "olm.owner": "operand-deployment-lifecycle-manager.v1.21.11",[0m
[0;32m                    "olm.owner.kind": "ClusterServiceVersion",[0m
[0;32m                    "olm.owner.namespace": "ibm-common-services",[0m
[0;32m                    "operators.coreos.com/ibm-odlm.ibm-common-services": ""[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apps/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    "f:operators.coreos.com/ibm-odlm.ibm-common-services": {}[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "Go-http-client",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T06:26:36Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apps/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:olm.deployment-spec-hash": {},[0m
[0;32m                                    "f:olm.owner": {},[0m
[0;32m                                    "f:olm.owner.kind": {},[0m
[0;32m                                    "f:olm.owner.namespace": {}[0m
[0;32m                                },[0m
[0;32m                                "f:ownerReferences": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "k:{\"uid\":\"0509b30f-cdb8-435e-a5e6-9e623ba5c0f3\"}": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                "f:progressDeadlineSeconds": {},[0m
[0;32m                                "f:replicas": {},[0m
[0;32m                                "f:revisionHistoryLimit": {},[0m
[0;32m                                "f:selector": {},[0m
[0;32m                                "f:strategy": {[0m
[0;32m                                    "f:rollingUpdate": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:maxSurge": {},[0m
[0;32m                                        "f:maxUnavailable": {}[0m
[0;32m                                    },[0m
[0;32m                                    "f:type": {}[0m
[0;32m                                },[0m
[0;32m                                "f:template": {[0m
[0;32m                                    "f:metadata": {[0m
[0;32m                                        "f:annotations": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:alm-examples": {},[0m
[0;32m                                            "f:capabilities": {},[0m
[0;32m                                            "f:categories": {},[0m
[0;32m                                            "f:certified": {},[0m
[0;32m                                            "f:containerImage": {},[0m
[0;32m                                            "f:createdAt": {},[0m
[0;32m                                            "f:description": {},[0m
[0;32m                                            "f:olm.operatorGroup": {},[0m
[0;32m                                            "f:olm.operatorNamespace": {},[0m
[0;32m                                            "f:olm.skipRange": {},[0m
[0;32m                                            "f:olm.targetNamespaces": {},[0m
[0;32m                                            "f:operatorframework.io/properties": {},[0m
[0;32m                                            "f:operators.openshift.io/infrastructure-features": {},[0m
[0;32m                                            "f:operators.operatorframework.io/builder": {},[0m
[0;32m                                            "f:operators.operatorframework.io/project_layout": {},[0m
[0;32m                                            "f:productID": {},[0m
[0;32m                                            "f:productMetric": {},[0m
[0;32m                                            "f:productName": {},[0m
[0;32m                                            "f:repository": {},[0m
[0;32m                                            "f:support": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:labels": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:app.kubernetes.io/instance": {},[0m
[0;32m                                            "f:app.kubernetes.io/managed-by": {},[0m
[0;32m                                            "f:app.kubernetes.io/name": {},[0m
[0;32m                                            "f:intent": {},[0m
[0;32m                                            "f:name": {}[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    "f:spec": {[0m
[0;32m                                        "f:affinity": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:nodeAffinity": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "f:containers": {[0m
[0;32m                                            "k:{\"name\":\"manager\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:args": {},[0m
[0;32m                                                "f:command": {},[0m
[0;32m                                                "f:env": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"name\":\"INSTALL_SCOPE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"ISOLATED_MODE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"OPERATORCHECKER_MODE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"OPERATOR_CONDITION_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"OPERATOR_NAMESPACE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"WATCH_NAMESPACE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:configMapKeyRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:image": {},[0m
[0;32m                                                "f:imagePullPolicy": {},[0m
[0;32m                                                "f:livenessProbe": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:failureThreshold": {},[0m
[0;32m                                                    "f:httpGet": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:path": {},[0m
[0;32m                                                        "f:port": {},[0m
[0;32m                                                        "f:scheme": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:initialDelaySeconds": {},[0m
[0;32m                                                    "f:periodSeconds": {},[0m
[0;32m                                                    "f:successThreshold": {},[0m
[0;32m                                                    "f:timeoutSeconds": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:readinessProbe": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:failureThreshold": {},[0m
[0;32m                                                    "f:httpGet": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:path": {},[0m
[0;32m                                                        "f:port": {},[0m
[0;32m                                                        "f:scheme": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:initialDelaySeconds": {},[0m
[0;32m                                                    "f:periodSeconds": {},[0m
[0;32m                                                    "f:successThreshold": {},[0m
[0;32m                                                    "f:timeoutSeconds": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:resources": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:limits": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:requests": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:securityContext": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:allowPrivilegeEscalation": {},[0m
[0;32m                                                    "f:capabilities": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:drop": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:privileged": {},[0m
[0;32m                                                    "f:readOnlyRootFilesystem": {},[0m
[0;32m                                                    "f:runAsNonRoot": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:terminationMessagePath": {},[0m
[0;32m                                                "f:terminationMessagePolicy": {}[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "f:dnsPolicy": {},[0m
[0;32m                                        "f:restartPolicy": {},[0m
[0;32m                                        "f:schedulerName": {},[0m
[0;32m                                        "f:securityContext": {},[0m
[0;32m                                        "f:serviceAccount": {},[0m
[0;32m                                        "f:serviceAccountName": {},[0m
[0;32m                                        "f:terminationGracePeriodSeconds": {}[0m
[0;32m                                    }[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "olm",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T06:26:36Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apps/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:deployment.kubernetes.io/revision": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:status": {[0m
[0;32m                                "f:availableReplicas": {},[0m
[0;32m                                "f:conditions": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "k:{\"type\":\"Available\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:lastTransitionTime": {},[0m
[0;32m                                        "f:lastUpdateTime": {},[0m
[0;32m                                        "f:message": {},[0m
[0;32m                                        "f:reason": {},[0m
[0;32m                                        "f:status": {},[0m
[0;32m                                        "f:type": {}[0m
[0;32m                                    },[0m
[0;32m                                    "k:{\"type\":\"Progressing\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:lastTransitionTime": {},[0m
[0;32m                                        "f:lastUpdateTime": {},[0m
[0;32m                                        "f:message": {},[0m
[0;32m                                        "f:reason": {},[0m
[0;32m                                        "f:status": {},[0m
[0;32m                                        "f:type": {}[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:observedGeneration": {},[0m
[0;32m                                "f:readyReplicas": {},[0m
[0;32m                                "f:replicas": {},[0m
[0;32m                                "f:updatedReplicas": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "kube-controller-manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-14T06:26:56Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "operand-deployment-lifecycle-manager",[0m
[0;32m                "namespace": "ibm-common-services",[0m
[0;32m                "ownerReferences": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;32m                        "blockOwnerDeletion": false,[0m
[0;32m                        "controller": false,[0m
[0;32m                        "kind": "ClusterServiceVersion",[0m
[0;32m                        "name": "operand-deployment-lifecycle-manager.v1.21.11",[0m
[0;32m                        "uid": "0509b30f-cdb8-435e-a5e6-9e623ba5c0f3"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "resourceVersion": "10035498",[0m
[0;32m                "uid": "b3b21150-158f-4b93-b329-53aea407d569"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "progressDeadlineSeconds": 600,[0m
[0;32m                "replicas": 1,[0m
[0;32m                "revisionHistoryLimit": 1,[0m
[0;32m                "selector": {[0m
[0;32m                    "matchLabels": {[0m
[0;32m                        "name": "operand-deployment-lifecycle-manager"[0m
[0;32m                    }[0m
[0;32m                },[0m
[0;32m                "strategy": {[0m
[0;32m                    "rollingUpdate": {[0m
[0;32m                        "maxSurge": "25%",[0m
[0;32m                        "maxUnavailable": "25%"[0m
[0;32m                    },[0m
[0;32m                    "type": "RollingUpdate"[0m
[0;32m                },[0m
[0;32m                "template": {[0m
[0;32m                    "metadata": {[0m
[0;32m                        "annotations": {[0m
[0;32m                            "alm-examples": "[\n  {\n    \"apiVersion\": \"operator.ibm.com/v1alpha1\",\n    \"kind\": \"OperandBindInfo\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/managed-by\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/name\": \"operand-deployment-lifecycle-manager\"\n      },\n      \"name\": \"example-service\"\n    },\n    \"spec\": {\n      \"bindings\": {\n        \"public\": {\n          \"configmap\": \"mongodb-configmap\",\n          \"secret\": \"mongodb-secret\"\n        }\n      },\n      \"description\": \"Binding information that should be accessible to MongoDB adopters\",\n      \"operand\": \"mongodb-atlas-kubernetes\",\n      \"registry\": \"example-service\"\n    }\n  },\n  {\n    \"apiVersion\": \"operator.ibm.com/v1alpha1\",\n    \"kind\": \"OperandConfig\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/managed-by\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/name\": \"operand-deployment-lifecycle-manager\"\n      },\n      \"name\": \"example-service\"\n    },\n    \"spec\": {\n      \"services\": [\n        {\n          \"name\": \"jaeger\",\n          \"spec\": {\n            \"jaeger\": {\n              \"strategy\": \"allinone\"\n            }\n          }\n        },\n        {\n          \"name\": \"mongodb-atlas-kubernetes\",\n          \"spec\": {\n            \"atlasDeployment\": {\n              \"deploymentSpec\": {\n                \"name\": \"test-deployment\"\n              },\n              \"projectRef\": {\n                \"name\": \"my-project\"\n              }\n            }\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"operator.ibm.com/v1alpha1\",\n    \"kind\": \"OperandRegistry\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/managed-by\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/name\": \"operand-deployment-lifecycle-manager\"\n      },\n      \"name\": \"example-service\"\n    },\n    \"spec\": {\n      \"operators\": [\n        {\n          \"channel\": \"stable\",\n          \"installMode\": \"cluster\",\n          \"name\": \"jaeger\",\n          \"namespace\": \"default\",\n          \"packageName\": \"jaeger\",\n          \"sourceName\": \"community-operators\",\n          \"sourceNamespace\": \"openshift-marketplace\"\n        },\n        {\n          \"channel\": \"stable\",\n          \"name\": \"mongodb-atlas-kubernetes\",\n          \"namespace\": \"default\",\n          \"packageName\": \"mongodb-atlas-kubernetes\",\n          \"sourceName\": \"community-operators\",\n          \"sourceNamespace\": \"openshift-marketplace\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"operator.ibm.com/v1alpha1\",\n    \"kind\": \"OperandRequest\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/managed-by\": \"operand-deployment-lifecycle-manager\",\n        \"app.kubernetes.io/name\": \"operand-deployment-lifecycle-manager\"\n      },\n      \"name\": \"example-service\"\n    },\n    \"spec\": {\n      \"requests\": [\n        {\n          \"operands\": [\n            {\n              \"name\": \"jaeger\"\n            },\n            {\n              \"name\": \"mongodb-atlas-kubernetes\"\n            }\n          ],\n          \"registry\": \"example-service\"\n        }\n      ]\n    }\n  }\n]",[0m
[0;32m                            "capabilities": "Seamless Upgrades",[0m
[0;32m                            "categories": "Developer Tools, Monitoring, Logging & Tracing, Security",[0m
[0;32m                            "certified": "false",[0m
[0;32m                            "containerImage": "icr.io/cpopen/odlm@sha256:1485f0e0e634a73ffdccff6d0943c7e25c52d0e1beff8c2ad8cfe972720514db",[0m
[0;32m                            "createdAt": "2020-11-12T17:05:48Z",[0m
[0;32m                            "description": "The Operand Deployment Lifecycle Manager provides a Kubernetes CRD-based API to manage the lifecycle of operands.",[0m
[0;32m                            "olm.operatorGroup": "operatorgroup",[0m
[0;32m                            "olm.operatorNamespace": "ibm-common-services",[0m
[0;32m                            "olm.skipRange": ">=1.2.0 <1.21.11",[0m
[0;32m                            "olm.targetNamespaces": "ibm-common-services",[0m
[0;32m                            "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.ibm.com\",\"kind\":\"OperandBindInfo\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.ibm.com\",\"kind\":\"OperandConfig\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.ibm.com\",\"kind\":\"OperandRegistry\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"operator.ibm.com\",\"kind\":\"OperandRequest\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"ibm-odlm\",\"version\":\"1.21.11\"}}]}",[0m
[0;32m                            "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                            "operators.operatorframework.io/builder": "operator-sdk-v1.24.0",[0m
[0;32m                            "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                            "productID": "068a62892a1e4db39641342e592daa25",[0m
[0;32m                            "productMetric": "FREE",[0m
[0;32m                            "productName": "IBM Cloud Platform Common Services",[0m
[0;32m                            "repository": "https://github.com/IBM/operand-deployment-lifecycle-manager",[0m
[0;32m                            "support": "IBM"[0m
[0;32m                        },[0m
[0;32m                        "creationTimestamp": null,[0m
[0;32m                        "labels": {[0m
[0;32m                            "app.kubernetes.io/instance": "operand-deployment-lifecycle-manager",[0m
[0;32m                            "app.kubernetes.io/managed-by": "operand-deployment-lifecycle-manager",[0m
[0;32m                            "app.kubernetes.io/name": "operand-deployment-lifecycle-manager",[0m
[0;32m                            "intent": "projected-odlm",[0m
[0;32m                            "name": "operand-deployment-lifecycle-manager"[0m
[0;32m                        }[0m
[0;32m                    },[0m
[0;32m                    "spec": {[0m
[0;32m                        "affinity": {[0m
[0;32m                            "nodeAffinity": {[0m
[0;32m                                "requiredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                    "nodeSelectorTerms": [[0m
[0;32m                                        {[0m
[0;32m                                            "matchExpressions": [[0m
[0;32m                                                {[0m
[0;32m                                                    "key": "kubernetes.io/arch",[0m
[0;32m                                                    "operator": "In",[0m
[0;32m                                                    "values": [[0m
[0;32m                                                        "amd64",[0m
[0;32m                                                        "ppc64le",[0m
[0;32m                                                        "s390x"[0m
[0;32m                                                    ][0m
[0;32m                                                }[0m
[0;32m                                            ][0m
[0;32m                                        }[0m
[0;32m                                    ][0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "containers": [[0m
[0;32m                            {[0m
[0;32m                                "args": [[0m
[0;32m                                    "-v=1"[0m
[0;32m                                ],[0m
[0;32m                                "command": [[0m
[0;32m                                    "/manager"[0m
[0;32m                                ],[0m
[0;32m                                "env": [[0m
[0;32m                                    {[0m
[0;32m                                        "name": "OPERATOR_NAMESPACE",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.namespace"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "WATCH_NAMESPACE",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "configMapKeyRef": {[0m
[0;32m                                                "key": "namespaces",[0m
[0;32m                                                "name": "odlm-scope"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "INSTALL_SCOPE",[0m
[0;32m                                        "value": "namespaced"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "ISOLATED_MODE",[0m
[0;32m                                        "value": "false"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "OPERATORCHECKER_MODE",[0m
[0;32m                                        "value": "true"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "OPERATOR_CONDITION_NAME",[0m
[0;32m                                        "value": "operand-deployment-lifecycle-manager.v1.21.11"[0m
[0;32m                                    }[0m
[0;32m                                ],[0m
[0;32m                                "image": "icr.io/cpopen/odlm@sha256:1485f0e0e634a73ffdccff6d0943c7e25c52d0e1beff8c2ad8cfe972720514db",[0m
[0;32m                                "imagePullPolicy": "IfNotPresent",[0m
[0;32m                                "livenessProbe": {[0m
[0;32m                                    "failureThreshold": 10,[0m
[0;32m                                    "httpGet": {[0m
[0;32m                                        "path": "/readyz",[0m
[0;32m                                        "port": 8081,[0m
[0;32m                                        "scheme": "HTTP"[0m
[0;32m                                    },[0m
[0;32m                                    "initialDelaySeconds": 120,[0m
[0;32m                                    "periodSeconds": 60,[0m
[0;32m                                    "successThreshold": 1,[0m
[0;32m                                    "timeoutSeconds": 10[0m
[0;32m                                },[0m
[0;32m                                "name": "manager",[0m
[0;32m                                "readinessProbe": {[0m
[0;32m                                    "failureThreshold": 10,[0m
[0;32m                                    "httpGet": {[0m
[0;32m                                        "path": "/healthz",[0m
[0;32m                                        "port": 8081,[0m
[0;32m                                        "scheme": "HTTP"[0m
[0;32m                                    },[0m
[0;32m                                    "initialDelaySeconds": 5,[0m
[0;32m                                    "periodSeconds": 20,[0m
[0;32m                                    "successThreshold": 1,[0m
[0;32m                                    "timeoutSeconds": 3[0m
[0;32m                                },[0m
[0;32m                                "resources": {[0m
[0;32m                                    "limits": {[0m
[0;32m                                        "cpu": "500m",[0m
[0;32m                                        "memory": "512Mi"[0m
[0;32m                                    },[0m
[0;32m                                    "requests": {[0m
[0;32m                                        "cpu": "200m",[0m
[0;32m                                        "memory": "200Mi"[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "securityContext": {[0m
[0;32m                                    "allowPrivilegeEscalation": false,[0m
[0;32m                                    "capabilities": {[0m
[0;32m                                        "drop": [[0m
[0;32m                                            "ALL"[0m
[0;32m                                        ][0m
[0;32m                                    },[0m
[0;32m                                    "privileged": false,[0m
[0;32m                                    "readOnlyRootFilesystem": true,[0m
[0;32m                                    "runAsNonRoot": true[0m
[0;32m                                },[0m
[0;32m                                "terminationMessagePath": "/dev/termination-log",[0m
[0;32m                                "terminationMessagePolicy": "File"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "dnsPolicy": "ClusterFirst",[0m
[0;32m                        "restartPolicy": "Always",[0m
[0;32m                        "schedulerName": "default-scheduler",[0m
[0;32m                        "securityContext": {},[0m
[0;32m                        "serviceAccount": "operand-deployment-lifecycle-manager",[0m
[0;32m                        "serviceAccountName": "operand-deployment-lifecycle-manager",[0m
[0;32m                        "terminationGracePeriodSeconds": 10[0m
[0;32m                    }[0m
[0;32m                }[0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "availableReplicas": 1,[0m
[0;32m                "conditions": [[0m
[0;32m                    {[0m
[0;32m                        "lastTransitionTime": "2024-04-14T06:26:35Z",[0m
[0;32m                        "lastUpdateTime": "2024-04-14T06:26:35Z",[0m
[0;32m                        "message": "Deployment has minimum availability.",[0m
[0;32m                        "reason": "MinimumReplicasAvailable",[0m
[0;32m                        "status": "True",[0m
[0;32m                        "type": "Available"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "lastTransitionTime": "2024-04-14T06:26:14Z",[0m
[0;32m                        "lastUpdateTime": "2024-04-14T06:26:56Z",[0m
[0;32m                        "message": "ReplicaSet \"operand-deployment-lifecycle-manager-677d9dcc4c\" has successfully progressed.",[0m
[0;32m                        "reason": "NewReplicaSetAvailable",[0m
[0;32m                        "status": "True",[0m
[0;32m                        "type": "Progressing"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "observedGeneration": 4,[0m
[0;32m                "readyReplicas": 1,[0m
[0;32m                "replicas": 1,[0m
[0;32m                "updatedReplicas": 1[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "duration": 0,[0m
[0;32m    "method": "delete",[0m
[0;32m    "result": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "duration": 0,[0m
[0;32m    "method": "delete",[0m
[0;32m    "result": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "duration": 0,[0m
[0;32m    "method": "delete",[0m
[0;32m    "result": {}[0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include": "/home/admin/.ansible/collections/ansible_collections/ibm/mas_devops/roles/db2/../../common_tasks/create_subscription.yml",[0m
[0;32m    "include_args": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "packages.operators.coreos.com/v1",[0m
[0;32m            "kind": "PackageManifest",[0m
[0;32m            "metadata": {[0m
[0;32m                "creationTimestamp": "2024-04-14T06:23:04Z",[0m
[0;32m                "labels": {[0m
[0;32m                    "catalog": "ibm-operator-catalog",[0m
[0;32m                    "catalog-namespace": "openshift-marketplace",[0m
[0;32m                    "operatorframework.io/arch.amd64": "supported",[0m
[0;32m                    "operatorframework.io/arch.ppc64le": "supported",[0m
[0;32m                    "operatorframework.io/arch.s390x": "supported",[0m
[0;32m                    "operatorframework.io/os.linux": "supported",[0m
[0;32m                    "provider": "IBM",[0m
[0;32m                    "provider-url": ""[0m
[0;32m                },[0m
[0;32m                "name": "db2u-operator",[0m
[0;32m                "namespace": "openshift-marketplace"[0m
[0;32m            },[0m
[0;32m            "spec": {},[0m
[0;32m            "status": {[0m
[0;32m                "catalogSource": "ibm-operator-catalog",[0m
[0;32m                "catalogSourceDisplayName": "IBM Maximo Operators (v8-amd64)",[0m
[0;32m                "catalogSourceNamespace": "openshift-marketplace",[0m
[0;32m                "catalogSourcePublisher": "IBM",[0m
[0;32m                "channels": [[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v1.0.11",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.5.1-cn4\"\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHadr\",\n    \"metadata\": {\n      \"name\": \"db2uhadr-sample\"\n    },\n    \"spec\": {\n      \"primary\": {\n        \"db2uCluster\": \"db2u-oltp-1\"\n      },\n      \"standby\": {\n        \"db2uCluster\": \"db2u-oltp-2\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHelmMigration\",\n    \"metadata\": {\n      \"name\": \"db2uhelmmigration-sample\"\n    },\n    \"spec\": {\n      \"db2uClusterSpec\": {\n        \"version\": \"11.5.5.1-cn4\"\n      },\n      \"db2uHelmClusterSpec\": {\n        \"release\": \"db2uhelm-sample-11.5.3.0\",\n        \"version\": \"11.5.3.0\"\n      }\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "ibmcom/db2u-operator",[0m
[0;32m                                "createdAt": "2022-01-07 01:55:04.150271",[0m
[0;32m                                "olm.skipRange": ">=1.0.7 <1.0.11",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.1.0",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v2",[0m
[0;32m                                "support": "Db2U Development Team @ IBM"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation: For additional information https://ibm.biz/BdqNGJ License: By installing this product you accept the license terms https://ibm.biz/BdqNGh",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments Documentation: For additional information https://ibm.biz/BdqNGJ License: By installing this product you accept the license terms https://ibm.biz/BdqNGh",[0m
[0;32m                                        "displayName": "Db2u Hadr",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2 Documentation: For additional information https://ibm.biz/BdqNGJ License: By installing this product you accept the license terms https://ibm.biz/BdqNGh",[0m
[0;32m                                        "displayName": "Db2u Helm Migration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.5.1-cn4\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat Openshift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n### Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing the Db2U Operator\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n## SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following SCC\n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.1-cn4\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "docker.io/ibmcom/db2u-operator@sha256:2839d3fa84da960686bc90a2d81e56a37ad4a3051e512b5e1d6abcd4830ca10e"[0m
[0;32m                            ],[0m
[0;32m                            "version": "1.0.11"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.11",[0m
[0;32m                                "version": "1.0.11"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.10",[0m
[0;32m                                "version": "1.0.10"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.9",[0m
[0;32m                                "version": "1.0.9"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.6",[0m
[0;32m                                "version": "1.0.6"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.5",[0m
[0;32m                                "version": "1.0.5"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.4",[0m
[0;32m                                "version": "1.0.4"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.2",[0m
[0;32m                                "version": "1.0.2"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.0.1",[0m
[0;32m                                "version": "1.0.1"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v1.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v1.1.13",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn3\"\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"BigSQL\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"bigsql-sample\"\n    },\n    \"spec\": {\n      \"mode\": \"BigSQL\",\n      \"size\": 1,\n      \"version\": \"7.2.0.0\"\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHadr\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2uhadr-sample\"\n    },\n    \"spec\": {\n      \"primary\": {\n        \"db2uCluster\": \"db2u-oltp-1\"\n      },\n      \"standby\": {\n        \"db2uCluster\": \"db2u-oltp-2\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1alpha1\",\n    \"kind\": \"Db2uHelmMigration\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2uhelmmigration-sample\"\n    },\n    \"spec\": {\n      \"db2uClusterSpec\": {\n        \"version\": \"11.5.7.0-cn3\"\n      },\n      \"db2uHelmClusterSpec\": {\n        \"release\": \"db2uhelm-sample-11.5.3.0\",\n        \"version\": \"11.5.3.0\"\n      }\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:7735714144bdcedf53c1c737380e85ceb1022f4a6e6335476c42e2cca615fdfb",[0m
[0;32m                                "createdAt": "2022-04-09 23:01:58.489899",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <1.1.13",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productName": "IBM Db2U Operator",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics.  Internal objects",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP.  Internal objects",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introductionx\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat Openshift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.0.11.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.0.11-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.0.11-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.0.11.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.0.11-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.0.11-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.0.11\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following SCC\n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:7735714144bdcedf53c1c737380e85ceb1022f4a6e6335476c42e2cca615fdfb"[0m
[0;32m                            ],[0m
[0;32m                            "version": "1.1.13"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.13",[0m
[0;32m                                "version": "1.1.13"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.12",[0m
[0;32m                                "version": "1.1.12"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.11",[0m
[0;32m                                "version": "1.1.11"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.10",[0m
[0;32m                                "version": "1.1.10"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.9",[0m
[0;32m                                "version": "1.1.9"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.8",[0m
[0;32m                                "version": "1.1.8"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.6",[0m
[0;32m                                "version": "1.1.6"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.5",[0m
[0;32m                                "version": "1.1.5"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.4",[0m
[0;32m                                "version": "1.1.4"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.3",[0m
[0;32m                                "version": "1.1.3"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.2",[0m
[0;32m                                "version": "1.1.2"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.1",[0m
[0;32m                                "version": "1.1.1"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v1.1.0",[0m
[0;32m                                "version": "1.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v1.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v110508.0.3",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"spec\": {\"license\": {\"accept\": false}, \"storage\": [{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"meta\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"data\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"backup\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"tempts\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"archivelogs\", \"type\": \"create\"}], \"size\": 1, \"version\": \"s11.5.8.0-cn2\", \"environment\": {\"dbType\": \"db2oltp\"}, \"account\": {\"privileged\": true}}, \"metadata\": {\"name\": \"db2ucluster-sample\"}, \"kind\": \"Db2uCluster\"}, {\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"spec\": {\"nodes\": 1, \"license\": {\"accept\": false}, \"storage\": [{\"spec\": {\"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"meta\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"data\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"]}, \"name\": \"backup\", \"type\": \"create\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"tempts\", \"type\": \"template\"}, {\"spec\": {\"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"]}, \"name\": \"archivelogs\", \"type\": \"create\"}], \"version\": \"s11.5.8.0-cn2\", \"environment\": {\"dbType\": \"db2wh\", \"partitionConfig\": {\"volumePerPartition\": true, \"total\": 2}, \"databases\": [{\"name\": \"BLUDB\"}]}, \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}}, \"metadata\": {\"name\": \"db2uinstance-sample\"}, \"kind\": \"Db2uInstance\"}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"spec\": {\"databaseBackup\": {\"dbName\": \"BLUDB\", \"backupTarget\": {\"vendor\": \"disk\"}, \"type\": \"offline\"}, \"db2uName\": \"db2u-test\"}, \"metadata\": {\"name\": \"db2ubackup-test\"}, \"kind\": \"Db2uBackup\"}, {\"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"spec\": {\"connections\": {\"cp4d\": {\"endpoint\": \"https://zen-audit-svc.zen:9880/records\", \"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\"}}, \"configurations\": [{\"format\": \"cadf\", \"connection\": \"cp4d\", \"type\": \"audit\"}]}, \"metadata\": {\"name\": \"db2ulogstream-test\"}, \"kind\": \"Db2uLogStream\"}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}, \"metadata\": {\"name\": \"db2urestore-test\"}, \"kind\": \"Db2uRestore\"}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:3d75489519c8597270ac951864cd24064753bccdd552c96b8c78b02bfd2888f2",[0m
[0;32m                                "createdAt": "2023-10-04 11:48:01.556765",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=110508.0.0 <110508.0.3",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "s11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version s11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:3d75489519c8597270ac951864cd24064753bccdd552c96b8c78b02bfd2888f2",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:6b0101afecfc185a357916e0391869d29307073d4419137d9150062e697c30fc"[0m
[0;32m                            ],[0m
[0;32m                            "version": "110508.0.3"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v110508.0.3",[0m
[0;32m                                "version": "110508.0.3"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v110508.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v110509.0.1",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"spec\": {\"account\": {\"privileged\": true}, \"environment\": {\"dbType\": \"db2oltp\"}, \"version\": \"s11.5.9.0-cn1\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}, \"size\": 1}, \"metadata\": {\"name\": \"db2ucluster-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\"}, {\"spec\": {\"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"environment\": {\"dbType\": \"db2wh\", \"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"volumePerPartition\": true, \"total\": 2}}, \"version\": \"s11.5.9.0-cn1\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}, \"nodes\": 1}, \"metadata\": {\"name\": \"db2uinstance-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uInstance\"}, {\"spec\": {\"db2uName\": \"db2u-test\", \"databaseBackup\": {\"dbName\": \"BLUDB\", \"type\": \"offline\", \"backupTarget\": {\"vendor\": \"disk\"}}}, \"metadata\": {\"name\": \"db2ubackup-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\"}, {\"spec\": {\"configurations\": [{\"type\": \"audit\", \"format\": \"cadf\", \"connection\": \"cp4d\"}], \"connections\": {\"cp4d\": {\"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\", \"authType\": \"tls\"}}}, \"metadata\": {\"name\": \"db2ulogstream-test\"}, \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\"}, {\"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}, \"metadata\": {\"name\": \"db2urestore-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\"}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:03b322cd5e248a1b4d4d18eb7fad9debb687a8e93132fd50ef2db8dc10ae1f02",[0m
[0;32m                                "createdAt": "2024-02-17 09:21:09.575024",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=110508.0.0 <110509.0.1",[0m
[0;32m                                "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "s11.5.9.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version s11.5.9.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.2.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.2-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.2-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.2\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:cd26af5b0edb41f548c2857541df1e5d424d01b98e2516fd93698a091e8ba62c",[0m
[0;32m                                "icr.io/cpopen/ibm-db2uoperator-bundle@sha256:6ce3e3a63c4c85f2f983ee5f2b77025a973db4035f9dfb402a3919970a62d4fd",[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:03b322cd5e248a1b4d4d18eb7fad9debb687a8e93132fd50ef2db8dc10ae1f02"[0m
[0;32m                            ],[0m
[0;32m                            "version": "110509.0.1"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v110509.0.1",[0m
[0;32m                                "version": "110509.0.1"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v110509.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v2.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn5\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:e15b6ad411f3246f767c7c49158b2aafb88550b151962b8881691b9b18509a60",[0m
[0;32m                                "createdAt": "2022-06-14 18:17:26.685778",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <2.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productID": "5737-K73",[0m
[0;32m                                "productMetric": "VIRTUAL_PROCESSOR_CORE",[0m
[0;32m                                "productName": "IBM Db2U Operator",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:e15b6ad411f3246f767c7c49158b2aafb88550b151962b8881691b9b18509a60"[0m
[0;32m                            ],[0m
[0;32m                            "version": "2.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v2.0.0",[0m
[0;32m                                "version": "2.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v2.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v2.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn6\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:807b4bbbdb27e88500f8de7405153315c63a41fccf4e7ae577b5dd5e53e1d08b",[0m
[0;32m                                "createdAt": "2022-07-08 03:46:38.096762",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <2.1.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productID": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Cloud Pak for Data Common Database Services",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:807b4bbbdb27e88500f8de7405153315c63a41fccf4e7ae577b5dd5e53e1d08b"[0m
[0;32m                            ],[0m
[0;32m                            "version": "2.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v2.1.0",[0m
[0;32m                                "version": "2.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v2.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v2.2.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn6\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:a2c43d2ac1b4b479d32cc3b4caaea53749c2f07c493565c2e3b8137af30fabf2",[0m
[0;32m                                "createdAt": "2022-09-20 19:47:50.881488",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <2.2.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.7.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.7.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-4.5.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-4.5.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-4.5.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=4.5.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:a2c43d2ac1b4b479d32cc3b4caaea53749c2f07c493565c2e3b8137af30fabf2"[0m
[0;32m                            ],[0m
[0;32m                            "version": "2.2.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v2.2.0",[0m
[0;32m                                "version": "2.2.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v2.2"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v3.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.7.0-cn6\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:a0cead50f55b5ea7883229c2b69ba27842d3833cc5f27e4bf255e4e62c65b9e1",[0m
[0;32m                                "createdAt": "2022-11-11 23:41:55.979015",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <3.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:a0cead50f55b5ea7883229c2b69ba27842d3833cc5f27e4bf255e4e62c65b9e1"[0m
[0;32m                            ],[0m
[0;32m                            "version": "3.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v3.0.0",[0m
[0;32m                                "version": "3.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v3.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v3.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.8.0-cn1\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:b8a70a044e5c0217f43e945231bd5c18b06f35d29e1602083a9a84de175422af",[0m
[0;32m                                "createdAt": "2023-01-12 17:58:41.282134",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <3.1.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:b8a70a044e5c0217f43e945231bd5c18b06f35d29e1602083a9a84de175422af"[0m
[0;32m                            ],[0m
[0;32m                            "version": "3.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v3.1.0",[0m
[0;32m                                "version": "3.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v3.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v3.2.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[\n  {\n    \"apiVersion\": \"db2u.databases.ibm.com/v1\",\n    \"kind\": \"Db2uCluster\",\n    \"metadata\": {\n      \"labels\": {\n        \"app.kubernetes.io/instance\": \"db2u-operator\",\n        \"app.kubernetes.io/managed-by\": \"Db2U-Team\",\n        \"app.kubernetes.io/name\": \"db2u-operator\"\n      },\n      \"name\": \"db2ucluster-sample\"\n    },\n    \"spec\": {\n      \"account\": {\n        \"privileged\": true\n      },\n      \"environment\": {\n        \"dbType\": \"db2oltp\"\n      },\n      \"license\": {\n        \"accept\": false\n      },\n      \"size\": 1,\n      \"storage\": [\n        {\n          \"name\": \"share\",\n          \"spec\": {\n            \"accessModes\": [\n              \"ReadWriteMany\"\n            ],\n            \"resources\": {\n              \"requests\": {\n                \"storage\": \"100Gi\"\n              }\n            },\n            \"storageClassName\": \"managed-nfs-storage\"\n          },\n          \"type\": \"create\"\n        }\n      ],\n      \"version\": \"11.5.8.0-cn2\"\n    }\n  }\n]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:7d4999a9a8a074a173337c85a830304adcb4edb282db5e171bbda328e60e2ce3",[0m
[0;32m                                "createdAt": "2023-03-09 19:52:35.719381",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <3.2.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.1.3.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.1.3-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.1.3-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.1.3\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:7d4999a9a8a074a173337c85a830304adcb4edb282db5e171bbda328e60e2ce3"[0m
[0;32m                            ],[0m
[0;32m                            "version": "3.2.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v3.2.0",[0m
[0;32m                                "version": "3.2.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v3.2"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v4.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"metadata\": {\"name\": \"db2ucluster-sample\", \"labels\": {\"app.kubernetes.io/name\": \"db2u-operator\", \"app.kubernetes.io/instance\": \"db2u-operator\", \"app.kubernetes.io/managed-by\": \"Db2U-Team\"}}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\", \"spec\": {\"version\": \"11.5.8.0-cn4\", \"license\": {\"accept\": false}, \"account\": {\"privileged\": true}, \"storage\": [{\"name\": \"share\", \"type\": \"create\", \"spec\": {\"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"managed-nfs-storage\", \"accessModes\": [\"ReadWriteMany\"]}}], \"size\": 1, \"environment\": {\"dbType\": \"db2oltp\"}}}, {\"metadata\": {\"name\": \"db2ubackup-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\", \"spec\": {\"databaseBackup\": {\"dbName\": \"BLUDB\", \"backupTarget\": {\"vendor\": \"disk\"}, \"type\": \"offline\"}, \"db2uName\": \"db2u-test\"}}, {\"metadata\": {\"name\": \"db2ulogstream-test\"}, \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\", \"spec\": {\"configurations\": [{\"format\": \"cadf\", \"connection\": \"cp4d\", \"type\": \"audit\"}], \"connections\": {\"cp4d\": {\"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}}}, {\"metadata\": {\"name\": \"db2urestore-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\", \"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:9e4e3fd2e73db919140fd496d5dd72c68f039354a4e29ce3f1b574a49611a314",[0m
[0;32m                                "createdAt": "2023-06-10 21:25:31.482674",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <4.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:9e4e3fd2e73db919140fd496d5dd72c68f039354a4e29ce3f1b574a49611a314",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:3537c1539b651f2fceac52dd4dc9b2b9a05136d5f9191cfba5013fa33a64b8a4"[0m
[0;32m                            ],[0m
[0;32m                            "version": "4.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v4.0.0",[0m
[0;32m                                "version": "4.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v4.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v4.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"spec\": {\"environment\": {\"dbType\": \"db2oltp\"}, \"license\": {\"accept\": false}, \"account\": {\"privileged\": true}, \"size\": 1, \"version\": \"11.5.8.0-cn4\", \"storage\": [{\"name\": \"share\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"managed-nfs-storage\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}]}, \"kind\": \"Db2uCluster\", \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"metadata\": {\"name\": \"db2ucluster-sample\", \"labels\": {\"app.kubernetes.io/name\": \"db2u-operator\", \"app.kubernetes.io/managed-by\": \"Db2U-Team\", \"app.kubernetes.io/instance\": \"db2u-operator\"}}}, {\"spec\": {\"databaseBackup\": {\"backupTarget\": {\"vendor\": \"disk\"}, \"dbName\": \"BLUDB\", \"type\": \"offline\"}, \"db2uName\": \"db2u-test\"}, \"kind\": \"Db2uBackup\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"db2ubackup-test\"}}, {\"spec\": {\"connections\": {\"cp4d\": {\"credentials\": \"db2oltp-internal-tls\", \"authType\": \"tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}, \"configurations\": [{\"format\": \"cadf\", \"type\": \"audit\", \"connection\": \"cp4d\"}]}, \"kind\": \"Db2uLogStream\", \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"db2ulogstream-test\"}}, {\"spec\": {\"db2uBackup\": \"db2ubackup-test\", \"db2uName\": \"db2u-test\"}, \"kind\": \"Db2uRestore\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"metadata\": {\"name\": \"db2urestore-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "cloudpakId": "eb9998dcc5d24e3eb5b6fb488f750fe2",[0m
[0;32m                                "cloudpakName": "IBM Cloud Pak for Data",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:ca701449fb1ea8be984fd5df169e0e224e39fb3e1ea5e0ae3f60fd6ab2b0d7e8",[0m
[0;32m                                "createdAt": "2023-08-04 17:49:03.000911",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <4.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\", \"db2uinstances.db2u.databases.ibm.com\", \"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Manage the db2u pods  Internal objects",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.3.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.3.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.3.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.3.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:ca701449fb1ea8be984fd5df169e0e224e39fb3e1ea5e0ae3f60fd6ab2b0d7e8",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:d016607e1be938c4b7cc96f330354bb6979c4d06e543dc8e2ba62a8db2eb4fe0"[0m
[0;32m                            ],[0m
[0;32m                            "version": "4.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v4.1.0",[0m
[0;32m                                "version": "4.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v4.1"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v4.2.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"metadata\": {\"name\": \"db2ucluster-sample\"}, \"spec\": {\"size\": 1, \"environment\": {\"dbType\": \"db2oltp\"}, \"account\": {\"privileged\": true}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}}, \"kind\": \"Db2uCluster\", \"apiVersion\": \"db2u.databases.ibm.com/v1\"}, {\"metadata\": {\"name\": \"db2uinstance-sample\"}, \"spec\": {\"environment\": {\"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"total\": 2, \"volumePerPartition\": true}, \"dbType\": \"db2wh\"}, \"nodes\": 1, \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"meta\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"data\"}, {\"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"backup\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}, \"storageClassName\": \"ocs-storagecluster-ceph-rbd\"}, \"type\": \"template\", \"name\": \"tempts\"}, {\"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}, \"storageClassName\": \"ocs-storagecluster-cephfs\"}, \"type\": \"create\", \"name\": \"archivelogs\"}], \"license\": {\"accept\": false}}, \"kind\": \"Db2uInstance\", \"apiVersion\": \"db2u.databases.ibm.com/v1\"}, {\"metadata\": {\"name\": \"db2ubackup-test\"}, \"spec\": {\"databaseBackup\": {\"type\": \"offline\", \"backupTarget\": {\"vendor\": \"disk\"}, \"dbName\": \"BLUDB\"}, \"db2uName\": \"db2u-test\"}, \"kind\": \"Db2uBackup\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\"}, {\"metadata\": {\"name\": \"db2ulogstream-test\"}, \"spec\": {\"connections\": {\"cp4d\": {\"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}, \"configurations\": [{\"format\": \"cadf\", \"connection\": \"cp4d\", \"type\": \"audit\"}]}, \"kind\": \"Db2uLogStream\", \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\"}, {\"metadata\": {\"name\": \"db2urestore-test\"}, \"spec\": {\"db2uName\": \"db2u-test\", \"db2uBackup\": \"db2ubackup-test\"}, \"kind\": \"Db2uRestore\", \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\"}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:2199e37e457011a70644a0dcfc753023ed9b128617255085e4dd0f95f42d6bc4",[0m
[0;32m                                "createdAt": "2023-09-20 23:57:48.985621",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=1.0.11 <110509.0.0",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.4.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.4.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.4.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.4.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:91f5a8a79d695683db78e42e3a23be652fe3fb2c8de8e331d536828fe5a7a241",[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:2199e37e457011a70644a0dcfc753023ed9b128617255085e4dd0f95f42d6bc4"[0m
[0;32m                            ],[0m
[0;32m                            "version": "4.2.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v4.2.0",[0m
[0;32m                                "version": "4.2.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v4.2"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v5.0.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\", \"metadata\": {\"name\": \"db2ucluster-sample\"}, \"spec\": {\"size\": 1, \"account\": {\"privileged\": true}, \"license\": {\"accept\": false}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}, \"name\": \"meta\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"data\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"backup\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}, \"name\": \"tempts\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}, \"name\": \"archivelogs\"}], \"environment\": {\"dbType\": \"db2oltp\"}}}, {\"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uInstance\", \"metadata\": {\"name\": \"db2uinstance-sample\"}, \"spec\": {\"nodes\": 1, \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"license\": {\"accept\": false}, \"version\": \"s11.5.8.0-cn2\", \"storage\": [{\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}, \"name\": \"meta\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"data\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteMany\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}, \"name\": \"backup\"}, {\"type\": \"template\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}, \"name\": \"tempts\"}, {\"type\": \"create\", \"spec\": {\"accessModes\": [\"ReadWriteOnce\"], \"storageClassName\": \"ocs-storagecluster-cephfs\", \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}, \"name\": \"archivelogs\"}], \"environment\": {\"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"volumePerPartition\": true, \"total\": 2}, \"dbType\": \"db2wh\"}}}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\", \"metadata\": {\"name\": \"db2ubackup-test\"}, \"spec\": {\"db2uName\": \"db2u-test\", \"databaseBackup\": {\"type\": \"offline\", \"dbName\": \"BLUDB\", \"backupTarget\": {\"vendor\": \"disk\"}}}}, {\"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\", \"metadata\": {\"name\": \"db2ulogstream-test\"}, \"spec\": {\"configurations\": [{\"type\": \"audit\", \"connection\": \"cp4d\", \"format\": \"cadf\"}], \"connections\": {\"cp4d\": {\"authType\": \"tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\", \"credentials\": \"db2oltp-internal-tls\"}}}}, {\"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\", \"metadata\": {\"name\": \"db2urestore-test\"}, \"spec\": {\"db2uName\": \"db2u-test\", \"db2uBackup\": \"db2ubackup-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:916793859860cda07c78feefb72b8efaacf2efcd379ce95cc4024ff8b61f8097",[0m
[0;32m                                "createdAt": "2023-11-17 03:52:04.519760",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": ">=2.0.0 <5.0.0",[0m
[0;32m                                "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHelmMigration is the API for migrating from a previous Helm deployment of Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2uHelmMigration",[0m
[0;32m                                        "kind": "Db2uHelmMigration",[0m
[0;32m                                        "name": "db2uhelmmigrations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.5.0.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.5.0-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.5.0-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.5.0\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:916793859860cda07c78feefb72b8efaacf2efcd379ce95cc4024ff8b61f8097",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:2a74a79df5b3a8cc6de4911c6461f854a71831b17cdf2e49f29976ff7c7b6ca7"[0m
[0;32m                            ],[0m
[0;32m                            "version": "5.0.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v5.0.0",[0m
[0;32m                                "version": "5.0.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v5.0"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "currentCSV": "db2u-operator.v5.1.0",[0m
[0;32m                        "currentCSVDesc": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "alm-examples": "[{\"metadata\": {\"name\": \"db2ucluster-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uCluster\", \"spec\": {\"environment\": {\"dbType\": \"db2oltp\"}, \"license\": {\"accept\": false}, \"storage\": [{\"name\": \"meta\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}}, {\"name\": \"data\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"backup\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"tempts\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}}, {\"name\": \"archivelogs\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}}], \"account\": {\"privileged\": true}, \"size\": 1, \"version\": \"11.5.8.0-cn7\"}}, {\"metadata\": {\"name\": \"db2uinstance-sample\"}, \"apiVersion\": \"db2u.databases.ibm.com/v1\", \"kind\": \"Db2uInstance\", \"spec\": {\"environment\": {\"databases\": [{\"name\": \"BLUDB\"}], \"partitionConfig\": {\"total\": 2, \"volumePerPartition\": true}, \"dbType\": \"db2wh\"}, \"nodes\": 1, \"license\": {\"accept\": false}, \"storage\": [{\"name\": \"meta\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"50Gi\"}}}}, {\"name\": \"data\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"backup\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteMany\"], \"resources\": {\"requests\": {\"storage\": \"100Gi\"}}}}, {\"name\": \"tempts\", \"type\": \"template\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-ceph-rbd\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"10Gi\"}}}}, {\"name\": \"archivelogs\", \"type\": \"create\", \"spec\": {\"storageClassName\": \"ocs-storagecluster-cephfs\", \"accessModes\": [\"ReadWriteOnce\"], \"resources\": {\"requests\": {\"storage\": \"25Gi\"}}}}], \"account\": {\"securityConfig\": {\"privilegedSysctlInit\": true}}, \"version\": \"11.5.8.0-cn7\"}}, {\"metadata\": {\"name\": \"db2ubackup-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uBackup\", \"spec\": {\"db2uName\": \"db2u-test\", \"databaseBackup\": {\"backupTarget\": {\"vendor\": \"disk\"}, \"dbName\": \"BLUDB\", \"type\": \"offline\"}}}, {\"metadata\": {\"name\": \"db2ulogstream-test\"}, \"apiVersion\": \"db2ulog.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uLogStream\", \"spec\": {\"configurations\": [{\"type\": \"audit\", \"format\": \"cadf\", \"connection\": \"cp4d\"}], \"connections\": {\"cp4d\": {\"authType\": \"tls\", \"credentials\": \"db2oltp-internal-tls\", \"endpoint\": \"https://zen-audit-svc.zen:9880/records\"}}}}, {\"metadata\": {\"name\": \"db2urestore-test\"}, \"apiVersion\": \"db2ubnr.databases.ibm.com/v1alpha1\", \"kind\": \"Db2uRestore\", \"spec\": {\"db2uName\": \"db2u-test\", \"db2uBackup\": \"db2ubackup-test\"}}]",[0m
[0;32m                                "capabilities": "Seamless Upgrades",[0m
[0;32m                                "categories": "Database",[0m
[0;32m                                "certified": "false",[0m
[0;32m                                "containerImage": "icr.io/cpopen/db2u-operator@sha256:5b3fcfd4883a02a0951b8ed25eb51f3a09f1bfcae1be0e6decad466e61f0a083",[0m
[0;32m                                "createdAt": "2024-01-17 21:02:04.389807",[0m
[0;32m                                "description": "The IBM® Db2U Operator allows to deploy IBM Db2",[0m
[0;32m                                "olm.skipRange": "2.0.0 <5.1.0",[0m
[0;32m                                "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",[0m
[0;32m                                "operators.operatorframework.io/builder": "operator-sdk-v1.14.0+git",[0m
[0;32m                                "operators.operatorframework.io/internal-objects": "[\"formationlocks.db2u.databases.ibm.com\", \"formations.db2u.databases.ibm.com\", \"bigsqls.db2u.databases.ibm.com\", \"db2uhadrs.db2u.databases.ibm.com\", \"db2uhelmmigrations.db2u.databases.ibm.com\",\"db2uengines.db2u.databases.ibm.com\"]",[0m
[0;32m                                "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",[0m
[0;32m                                "productChargedContainers": "All",[0m
[0;32m                                "productID": "7f8ef284fc874e1f8e66ac8664d973a8",[0m
[0;32m                                "productMetric": "FREE",[0m
[0;32m                                "productName": "IBM Db2U",[0m
[0;32m                                "productVersion": "11.5.8.0"[0m
[0;32m                            },[0m
[0;32m                            "apiservicedefinitions": {},[0m
[0;32m                            "customresourcedefinitions": {[0m
[0;32m                                "owned": [[0m
[0;32m                                    {[0m
[0;32m                                        "description": "BigSQL is the Schema for the BigSQLs API. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "BigSQL",[0m
[0;32m                                        "kind": "BigSQL",[0m
[0;32m                                        "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uCluster is the API for deploying Db2. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Cluster",[0m
[0;32m                                        "kind": "Db2uCluster",[0m
[0;32m                                        "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": " Db2uEngine is the API for managing the db2u pods Internal objects.  Documentation for additional information check: https://ibm.biz/BdqNGJ.  This product is not deployable standalone and it is part of the LICCR already accepted.",[0m
[0;32m                                        "displayName": "Db2u Engine",[0m
[0;32m                                        "kind": "Db2uEngine",[0m
[0;32m                                        "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uHadr is the API for configuring HADR between 2 Db2 deployments. Documentation for additional information check: https://ibm.biz/BdqNGJ. This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Db2u HADR",[0m
[0;32m                                        "kind": "Db2uHadr",[0m
[0;32m                                        "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uInstance is the new generation API for managing lifecycle of Db2 on Kubernetes platforms. Note: - For new deployments, it is highly recommended to use Db2uInstance instead of Db2uCluster which will be deprecated in the future. - Today, your existing Db2uCluster instances cannot be upgraded to Db2uInstance. Documentation for additional information check: https://ibm.biz/BdqNGJ. License By installing this product you accept the license terms https://ibm.biz/BdqNGh.",[0m
[0;32m                                        "displayName": "Db2u Instance",[0m
[0;32m                                        "kind": "Db2uInstance",[0m
[0;32m                                        "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "FormationLock is used by the Recipe system to gate execution of Recipes. See the recipes package for more details on semantics. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "FormationLock",[0m
[0;32m                                        "kind": "FormationLock",[0m
[0;32m                                        "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Formation represents an instance of a database managed by CDCP. The Formation and its fields are the primary public API of CDCP. Internal objects This product is not deployable standalone and it is part of the LICCR already accepted",[0m
[0;32m                                        "displayName": "Formation",[0m
[0;32m                                        "kind": "Formation",[0m
[0;32m                                        "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                                        "version": "v1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uBackup is the API to perform a database backup for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Backup",[0m
[0;32m                                        "kind": "Db2uBackup",[0m
[0;32m                                        "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uLogStream is the Schema for the db2ulogstreams API",[0m
[0;32m                                        "displayName": "Db2u Log Stream",[0m
[0;32m                                        "kind": "Db2uLogStream",[0m
[0;32m                                        "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "description": "Db2uRestore is the API to perform a database restore for a Db2 or Db2 Warehouse deployment.",[0m
[0;32m                                        "displayName": "Db2u Restore",[0m
[0;32m                                        "kind": "Db2uRestore",[0m
[0;32m                                        "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                                        "version": "v1alpha1"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            "description": "IBM® Db2 provides advanced data management and analytics capabilities for transactional workloads. Db2 has no processor, memory, or database size limits, which makes it ideal for any size workload. The Db2 operator enables you to create these databases in your Red Hat OpenShift cluster so that you can govern the data and use it for more in-depth analysis.\nIBM Db2 is the recommended database in the following situations:\n\n- You need your transactional data to be governed, such as data from a website, bank, or retail store.\n- You want to create a replica of your transactional database so that you can run analytics without impacting regular business operations.\n- You need to ensure the integrity of your data by using an ACID-compliant database.\n- You need a low-latency database.\n- You need real-time insight into your business operations.\n\n# Name\n\nIBM® Db2U Operator\n\n# Introduction\n\n## Summary\n\nIBM® Db2 Database is an AI-infused, cost-effective data management system with proven performance and scalability, available both on premises and on the cloud. The Db2 container and operator have a strong focus on quality & architecture, performance, security, and deployment time.\n\n- Powered by AI–Machine learning algorithms help to provide significantly faster query speed improvements.–Machine learning algorithms are used to score queries and provide confidence-based results for faster insights.\n- Built for AI–Support for PYTHON, GO, JSON, and Jupyter Notebooks allows data scientists to use the most innovative tools available.–Data federation lets mission-critical data stay in place while running operations, fueling new insights with less hassle\n\nRefer to the [IBM Db2 Material](https://www.ibm.com/analytics/db2) for more information.\n\n## Features\n\nThe IBM® Db2U Operator allows to deploy IBM Db2. \n\n* [Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n* [Software-defined certified storage for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n* Supports an HADR (High availability disaster recovery) configuration\n* Includes REST & Graph capability\n* IBM® Db2 version 11.5.8.0\n\n## Documentation\n\nSee the [Db2 Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_11-5-5.html)\n\n## License\n\nBy installing this product you accept the [license terms](https://ibm.biz/BdqNGh)\n\n# Details\n\n## Prerequisites\n\nIBM® Db2 requires a storage solution. Example of applicable solutions:\n- [NFS](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n- Red Hat OpenShift Container Storage 4.5\n- IBM Spectrum Scale CSI 2.1 or higher\n- Portworx 2.5.5 or 2.5.6\n\n[Complete list for Db2 Certified Storage solutions](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\n## Resources Required\n\nMinimum scheduling capacity:\n\n#### IBM® Db2U Operator\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2 Operator| 512Mi     |    500m     |           |   1   |\n| **Total** |   512Mi     |   500m      |           |       |\n\n\n#### IBM® Db2 - Operand\n\nWith every Db2 deployment, several Jobs will be deployed and configure Db2, this configuration capacity is only applicable during the time within which Db2 is deployed (a few minutes):\n- 1.7 CPU\n- 2 Gi\n\nThe smallest possible configuration for the Db2 deployment is:\n\n| Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |\n| --------- | ----------- | ----------- | --------- | ----- |\n| Db2                   | 4Gi     |    0.5     |   100GB  |   1   |\n| Authentication (ldap) | 1Gi     |    1     |          |   1   |\n| Etcd                  | 512Mi   |    0.5     |          |   1   |\n| Tools                 | 512Mi   |    0.5     |          |   1   |\n| **Total**             | 6Gi     |    2.5     |          |       |\n\nMore information about the different licenses and consideration for deployment have been documented in the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.licensing.doc/doc/c0058536.html)\n\n# Installing\n\nThese instructions are for installing Db2U from the Red Hat Marketplace, as well as in an air-gapped or on-prem installation.\n\n## To install the Db2U Operator from the Red Hat Marketplace\n\n- You can find installation guidance in the [Db2 install documentation](https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_from_RHM.html)\n\n## To install the Db2U Operator from the IBM Operator Catalog\n\nYou can install the Db2U Operator from the IBM Operator Catalog. However, in order to pull the Db2 container images, you need to configure the access to the IBM Container Entitled Registry.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nCASE_NAME=ibm-db2uoperator\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the [Db2Ucluster API] (https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html).\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\nNOTE:\n[More information about the Db2Ucluster API](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html)   \n\n## To install the Db2U Operator using the command-line\n\n### Prerequisite: IBM Cloud Pak CLI (cloudctl)\n\nThe following steps help install the Db2U operator using the [IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/landing_cloudctl.html).\n\n[Installing IBM Cloud Pak CLI (cloudctl)](https://www.ibm.com/support/knowledgecenter/en/SSHKN6/cloudctl/3.x.x/install_cli.html)\n\nThe IBM Cloud Pak CLI (cloudctl) is a tool with significant benefits around airgap for [case management](https://www.ibm.com/support/knowledgecenter/SSHKN6/cloudctl/3.2.4/cli_case_commands.html). It provides a common framework for IBM operators around a consistent and optimized airgap install experience via bastion, non-bastion or portable storage.\n\n### 1. Retrieve an entitled key from the Entitled registry\n\n- Log into [MyIBM](https://myibm.ibm.com/products-services/containerlibrary)\n- Copy the `Entitled Key`\n\n### 2. Create an Image Pull Secret using the Entitled Key\n\n```bash\n#\n## Set the variables to the correct values\n#\n## Use cp for the value of the docker-username field\n#\nENTITLEDKEY=\"Use the Entitled Key value from Step 1\"\nEMAIL=\"Use the email value\"\nNAMESPACE=\"Use the targeted namespace value\"\nSTORAGECLASS=\"Use the storage class name\"\n\noc create secret docker-registry ibm-registry   \\\n    --docker-server=cp.icr.io                   \\\n    --docker-username=cp                        \\\n    --docker-password=${ENTITLEDKEY}            \\\n    --docker-email=${EMAIL}                     \\\n    --namespace=${NAMESPACE}\n```\n\n### 3. Modify the OpenShift Global Image Pull Secret (Optional)\n\n```bash\n#\n## Set the variable to the correct value\n#\nNAMESPACE=\"Use the targeted namespace value\"\n\necho $(oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode; \\\noc get secret ibm-registry -n ${NAMESPACE} --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode) | \\\njq -s '.[0] * .[1]' > dockerconfig_merged\n\noc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfig_merged\n```\n\nNOTE:\nThis step requires cluster administrator privileges. Once the global pull secret has been modified, OpenShift will propagate the update to the entire cluster. Before deploying Db2, all OpenShift workers need to be in a Ready state. \n\nAlternatively, use the image pull secret directly, when deploying Db2.\n\n### 4. Reference the IBM Entitled Registry Image Pull Secret (Alternative)\n\nRather than configuring the global image pull secret, you may also directly supply the image pull secret (`ibm-registry`) to the Db2Ucluster API.\n\nExample:\n```\naccount:\n  privileged: true\n  imagePullSecrets:\n    - ibm-registry\n```\n\n### 4. Install IBM Db2U catalog\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 5. Install the Db2U operator via command line\n\n```bash\ncloudctl case launch                 \\\n    --case ${CASE_NAME}              \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 6. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster With a Bastion\n\n### 1. Prepare Bastion Host\n\n* Logon to the bastion machine\n* Verify that the bastion machine has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the bastion machine.\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Configure Registry Auth\n\n#### 1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n#### 2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n    The credentials are now saved to `~/.airgap/secrets/<registry-name>.json`\n\n### 4. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 5. Configure Cluster for Airgap\n\nThose steps do the following:\n* Create a global image pull secret for the target registry (this step can be skipped if target registry is unauthenticated)\n* Create an imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying an imagesourcecontentpolicy triggers each worker node to restart.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the target registry to the cluster insecureRegistries list if the target registry isn't secured by a certificate. All the nodes will restart, one at a time, after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 6. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 7. Install Db2U Operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 8. Deploy Db2\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n## In Air-Gapped OpenShift Cluster Without a Bastion\n\n### 1. Prepare a portable device\n\nPrepare a portable device (such as laptop) that be used to download the case and images can be carried into the air gapped environment\n* Verify that the portable device has access\n  * to public internet (to download CASE and images)\n  * a target image registry ( where the images will be mirrored)\n  * a target openshift cluster to install the operator\n* Download and install dependent command line tools\n  * [oc](https://docs.openshift.com/container-platform/4.5/cli_reference/openshift_cli/getting-started-cli.html#installing-the-cli) - To interact with Openshift Cluster\n  * [cloud-pak-cli](https://github.com/IBM/cloud-pak-cli) - To download and install CASE\n\nAll the following steps should be run from the portable device\n\n### 2. Download CASE\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Create a directory to save the CASE to a local directory\n\n    ```bash\n    $ mkdir ${OFFLINEDIR}\n    ```\n\n* Run\n\n    ```bash\n    $ cloudctl case save --case ${CASEPATH} --outputdir ${OFFLINEDIR}\n    Downloading and extracting the CASE ...\n    - Success\n    Retrieving CASE version ...\n    - Success\n    Validating the CASE ...\n    - Success\n    Creating inventory ...\n    - Success\n    Finding inventory items\n    - Success\n    Resolving inventory items ...\n    Parsing inventory items\n    - Success\n    ```\n\n* Verify the CASE and images csv has been downloaded\n\n    ```bash\n    $ ls ${OFFLINEDIR}\n    total 128K\n    drwxr-xr-x 2 root root    6 Jan 20 11:10 charts/\n    -rw-r--r-- 1 root root 116K Jan 20 11:10 ibm-db2uoperator-5.6.1.tgz\n    -rw-r--r-- 1 root root   32 Jan 20 11:10 ibm-db2uoperator-5.6.1-charts.csv\n    -rw-r--r-- 1 root root 5.2K Jan 20 11:10 ibm-db2uoperator-5.6.1-images.csv\n    ```\n\n* Extract the CASE\n\n```bash\ncd ${OFFLINEDIR}\ntar -xvzf ${CASE_ARCHIVE}\n```\n\n### 3. Copy the images to the local container registry on the portable device\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    ```\n\n* Set the source and target registries\n\n    ```bash\n    export SOURCE_REGISTRY=${EXTERNAL_REGISTRY}\n    export SOURCE_REGISTRY_USER=${EXTERNAL_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${EXTERNAL_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${PORTABLE_REGISTRY}\n    export TARGET_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n    * Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 4. Configure Registry Auth\n\n1. Create an auth secret for the source image registry\n\n    Create a registry secret for the source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${EXTERNAL_REGISTRY} --user ${EXTERNAL_REGISTRY_USER} --pass ${EXTERNAL_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create an auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 5. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 6. Copy case and registry data to portable storage\n\nRun the following command to copy the offline case inventory images and registry data folder to the portable storage device:\n\n```bash\ncp -r ${OFFLINEDIR} ${PORTABLE_STORAGE_LOCATION}\n```\n\n### 7. Copy the images to the target registry behind the firewall\n\n* Set up environment variables\n\n    Review the following parameters for your environment and then run the following commands to set up the environment.\n\n    ```bash\n    export NS=<Namespace of target installation on OpenShift cluster>\n    export CASE_NAME=ibm-db2uoperator\n    export CASE_VERSION=5.6.1\n    export CASE_ARCHIVE=${CASE_NAME}-${CASE_VERSION}.tgz\n    export OFFLINEDIR=/tmp/cases\n    export OFFLINECASE=${OFFLINEDIR}/${CASE_NAME}\n    export CASEPATH=\"https://github.com/IBM/cloud-pak/raw/master/repo/case/${CASE_ARCHIVE}\"\n\n    # Details of the source registry to copy from\n    export EXTERNAL_REGISTRY=cp.icr.io\n    export EXTERNAL_REGISTRY_USER=cp\n    export EXTERNAL_REGISTRY_PASSWORD=\"actualkey\" # Actual entitlement key goes here\n\n    # Details of the intermediate registry if not using a Bastion server\n    export PORTABLE_REGISTRY_HOST=localhost\n    export PORTABLE_REGISTRY_PORT=5000\n    export PORTABLE_REGISTRY=${PORTABLE_REGISTRY_HOST}:${PORTABLE_REGISTRY_PORT}\n    export PORTABLE_REGISTRY_USER=\"user\"      # Actual username goes here\n    export PORTABLE_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n    export PORTABLE_REGISTRY_PATH=${OFFLINEDIR}/registry\n    export PORTABLE_STORAGE_LOCATION=\"\"       # Override\n\n    # Details of the target registry to copy to\n    export TARGET_REGISTRY_HOST=\"\"          # Target registry host\n    export TARGET_REGISTRY_PORT=5000        # Target registry port number\n    export TARGET_REGISTRY=${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\n    export TARGET_REGISTRY_USER=\"user\"      # Actual username goes here\n    export TARGET_REGISTRY_PASSWORD=\"key\"   # Actual API Key goes here\n\n    # Details of the storage class for the deployment\n    export STORAGECLASS=\"Use the storage class name\"\n    ```\n\n* Set the source and target registries\n\n    The source container registry is now the local registry on compute, for example localhost:5000 and the destination is the registry behind the firewall, for example 10.10.4.6:5000, or the host and port in your airgap environment. You need to set up the environment variables, mirror the images, and then install the catalog. Run the following command to set up the environment variables:\n\n    ```bash\n    export SOURCE_REGISTRY=${PORTABLE_REGISTRY}\n    export SOURCE_REGISTRY_USER=${PORTABLE_REGISTRY_USER}\n    export SOURCE_REGISTRY_PASS=${PORTABLE_REGISTRY_PASSWORD}\n\n    export TARGET_REGISTRY=${INTERNAL_REGISTRY}\n    export TARGET_REGISTRY_USER=${INTERNAL_REGISTRY_USER}\n    export TARGET_REGISTRY_PASS=${INTERNAL_REGISTRY_PASSWORD}\n    ```\n\n    Run the following command to override the registry storage location to point to the location of the portable storage:\n\n    ```bash\n    export PORTABLE_STORAGE_LOCATION=#Provide external storage path here\n    ```\n\n    Run the following command to copy the offline case inventory images and registry data folder from the portable storage device to the node.\n\n    ```bash\n    cp -r ${PORTABLE_STORAGE_LOCATION} ${OFFLINEDIR}\n    ```\n\n* Initialize the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action init-registry        \\\n        --args \"--registry $PORTABLE_REGISTRY_HOST --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n* Start the Docker registry by running the following command:\n\n    ```bash\n    cloudctl case launch              \\\n        --case ${OFFLINECASE}         \\\n        --inventory db2uOperatorSetup \\\n        --action start-registry       \\\n        --args \"--registry $PORTABLE_REGISTRY --user $PORTABLE_REGISTRY_USER --pass $PORTABLE_REGISTRY_PASSWORD --dir $PORTABLE_REGISTRY_PATH\"\n    ```\n\n### 8. Configure Registry Auth\n\n1. Create auth secret for the source image registry\n\n    Create registry secret for source image registry (if the registry is public which doesn't require credentials, this step can be skipped)\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${SOURCE_REGISTRY} --user ${SOURCE_REGISTRY_USER} --pass ${SOURCE_REGISTRY_PASSWORD}\"\n    ```\n\n2. Create auth secret for target image registry\n\n    ```bash\n    $ cloudctl case launch              \\\n        --case ${OFFLINECASE}           \\\n        --namespace ${NS}               \\\n        --inventory db2uOperatorSetup   \\\n        --action configure-creds-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --user ${TARGET_REGISTRY_USER} --pass ${TARGET_REGISTRY_PASSWORD}\"\n    ```\n\n### 9. Mirror Images\n\nIn this step, images from the saved CASE (images.csv) are copied to the target registry in the airgap environment\n\n```bash\n$ cloudctl case launch               \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NS}                \\\n    --inventory db2uOperatorSetup    \\\n    --action mirror-images           \\\n    --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n```\n\n### 10. Configure Cluster for Airgap\n\nThis steps does the following\n\n* creates a global image pull secret for the target registry (skipped if target registry is unauthenticated)\n* creates a imagesourcecontentpolicy\n\nWARNING:\n\n* Cluster resources must adjust to the new pull secret, which can temporarily limit the usability of the cluster. Authorization credentials are stored in $HOME/.airgap/secrets and /tmp/airgap* to support this action\n\n* Applying imagesourcecontentpolicy causes cluster nodes to recycle.\n\n    ```bash\n    $ cloudctl case launch                \\\n        --case ${OFFLINECASE}             \\\n        --namespace ${NS}                 \\\n        --inventory db2uOperatorSetup     \\\n        --action configure-cluster-airgap \\\n        --args \"--registry ${TARGET_REGISTRY} --inputDir ${OFFLINEDIR}\"\n    ```\n\n* (Optional) Add the taget registry to cluster insecureRegistries list if your target registry is not secured by a certificate. All the nodes will restart one at a time after the following command:\n\n    ```bash\n    $ oc patch image.config.openshift.io/cluster --type=merge -p \"{\\\"spec\\\":{\\\"registrySources\\\":{\\\"insecureRegistries\\\":[\\\"${TARGET_REGISTRY_HOST}:${TARGET_REGISTRY_PORT}\\\", \\\"${TARGET_REGISTRY_HOST}\\\"]}}}\"\n    ```\n\n### 11. Install Catalog Source\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installCatalog          \\\n    --tolerance 1\n```\n\n### 12. Install the operator\n\n```bash\ncloudctl case launch                 \\\n    --case ${OFFLINECASE}            \\\n    --namespace ${NAMESPACE}         \\\n    --inventory db2uOperatorSetup    \\\n    --action installOperatorNative   \\\n    --tolerance 1\n```\n\n### 13. Install Db2UCluster\n## Installing the Db2 Operator in an air-gapped environment\n\nTo install Db2 in an air-gapped envirionment, follow the [Installing in an air-gapped environment](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/t_db2u_install_cli.html) topic located in the Db2 knowledge center.\n\n## Deploy Db2 using the Db2UCluster API\n\nTo deploy Db2, [the Db2uCluster API is required](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2ucluster_api.html). More information about the API is located in the Db2 knowledge center.\n\n# Configuration\n\n* The Db2U operator does not require any particular configuration\n\n# Deploying Db2\n\nTo successfully IBM Db2, the following information needs to be specified:\n\n- The license terms needs to be accepted\n- A valid storage class specified\n\nSee below sections for further information and examples.\n\n## License\n\nIn order to successfully deploy Db2, the license terms detailed inside the Db2UCluster API, needs to be reviewed and accepted inside the Db2 Custom Resource.\n\n## Storage\n\nThe provided example refer to a storage class named `managed-nfs-storage`. The storage class must exist in the cluster or a supported storage class must be provided accordingly.\n\nTo deploy Db2, you need a supported storage class. [Information about the certified storage classes for Db2](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-cert-storage.html)\n\nDuring a Db2 deployment, storage can be dynamically created or pre-created PVs can be specified.\n\nDb2 needs the following storage locations:\n* System & Backup storage [Shared with RWX]\n       * Db2 instance home directory\n       * Diagnostic logs\n       * Other global configuration directories\n    * Backups, Restore or Load locations\n* User storage [Exclusive with RWO]\n       * Database storage paths\n       * Transaction logs\n\nIn cases, where the storage layer supports it, a single storage location, defined as RWX, can be specified. Such a configuration would exhibit degraded performances. \n\n| Software-defined  | Shared Zone [Meta] | Data Zone [Data] | \n| --------- | ----------- | ----------- | \n| NFS  | Access Mode: RWX |    RWX (combined with Meta) or RWO  | \n| Portworx 2.5.5 or 2.5.6  | Shared v4, RWX (based on NFS v4 protocol) | io-profile: db_remote, RWO |\n| OCS 4.5  | CephFS, RWX | CephRBD(Block Device), RWO  |\n| Spectrum Scale CSI 2.1 or greater | RWX | RWO  |\n\n\n### NFS Storage configuration\n\nDescription for a valid [NFS configuration](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-nfs-storage.html)\n\n### SELinux configuration\n\nDescription for [SELinux](https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/aese-selinux-storage.html)\n\n## PodSecurityPolicy Requirements\n\nThe Db2 Deployment is currently only supported on Red Hat OpenShift\n\n### Red Hat OpenShift SecurityContextConstraints Requirements\n\n* The Db2 Deployment requires the following Custom SecurityContextConstraints definition: \n\n    ```\n    kind: SecurityContextConstraints\n    apiVersion: v1\n    apiGroup: security.openshift.io\n    metadata:\n        name: db2u-scc\n    allowHostDirVolumePlugin: false\n    allowHostIPC: false\n    allowHostNetwork: false\n    allowHostPID: false\n    allowHostPorts: false\n    # privileged container is only needed for the init container that sets the Db2 kernel parameters\n    allowPrivilegedContainer: true\n    allowedCapabilities:\n    - \"SYS_RESOURCE\"\n    - \"IPC_OWNER\"\n    - \"SYS_NICE\"\n    - \"CHOWN\"\n    - \"DAC_OVERRIDE\"\n    - \"FSETID\"\n    - \"FOWNER\"\n    - \"SETGID\"\n    - \"SETUID\"\n    - \"SETFCAP\"\n    - \"SETPCAP\"\n    - \"SYS_CHROOT\"\n    - \"KILL\"\n    - \"AUDIT_WRITE\"\n    priority: 10\n    runAsUser:\n        type: RunAsAny\n    seLinuxContext:\n        type: MustRunAs\n    fsGroup:\n        type: RunAsAny\n    supplementalGroups:\n        type: RunAsAny\n    version: v1\n    ```\n\n## Example of a Db2 Custom Resource\n\n```\napiVersion: db2u.databases.ibm.com/v1\nkind: Db2uCluster\nmetadata:\n  name: db2u-cicd-test\nspec:\n  license:\n    accept: true\n  account:\n    privileged: true\n    imagePullSecrets:\n      - ibm-registry    \n  version: \"11.5.5.0-cn1\"\n  size: 1\n  podConfig:\n    db2u:\n      resource:\n        db2u:\n          requests:\n            cpu: 2\n            memory: 4Gi\n          limits:\n            cpu: 2\n            memory: 4Gi\n  environment:\n    dbType: db2oltp\n    instance:\n      password: cicdtest\n  storage:\n    - name: meta\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 10Gi\n    - name: data\n      type: \"create\"\n      spec:\n        storageClassName: \"managed-nfs-storage\"\n        accessModes:\n          - ReadWriteMany\n        resources:\n          requests:\n            storage: 100Gi\n```\n\n### Limitations\n\nNone",[0m
[0;32m                            "displayName": "IBM Db2",[0m
[0;32m                            "installModes": [[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "OwnNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": false,[0m
[0;32m                                    "type": "SingleNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "MultiNamespace"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "supported": true,[0m
[0;32m                                    "type": "AllNamespaces"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "keywords": [[0m
[0;32m                                "db2",[0m
[0;32m                                "database",[0m
[0;32m                                "db2u",[0m
[0;32m                                "mpp",[0m
[0;32m                                "sql",[0m
[0;32m                                "RHOCP",[0m
[0;32m                                "amd64",[0m
[0;32m                                "ppc64le",[0m
[0;32m                                "s390x"[0m
[0;32m                            ],[0m
[0;32m                            "links": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2",[0m
[0;32m                                    "url": "https://www.ibm.com/analytics/db2"[0m
[0;32m                                },[0m
[0;32m                                {[0m
[0;32m                                    "name": "IBM Db2 Knowledge Center",[0m
[0;32m                                    "url": "https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.5.0/com.ibm.db2.luw.db2u_openshift.doc/doc/c_db2u_overview.html"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maintainers": [[0m
[0;32m                                {[0m
[0;32m                                    "email": "db2install@ca.ibm.com",[0m
[0;32m                                    "name": "Db2U Development Team @ IBM"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "maturity": "stable",[0m
[0;32m                            "minKubeVersion": "1.19.0",[0m
[0;32m                            "provider": {[0m
[0;32m                                "name": "IBM"[0m
[0;32m                            },[0m
[0;32m                            "relatedImages": [[0m
[0;32m                                "icr.io/cpopen/db2u-operator@sha256:5b3fcfd4883a02a0951b8ed25eb51f3a09f1bfcae1be0e6decad466e61f0a083",[0m
[0;32m                                "icr.io/cpopen/db2u-day2-operator@sha256:670dcb509113730a5559b959750a1e65ba48648579a74e33e0c05782dc933515"[0m
[0;32m                            ],[0m
[0;32m                            "version": "5.1.0"[0m
[0;32m                        },[0m
[0;32m                        "entries": [[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-operator.v5.1.0",[0m
[0;32m                                "version": "5.1.0"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v5.1"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "defaultChannel": "v110509.0",[0m
[0;32m                "packageName": "db2u-operator",[0m
[0;32m                "provider": {[0m
[0;32m                    "name": "IBM"[0m
[0;32m                }[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "ansible_facts": {[0m
[0;32m        "_default_channel": "v110509.0",[0m
[0;32m        "_source": "ibm-operator-catalog",[0m
[0;32m        "_source_namespace": "openshift-marketplace"[0m
[0;32m    },[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Package Name ............................ db2u-operator",[0m
[0;32m        "Namespace ............................... db2u",[0m
[0;32m        "OperatorGroup Exists .................... False",[0m
[0;32m        "Catalog Source .......................... ibm-operator-catalog",[0m
[0;32m        "Catalog Source Namespace ................ openshift-marketplace",[0m
[0;32m        "Default Channel ......................... v110509.0",[0m
[0;32m        "Channel ................................. v110509.0",[0m
[0;32m        "Configuration ........................... <undefined>"[0m
[0;32m    ][0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "result": {[0m
[0;33m        "results": [[0m
[0;33m            {[0m
[0;33m                "changed": false,[0m
[0;33m                "duration": 0,[0m
[0;33m                "method": "update",[0m
[0;33m                "result": {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "kind": "Namespace",[0m
[0;33m                    "metadata": {[0m
[0;33m                        "annotations": {[0m
[0;33m                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"db2u\"}}",[0m
[0;33m                            "openshift.io/sa.scc.mcs": "s0:c33,c17",[0m
[0;33m                            "openshift.io/sa.scc.supplemental-groups": "1001090000/10000",[0m
[0;33m                            "openshift.io/sa.scc.uid-range": "1001090000/10000"[0m
[0;33m                        },[0m
[0;33m                        "creationTimestamp": "2024-04-14T07:33:32Z",[0m
[0;33m                        "labels": {[0m
[0;33m                            "kubernetes.io/metadata.name": "db2u",[0m
[0;33m                            "pod-security.kubernetes.io/audit": "restricted",[0m
[0;33m                            "pod-security.kubernetes.io/audit-version": "v1.24",[0m
[0;33m                            "pod-security.kubernetes.io/warn": "restricted",[0m
[0;33m                            "pod-security.kubernetes.io/warn-version": "v1.24"[0m
[0;33m                        },[0m
[0;33m                        "managedFields": [[0m
[0;33m                            {[0m
[0;33m                                "apiVersion": "v1",[0m
[0;33m                                "fieldsType": "FieldsV1",[0m
[0;33m                                "fieldsV1": {[0m
[0;33m                                    "f:metadata": {[0m
[0;33m                                        "f:labels": {[0m
[0;33m                                            "f:pod-security.kubernetes.io/audit": {},[0m
[0;33m                                            "f:pod-security.kubernetes.io/audit-version": {},[0m
[0;33m                                            "f:pod-security.kubernetes.io/warn": {},[0m
[0;33m                                            "f:pod-security.kubernetes.io/warn-version": {}[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "manager": "pod-security-admission-label-synchronization-controller",[0m
[0;33m                                "operation": "Apply",[0m
[0;33m                                "time": "2024-04-14T07:33:33Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "apiVersion": "v1",[0m
[0;33m                                "fieldsType": "FieldsV1",[0m
[0;33m                                "fieldsV1": {[0m
[0;33m                                    "f:metadata": {[0m
[0;33m                                        "f:annotations": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:labels": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:kubernetes.io/metadata.name": {}[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "manager": "OpenAPI-Generator",[0m
[0;33m                                "operation": "Update",[0m
[0;33m                                "time": "2024-04-14T07:33:32Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "apiVersion": "v1",[0m
[0;33m                                "fieldsType": "FieldsV1",[0m
[0;33m                                "fieldsV1": {[0m
[0;33m                                    "f:metadata": {[0m
[0;33m                                        "f:annotations": {[0m
[0;33m                                            "f:openshift.io/sa.scc.mcs": {},[0m
[0;33m                                            "f:openshift.io/sa.scc.supplemental-groups": {},[0m
[0;33m                                            "f:openshift.io/sa.scc.uid-range": {}[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "manager": "cluster-policy-controller",[0m
[0;33m                                "operation": "Update",[0m
[0;33m                                "time": "2024-04-14T07:33:33Z"[0m
[0;33m                            }[0m
[0;33m                        ],[0m
[0;33m                        "name": "db2u",[0m
[0;33m                        "resourceVersion": "10106426",[0m
[0;33m                        "uid": "8ef998d3-c3bf-48ae-bd68-aac6f30eb1da"[0m
[0;33m                    },[0m
[0;33m                    "spec": {[0m
[0;33m                        "finalizers": [[0m
[0;33m                            "kubernetes"[0m
[0;33m                        ][0m
[0;33m                    },[0m
[0;33m                    "status": {[0m
[0;33m                        "phase": "Active"[0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            },[0m
[0;33m            {[0m
[0;33m                "changed": true,[0m
[0;33m                "duration": 0,[0m
[0;33m                "method": "create",[0m
[0;33m                "result": {[0m
[0;33m                    "apiVersion": "operators.coreos.com/v1alpha2",[0m
[0;33m                    "kind": "OperatorGroup",[0m
[0;33m                    "metadata": {[0m
[0;33m                        "creationTimestamp": "2024-04-14T07:33:47Z",[0m
[0;33m                        "generation": 1,[0m
[0;33m                        "name": "operatorgroup",[0m
[0;33m                        "namespace": "db2u",[0m
[0;33m                        "resourceVersion": "10106667",[0m
[0;33m                        "uid": "b6bf551d-86be-46ab-8336-f34f367bee4a"[0m
[0;33m                    },[0m
[0;33m                    "spec": {[0m
[0;33m                        "targetNamespaces": [[0m
[0;33m                            "db2u"[0m
[0;33m                        ][0m
[0;33m                    },[0m
[0;33m                    "status": {[0m
[0;33m                        "lastUpdated": "2024-04-14T07:33:47Z",[0m
[0;33m                        "namespaces": [[0m
[0;33m                            "db2u"[0m
[0;33m                        ][0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            },[0m
[0;33m            {[0m
[0;33m                "changed": true,[0m
[0;33m                "duration": 0,[0m
[0;33m                "method": "create",[0m
[0;33m                "result": {[0m
[0;33m                    "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                    "kind": "Subscription",[0m
[0;33m                    "metadata": {[0m
[0;33m                        "creationTimestamp": "2024-04-14T07:33:47Z",[0m
[0;33m                        "generation": 1,[0m
[0;33m                        "labels": {[0m
[0;33m                            "operators.coreos.com/db2u-operator.db2u": ""[0m
[0;33m                        },[0m
[0;33m                        "managedFields": [[0m
[0;33m                            {[0m
[0;33m                                "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                "fieldsType": "FieldsV1",[0m
[0;33m                                "fieldsV1": {[0m
[0;33m                                    "f:metadata": {[0m
[0;33m                                        "f:labels": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:operators.coreos.com/db2u-operator.db2u": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:spec": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:channel": {},[0m
[0;33m                                        "f:installPlanApproval": {},[0m
[0;33m                                        "f:name": {},[0m
[0;33m                                        "f:source": {},[0m
[0;33m                                        "f:sourceNamespace": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "manager": "OpenAPI-Generator",[0m
[0;33m                                "operation": "Update",[0m
[0;33m                                "time": "2024-04-14T07:33:47Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                "fieldsType": "FieldsV1",[0m
[0;33m                                "fieldsV1": {[0m
[0;33m                                    "f:status": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:catalogHealth": {},[0m
[0;33m                                        "f:conditions": {},[0m
[0;33m                                        "f:lastUpdated": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "manager": "catalog",[0m
[0;33m                                "operation": "Update",[0m
[0;33m                                "subresource": "status",[0m
[0;33m                                "time": "2024-04-14T07:33:47Z"[0m
[0;33m                            }[0m
[0;33m                        ],[0m
[0;33m                        "name": "db2u-operator",[0m
[0;33m                        "namespace": "db2u",[0m
[0;33m                        "resourceVersion": "10106678",[0m
[0;33m                        "uid": "e283e4ba-8f7a-4411-b5a9-c16b264d7b79"[0m
[0;33m                    },[0m
[0;33m                    "spec": {[0m
[0;33m                        "channel": "v110509.0",[0m
[0;33m                        "installPlanApproval": "Automatic",[0m
[0;33m                        "name": "db2u-operator",[0m
[0;33m                        "source": "ibm-operator-catalog",[0m
[0;33m                        "sourceNamespace": "openshift-marketplace"[0m
[0;33m                    },[0m
[0;33m                    "status": {[0m
[0;33m                        "catalogHealth": [[0m
[0;33m                            {[0m
[0;33m                                "catalogSourceRef": {[0m
[0;33m                                    "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                    "kind": "CatalogSource",[0m
[0;33m                                    "name": "certified-operators",[0m
[0;33m                                    "namespace": "openshift-marketplace",[0m
[0;33m                                    "resourceVersion": "10105750",[0m
[0;33m                                    "uid": "54295c9e-152b-41b7-ae77-13ba53e9976d"[0m
[0;33m                                },[0m
[0;33m                                "healthy": true,[0m
[0;33m                                "lastUpdated": "2024-04-14T07:33:47Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "catalogSourceRef": {[0m
[0;33m                                    "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                    "kind": "CatalogSource",[0m
[0;33m                                    "name": "community-operators",[0m
[0;33m                                    "namespace": "openshift-marketplace",[0m
[0;33m                                    "resourceVersion": "10100190",[0m
[0;33m                                    "uid": "fe4a4088-efaf-4be0-b267-9230756dc123"[0m
[0;33m                                },[0m
[0;33m                                "healthy": true,[0m
[0;33m                                "lastUpdated": "2024-04-14T07:33:47Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "catalogSourceRef": {[0m
[0;33m                                    "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                    "kind": "CatalogSource",[0m
[0;33m                                    "name": "ibm-operator-catalog",[0m
[0;33m                                    "namespace": "openshift-marketplace",[0m
[0;33m                                    "resourceVersion": "10077364",[0m
[0;33m                                    "uid": "f7644282-1ab7-405b-a310-be6ca96041b4"[0m
[0;33m                                },[0m
[0;33m                                "healthy": true,[0m
[0;33m                                "lastUpdated": "2024-04-14T07:33:47Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "catalogSourceRef": {[0m
[0;33m                                    "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                    "kind": "CatalogSource",[0m
[0;33m                                    "name": "redhat-marketplace",[0m
[0;33m                                    "namespace": "openshift-marketplace",[0m
[0;33m                                    "resourceVersion": "10102875",[0m
[0;33m                                    "uid": "c4f35a73-6272-407e-8538-0e55c7a7a4b9"[0m
[0;33m                                },[0m
[0;33m                                "healthy": true,[0m
[0;33m                                "lastUpdated": "2024-04-14T07:33:47Z"[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "catalogSourceRef": {[0m
[0;33m                                    "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;33m                                    "kind": "CatalogSource",[0m
[0;33m                                    "name": "redhat-operators",[0m
[0;33m                                    "namespace": "openshift-marketplace",[0m
[0;33m                                    "resourceVersion": "10093622",[0m
[0;33m                                    "uid": "e41e4c5c-960c-470b-9981-b13f1e7e9452"[0m
[0;33m                                },[0m
[0;33m                                "healthy": true,[0m
[0;33m                                "lastUpdated": "2024-04-14T07:33:47Z"[0m
[0;33m                            }[0m
[0;33m                        ],[0m
[0;33m                        "conditions": [[0m
[0;33m                            {[0m
[0;33m                                "lastTransitionTime": "2024-04-14T07:33:47Z",[0m
[0;33m                                "message": "all available catalogsources are healthy",[0m
[0;33m                                "reason": "AllCatalogSourcesHealthy",[0m
[0;33m                                "status": "False",[0m
[0;33m                                "type": "CatalogSourcesUnhealthy"[0m
[0;33m                            }[0m
[0;33m                        ],[0m
[0;33m                        "lastUpdated": "2024-04-14T07:33:47Z"[0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            }[0m
[0;33m        ][0m
[0;33m    }[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "attempts": 2,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;32m            "kind": "InstallPlan",[0m
[0;32m            "metadata": {[0m
[0;32m                "creationTimestamp": "2024-04-14T07:34:09Z",[0m
[0;32m                "generateName": "install-",[0m
[0;32m                "generation": 1,[0m
[0;32m                "labels": {[0m
[0;32m                    "operators.coreos.com/db2u-operator.db2u": ""[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:operators.coreos.com/db2u-operator.db2u": {}[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "Go-http-client",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:34:09Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:generateName": {},[0m
[0;32m                                "f:ownerReferences": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "k:{\"uid\":\"e283e4ba-8f7a-4411-b5a9-c16b264d7b79\"}": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:approval": {},[0m
[0;32m                                "f:approved": {},[0m
[0;32m                                "f:clusterServiceVersionNames": {},[0m
[0;32m                                "f:generation": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "catalog",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:34:09Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:status": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:bundleLookups": {},[0m
[0;32m                                "f:catalogSources": {},[0m
[0;32m                                "f:conditions": {},[0m
[0;32m                                "f:phase": {},[0m
[0;32m                                "f:plan": {},[0m
[0;32m                                "f:startTime": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "catalog",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-14T07:34:21Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "install-mvvpj",[0m
[0;32m                "namespace": "db2u",[0m
[0;32m                "ownerReferences": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "operators.coreos.com/v1alpha1",[0m
[0;32m                        "blockOwnerDeletion": false,[0m
[0;32m                        "controller": false,[0m
[0;32m                        "kind": "Subscription",[0m
[0;32m                        "name": "db2u-operator",[0m
[0;32m                        "uid": "e283e4ba-8f7a-4411-b5a9-c16b264d7b79"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "resourceVersion": "10107547",[0m
[0;32m                "uid": "a2b1e366-b02b-4727-b6a5-ccedb2295b7c"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "approval": "Automatic",[0m
[0;32m                "approved": true,[0m
[0;32m                "clusterServiceVersionNames": [[0m
[0;32m                    "db2u-operator.v110509.0.1"[0m
[0;32m                ],[0m
[0;32m                "generation": 1[0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "bundleLookups": [[0m
[0;32m                    {[0m
[0;32m                        "catalogSourceRef": {[0m
[0;32m                            "name": "ibm-operator-catalog",[0m
[0;32m                            "namespace": "openshift-marketplace"[0m
[0;32m                        },[0m
[0;32m                        "identifier": "db2u-operator.v110509.0.1",[0m
[0;32m                        "path": "icr.io/cpopen/ibm-db2uoperator-bundle@sha256:6ce3e3a63c4c85f2f983ee5f2b77025a973db4035f9dfb402a3919970a62d4fd",[0m
[0;32m                        "properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"BigSQL\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"Db2uCluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"Db2uEngine\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"Db2uHadr\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"Db2uInstance\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"Formation\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2u.databases.ibm.com\",\"kind\":\"FormationLock\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2ubnr.databases.ibm.com\",\"kind\":\"Db2uBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2ubnr.databases.ibm.com\",\"kind\":\"Db2uRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"db2ulog.databases.ibm.com\",\"kind\":\"Db2uLogStream\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"db2u-operator\",\"version\":\"110509.0.1\"}}]}",[0m
[0;32m                        "replaces": ""[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "catalogSources": [[0m
[0;32m                    "ibm-operator-catalog"[0m
[0;32m                ],[0m
[0;32m                "conditions": [[0m
[0;32m                    {[0m
[0;32m                        "lastTransitionTime": "2024-04-14T07:34:14Z",[0m
[0;32m                        "lastUpdateTime": "2024-04-14T07:34:14Z",[0m
[0;32m                        "status": "True",[0m
[0;32m                        "type": "Installed"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "phase": "Complete",[0m
[0;32m                "plan": [[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "operators.coreos.com",[0m
[0;32m                            "kind": "ClusterServiceVersion",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1alpha1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2ubackups.db2ubnr.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "ClusterRole",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-day2-ops-metrics-reader",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "",[0m
[0;32m                            "kind": "ConfigMap",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-day2-ops-manager-config",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2uinstances.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2uengines.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "bigsqls.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2urestores.db2ubnr.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2ulogstreams.db2ulog.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2uhadrs.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "formations.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "apiextensions.k8s.io",[0m
[0;32m                            "kind": "CustomResourceDefinition",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "formationlocks.db2u.databases.ibm.com",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "",[0m
[0;32m                            "kind": "Service",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-day2-ops-controller-manager-metrics-service",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "",[0m
[0;32m                            "kind": "ServiceAccount",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "Role",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-db2u-operator-fb96b6d4b",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "RoleBinding",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-db2u-operator-fb96b6d4b",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "ClusterRole",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-6878dd8df8",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "ClusterRoleBinding",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-6878dd8df8",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "",[0m
[0;32m                            "kind": "ServiceAccount",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-day2-ops-controller-manager",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "Role",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-db2u-day2-ops-controller-m-86b75fdf6d",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "RoleBinding",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-db2u-day2-ops-controller-m-86b75fdf6d",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "ClusterRole",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-655f8c6f5",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "resolving": "db2u-operator.v110509.0.1",[0m
[0;32m                        "resource": {[0m
[0;32m                            "group": "rbac.authorization.k8s.io",[0m
[0;32m                            "kind": "ClusterRoleBinding",[0m
[0;32m                            "manifest": "{\"kind\":\"ConfigMap\",\"name\":\"b590c08640a5fc782f7e8d910d64bac7712a8213e13f3e7cfd7e17d5f12a750\",\"namespace\":\"openshift-marketplace\",\"catalogSourceName\":\"ibm-operator-catalog\",\"catalogSourceNamespace\":\"openshift-marketplace\",\"replaces\":\"\",\"properties\":\"{\\\"properties\\\":[{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"BigSQL\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uCluster\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uEngine\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uHadr\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uInstance\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"Formation\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2u.databases.ibm.com\\\",\\\"kind\\\":\\\"FormationLock\\\",\\\"version\\\":\\\"v1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uBackup\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ubnr.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uRestore\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.gvk\\\",\\\"value\\\":{\\\"group\\\":\\\"db2ulog.databases.ibm.com\\\",\\\"kind\\\":\\\"Db2uLogStream\\\",\\\"version\\\":\\\"v1alpha1\\\"}},{\\\"type\\\":\\\"olm.package\\\",\\\"value\\\":{\\\"packageName\\\":\\\"db2u-operator\\\",\\\"version\\\":\\\"110509.0.1\\\"}}]}\"}",[0m
[0;32m                            "name": "db2u-operator.v110509.0.1-655f8c6f5",[0m
[0;32m                            "sourceName": "ibm-operator-catalog",[0m
[0;32m                            "sourceNamespace": "openshift-marketplace",[0m
[0;32m                            "version": "v1"[0m
[0;32m                        },[0m
[0;32m                        "status": "Present"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "startTime": "2024-04-14T07:34:14Z"[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "config.openshift.io/v1",[0m
[0;32m            "kind": "Ingress",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "ingress.operator.openshift.io/default-enable-http2": "true"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-05T18:28:35Z",[0m
[0;32m                "generation": 2,[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "config.openshift.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:status": {[0m
[0;32m                                "f:componentRoutes": {[0m
[0;32m                                    "k:{\"name\":\"oauth-openshift\",\"namespace\":\"openshift-authentication\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:conditions": {[0m
[0;32m                                            "k:{\"type\":\"Degraded\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:lastTransitionTime": {},[0m
[0;32m                                                "f:message": {},[0m
[0;32m                                                "f:reason": {},[0m
[0;32m                                                "f:status": {},[0m
[0;32m                                                "f:type": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"type\":\"Progressing\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:lastTransitionTime": {},[0m
[0;32m                                                "f:message": {},[0m
[0;32m                                                "f:reason": {},[0m
[0;32m                                                "f:status": {},[0m
[0;32m                                                "f:type": {}[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "f:consumingUsers": {},[0m
[0;32m                                        "f:currentHostnames": {},[0m
[0;32m                                        "f:defaultHostname": {},[0m
[0;32m                                        "f:name": {},[0m
[0;32m                                        "f:namespace": {},[0m
[0;32m                                        "f:relatedObjects": {}[0m
[0;32m                                    }[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "AuthenticationCustomRouteController",[0m
[0;32m                        "operation": "Apply",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-05T18:55:25Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "config.openshift.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:spec": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:domain": {},[0m
[0;32m                                "f:loadBalancer": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:platform": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:aws": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:type": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:type": {}[0m
[0;32m                                    }[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "cluster-bootstrap",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T18:28:35Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "config.openshift.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:status": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:defaultPlacement": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "cluster-bootstrap",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-05T18:28:35Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "config.openshift.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:ingress.operator.openshift.io/default-enable-http2": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                "f:componentRoutes": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-05T18:54:45Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "cluster",[0m
[0;32m                "resourceVersion": "51031",[0m
[0;32m                "uid": "8a7dbd4f-f6e0-47d4-ae23-265c6a8ad923"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "componentRoutes": [],[0m
[0;32m                "domain": "apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com",[0m
[0;32m                "loadBalancer": {[0m
[0;32m                    "platform": {[0m
[0;32m                        "aws": {[0m
[0;32m                            "type": "NLB"[0m
[0;32m                        },[0m
[0;32m                        "type": "AWS"[0m
[0;32m                    }[0m
[0;32m                }[0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "componentRoutes": [[0m
[0;32m                    {[0m
[0;32m                        "conditions": [[0m
[0;32m                            {[0m
[0;32m                                "lastTransitionTime": "2024-04-05T18:55:25Z",[0m
[0;32m                                "message": "All is well",[0m
[0;32m                                "reason": "AsExpected",[0m
[0;32m                                "status": "False",[0m
[0;32m                                "type": "Progressing"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "lastTransitionTime": "2024-04-05T18:39:54Z",[0m
[0;32m                                "message": "All is well",[0m
[0;32m                                "reason": "AsExpected",[0m
[0;32m                                "status": "False",[0m
[0;32m                                "type": "Degraded"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "consumingUsers": [[0m
[0;32m                            "system:serviceaccount:oauth-openshift:authentication-operator"[0m
[0;32m                        ],[0m
[0;32m                        "currentHostnames": [[0m
[0;32m                            "oauth-openshift.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com"[0m
[0;32m                        ],[0m
[0;32m                        "defaultHostname": "oauth-openshift.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com",[0m
[0;32m                        "name": "oauth-openshift",[0m
[0;32m                        "namespace": "openshift-authentication",[0m
[0;32m                        "relatedObjects": [[0m
[0;32m                            {[0m
[0;32m                                "group": "route.openshift.io",[0m
[0;32m                                "name": "oauth-openshift",[0m
[0;32m                                "namespace": "openshift-authentication",[0m
[0;32m                                "resource": "routes"[0m
[0;32m                            }[0m
[0;32m                        ][0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "defaultPlacement": "Workers"[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "cert-manager.io/v1",[0m
[0;33m        "kind": "Issuer",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cert-manager.io/v1\",\"kind\":\"Issuer\",\"metadata\":{\"name\":\"db2u-ca-issuer\",\"namespace\":\"db2u\"},\"spec\":{\"selfSigned\":{}}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:34:51Z",[0m
[0;33m            "generation": 1,[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            ".": {},[0m
[0;33m                            "f:selfSigned": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:34:51Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u-ca-issuer",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "resourceVersion": "10108266",[0m
[0;33m            "uid": "bef69f76-b968-4b9f-9a9d-5ad442d9d741"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "selfSigned": {}[0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "duration": 5,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "cert-manager.io/v1",[0m
[0;33m        "kind": "Certificate",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cert-manager.io/v1\",\"kind\":\"Certificate\",\"metadata\":{\"name\":\"db2u-ca-certificate\",\"namespace\":\"db2u\"},\"spec\":{\"commonName\":\"ca.db2u\",\"duration\":\"175200h0m0s\",\"isCA\":true,\"issuerRef\":{\"kind\":\"Issuer\",\"name\":\"db2u-ca-issuer\"},\"keyAlgorithm\":\"rsa\",\"keyEncoding\":\"pkcs8\",\"keySize\":4096,\"organization\":[\"IBM Maximo Application Suite\"],\"renewBefore\":\"2160h0m0s\",\"secretName\":\"db2u-ca\",\"subject\":{\"countries\":[\"GB\"],\"localities\":[\"London\"],\"organizationalUnits\":[\"IBM Maximo Application Suite DB2U\"],\"streetAddresses\":[\"London\"]},\"usages\":[\"cert sign\",\"digital signature\",\"key encipherment\",\"server auth\"]}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:34:52Z",[0m
[0;33m            "generation": 1,[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            ".": {},[0m
[0;33m                            "f:commonName": {},[0m
[0;33m                            "f:duration": {},[0m
[0;33m                            "f:isCA": {},[0m
[0;33m                            "f:issuerRef": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kind": {},[0m
[0;33m                                "f:name": {}[0m
[0;33m                            },[0m
[0;33m                            "f:renewBefore": {},[0m
[0;33m                            "f:secretName": {},[0m
[0;33m                            "f:subject": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:countries": {},[0m
[0;33m                                "f:localities": {},[0m
[0;33m                                "f:organizationalUnits": {},[0m
[0;33m                                "f:streetAddresses": {}[0m
[0;33m                            },[0m
[0;33m                            "f:usages": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:34:52Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:status": {[0m
[0;33m                            ".": {},[0m
[0;33m                            "f:conditions": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "cert-manager-certificates-trigger",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "subresource": "status",[0m
[0;33m                    "time": "2024-04-14T07:34:52Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:status": {[0m
[0;33m                            "f:revision": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "cert-manager-certificates-issuing",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "subresource": "status",[0m
[0;33m                    "time": "2024-04-14T07:34:53Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:status": {[0m
[0;33m                            "f:conditions": {[0m
[0;33m                                "k:{\"type\":\"Ready\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:lastTransitionTime": {},[0m
[0;33m                                    "f:message": {},[0m
[0;33m                                    "f:observedGeneration": {},[0m
[0;33m                                    "f:reason": {},[0m
[0;33m                                    "f:status": {},[0m
[0;33m                                    "f:type": {}[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:notAfter": {},[0m
[0;33m                            "f:notBefore": {},[0m
[0;33m                            "f:renewalTime": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "cert-manager-certificates-readiness",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "subresource": "status",[0m
[0;33m                    "time": "2024-04-14T07:34:53Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u-ca-certificate",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "resourceVersion": "10108322",[0m
[0;33m            "uid": "575828ba-f518-4c7d-96d1-0a4fe003cf30"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "commonName": "ca.db2u",[0m
[0;33m            "duration": "175200h0m0s",[0m
[0;33m            "isCA": true,[0m
[0;33m            "issuerRef": {[0m
[0;33m                "kind": "Issuer",[0m
[0;33m                "name": "db2u-ca-issuer"[0m
[0;33m            },[0m
[0;33m            "renewBefore": "2160h0m0s",[0m
[0;33m            "secretName": "db2u-ca",[0m
[0;33m            "subject": {[0m
[0;33m                "countries": [[0m
[0;33m                    "GB"[0m
[0;33m                ],[0m
[0;33m                "localities": [[0m
[0;33m                    "London"[0m
[0;33m                ],[0m
[0;33m                "organizationalUnits": [[0m
[0;33m                    "IBM Maximo Application Suite DB2U"[0m
[0;33m                ],[0m
[0;33m                "streetAddresses": [[0m
[0;33m                    "London"[0m
[0;33m                ][0m
[0;33m            },[0m
[0;33m            "usages": [[0m
[0;33m                "cert sign",[0m
[0;33m                "digital signature",[0m
[0;33m                "key encipherment",[0m
[0;33m                "server auth"[0m
[0;33m            ][0m
[0;33m        },[0m
[0;33m        "status": {[0m
[0;33m            "conditions": [[0m
[0;33m                {[0m
[0;33m                    "lastTransitionTime": "2024-04-14T07:34:53Z",[0m
[0;33m                    "message": "Certificate is up to date and has not expired",[0m
[0;33m                    "observedGeneration": 1,[0m
[0;33m                    "reason": "Ready",[0m
[0;33m                    "status": "True",[0m
[0;33m                    "type": "Ready"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "notAfter": "2044-04-09T07:34:53Z",[0m
[0;33m            "notBefore": "2024-04-14T07:34:53Z",[0m
[0;33m            "renewalTime": "2044-01-10T07:34:53Z",[0m
[0;33m            "revision": 1[0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "cert-manager.io/v1",[0m
[0;33m        "kind": "Issuer",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cert-manager.io/v1\",\"kind\":\"Issuer\",\"metadata\":{\"name\":\"db2u-issuer\",\"namespace\":\"db2u\"},\"spec\":{\"ca\":{\"secretName\":\"db2u-ca\"}}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:34:58Z",[0m
[0;33m            "generation": 1,[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            ".": {},[0m
[0;33m                            "f:ca": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:secretName": {}[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:34:58Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u-issuer",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "resourceVersion": "10108429",[0m
[0;33m            "uid": "f1b815cb-f2f6-4dff-b7a5-70021ceb0e65"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "ca": {[0m
[0;33m                "secretName": "db2u-ca"[0m
[0;33m            }[0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "cert-manager.io/v1",[0m
[0;33m        "kind": "Certificate",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cert-manager.io/v1\",\"kind\":\"Certificate\",\"metadata\":{\"name\":\"db2u-certificate\",\"namespace\":\"db2u\"},\"spec\":{\"commonName\":\"db2u\",\"dnsNames\":[\"db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com\",\"*.db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com\",\"c-db2u-manage-db2u-engn-svc.db2u.svc\",\"*.c-db2u-manage-db2u-engn-svc.db2u.svc\"],\"duration\":\"175200h0m0s\",\"issuerRef\":{\"kind\":\"Issuer\",\"name\":\"db2u-issuer\"},\"organization\":[\"IBM Maximo Application Suite\"],\"renewBefore\":\"2160h0m0s\",\"secretName\":\"db2u-certificate\",\"subject\":{\"countries\":[\"GB\"],\"localities\":[\"London\"],\"organizationalUnits\":[\"IBM Maximo Application Suite DB2U\"],\"streetAddresses\":[\"London\"]},\"usages\":[\"cert sign\",\"digital signature\",\"key encipherment\",\"server auth\"]}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:34:59Z",[0m
[0;33m            "generation": 1,[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "cert-manager.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            ".": {},[0m
[0;33m                            "f:commonName": {},[0m
[0;33m                            "f:dnsNames": {},[0m
[0;33m                            "f:duration": {},[0m
[0;33m                            "f:issuerRef": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kind": {},[0m
[0;33m                                "f:name": {}[0m
[0;33m                            },[0m
[0;33m                            "f:renewBefore": {},[0m
[0;33m                            "f:secretName": {},[0m
[0;33m                            "f:subject": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:countries": {},[0m
[0;33m                                "f:localities": {},[0m
[0;33m                                "f:organizationalUnits": {},[0m
[0;33m                                "f:streetAddresses": {}[0m
[0;33m                            },[0m
[0;33m                            "f:usages": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:34:59Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u-certificate",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "resourceVersion": "10108447",[0m
[0;33m            "uid": "cb871c83-e6e5-46f4-9bf3-fdb5b1d9f1d0"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "commonName": "db2u",[0m
[0;33m            "dnsNames": [[0m
[0;33m                "db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com",[0m
[0;33m                "*.db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com",[0m
[0;33m                "c-db2u-manage-db2u-engn-svc.db2u.svc",[0m
[0;33m                "*.c-db2u-manage-db2u-engn-svc.db2u.svc"[0m
[0;33m            ],[0m
[0;33m            "duration": "175200h0m0s",[0m
[0;33m            "issuerRef": {[0m
[0;33m                "kind": "Issuer",[0m
[0;33m                "name": "db2u-issuer"[0m
[0;33m            },[0m
[0;33m            "renewBefore": "2160h0m0s",[0m
[0;33m            "secretName": "db2u-certificate",[0m
[0;33m            "subject": {[0m
[0;33m                "countries": [[0m
[0;33m                    "GB"[0m
[0;33m                ],[0m
[0;33m                "localities": [[0m
[0;33m                    "London"[0m
[0;33m                ],[0m
[0;33m                "organizationalUnits": [[0m
[0;33m                    "IBM Maximo Application Suite DB2U"[0m
[0;33m                ],[0m
[0;33m                "streetAddresses": [[0m
[0;33m                    "London"[0m
[0;33m                ][0m
[0;33m            },[0m
[0;33m            "usages": [[0m
[0;33m                "cert sign",[0m
[0;33m                "digital signature",[0m
[0;33m                "key encipherment",[0m
[0;33m                "server auth"[0m
[0;33m            ][0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include": "/home/admin/.ansible/collections/ansible_collections/ibm/mas_devops/roles/db2/../../common_tasks/wait_for_crd.yml",[0m
[0;32m    "include_args": {}[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "attempts": 1,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "apiextensions.k8s.io/v1",[0m
[0;32m            "kind": "CustomResourceDefinition",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "controller-gen.kubebuilder.io/version": "v0.4.1",[0m
[0;32m                    "operatorframework.io/installed-alongside-6ef187acb9205e8e": "db2u/db2u-operator.v110509.0.1"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-14T07:34:09Z",[0m
[0;32m                "generation": 1,[0m
[0;32m                "labels": {[0m
[0;32m                    "app.kubernetes.io/instance": "db2u-operator",[0m
[0;32m                    "app.kubernetes.io/managed-by": "Db2U-Team",[0m
[0;32m                    "app.kubernetes.io/name": "db2u-operator",[0m
[0;32m                    "operators.coreos.com/db2u-operator.db2u": ""[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apiextensions.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:controller-gen.kubebuilder.io/version": {},[0m
[0;32m                                    "f:operatorframework.io/installed-alongside-6ef187acb9205e8e": {}[0m
[0;32m                                },[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:app.kubernetes.io/instance": {},[0m
[0;32m                                    "f:app.kubernetes.io/managed-by": {},[0m
[0;32m                                    "f:app.kubernetes.io/name": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                "f:conversion": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:strategy": {}[0m
[0;32m                                },[0m
[0;32m                                "f:group": {},[0m
[0;32m                                "f:names": {[0m
[0;32m                                    "f:kind": {},[0m
[0;32m                                    "f:listKind": {},[0m
[0;32m                                    "f:plural": {},[0m
[0;32m                                    "f:shortNames": {},[0m
[0;32m                                    "f:singular": {}[0m
[0;32m                                },[0m
[0;32m                                "f:scope": {},[0m
[0;32m                                "f:versions": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "catalog",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:34:09Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apiextensions.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:status": {[0m
[0;32m                                "f:acceptedNames": {[0m
[0;32m                                    "f:kind": {},[0m
[0;32m                                    "f:listKind": {},[0m
[0;32m                                    "f:plural": {},[0m
[0;32m                                    "f:shortNames": {},[0m
[0;32m                                    "f:singular": {}[0m
[0;32m                                },[0m
[0;32m                                "f:conditions": {[0m
[0;32m                                    "k:{\"type\":\"Established\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:lastTransitionTime": {},[0m
[0;32m                                        "f:message": {},[0m
[0;32m                                        "f:reason": {},[0m
[0;32m                                        "f:status": {},[0m
[0;32m                                        "f:type": {}[0m
[0;32m                                    },[0m
[0;32m                                    "k:{\"type\":\"NamesAccepted\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:lastTransitionTime": {},[0m
[0;32m                                        "f:message": {},[0m
[0;32m                                        "f:reason": {},[0m
[0;32m                                        "f:status": {},[0m
[0;32m                                        "f:type": {}[0m
[0;32m                                    }[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "kube-apiserver",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-14T07:34:10Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apiextensions.k8s.io/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    "f:operators.coreos.com/db2u-operator.db2u": {}[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "Go-http-client",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:34:23Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "db2uclusters.db2u.databases.ibm.com",[0m
[0;32m                "resourceVersion": "10107587",[0m
[0;32m                "uid": "c1e4e23e-7f2c-4821-a5be-254b7651b007"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "conversion": {[0m
[0;32m                    "strategy": "None"[0m
[0;32m                },[0m
[0;32m                "group": "db2u.databases.ibm.com",[0m
[0;32m                "names": {[0m
[0;32m                    "kind": "Db2uCluster",[0m
[0;32m                    "listKind": "Db2uClusterList",[0m
[0;32m                    "plural": "db2uclusters",[0m
[0;32m                    "shortNames": [[0m
[0;32m                        "db2u"[0m
[0;32m                    ],[0m
[0;32m                    "singular": "db2ucluster"[0m
[0;32m                },[0m
[0;32m                "scope": "Namespaced",[0m
[0;32m                "versions": [[0m
[0;32m                    {[0m
[0;32m                        "additionalPrinterColumns": [[0m
[0;32m                            {[0m
[0;32m                                "description": "The state of Db2u",[0m
[0;32m                                "jsonPath": ".status.state",[0m
[0;32m                                "name": "State",[0m
[0;32m                                "type": "string"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "description": "The state of any maintenance operations on Db2u",[0m
[0;32m                                "jsonPath": ".status.maintenanceState",[0m
[0;32m                                "name": "MaintenanceState",[0m
[0;32m                                "type": "string"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "description": "A timestamp representing the server time when this object was created",[0m
[0;32m                                "jsonPath": ".metadata.creationTimestamp",[0m
[0;32m                                "name": "Age",[0m
[0;32m                                "type": "date"[0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "name": "v1",[0m
[0;32m                        "schema": {[0m
[0;32m                            "openAPIV3Schema": {[0m
[0;32m                                "properties": {[0m
[0;32m                                    "apiVersion": {[0m
[0;32m                                        "type": "string"[0m
[0;32m                                    },[0m
[0;32m                                    "kind": {[0m
[0;32m                                        "type": "string"[0m
[0;32m                                    },[0m
[0;32m                                    "metadata": {[0m
[0;32m                                        "type": "object"[0m
[0;32m                                    },[0m
[0;32m                                    "spec": {[0m
[0;32m                                        "properties": {[0m
[0;32m                                            "account": {[0m
[0;32m                                                "properties": {[0m
[0;32m                                                    "imagePullSecrets": {[0m
[0;32m                                                        "items": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "array"[0m
[0;32m                                                    },[0m
[0;32m                                                    "privileged": {[0m
[0;32m                                                        "type": "boolean"[0m
[0;32m                                                    },[0m
[0;32m                                                    "restricted": {[0m
[0;32m                                                        "type": "boolean"[0m
[0;32m                                                    },[0m
[0;32m                                                    "serviceAccountName": {[0m
[0;32m                                                        "type": "string"[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "type": "object"[0m
[0;32m                                            },[0m
[0;32m                                            "addOns": {[0m
[0;32m                                                "properties": {[0m
[0;32m                                                    "audit": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "applyDefaultPolicy": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "archiveToDb": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "enableAudit": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "interval": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object",[0m
[0;32m                                                        "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                    },[0m
[0;32m                                                    "graph": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "enabled": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "useSslForDbConnect": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "opendataformats": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "enabled": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object",[0m
[0;32m                                                        "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                    },[0m
[0;32m                                                    "overrides": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "databaseSSL": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "value": {[0m
[0;32m                                                                        "minLength": 1,[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "value64": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "valueFrom": {[0m
[0;32m                                                                        "properties": {[0m
[0;32m                                                                            "configMapKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "optional": {[0m
[0;32m                                                                                        "type": "boolean"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "secretKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "optional": {[0m
[0;32m                                                                                        "type": "boolean"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "vaultKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "field": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "urn": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            }[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "object",[0m
[0;32m                                                                        "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "instancePassword": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "value": {[0m
[0;32m                                                                        "minLength": 1,[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "value64": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "valueFrom": {[0m
[0;32m                                                                        "properties": {[0m
[0;32m                                                                            "configMapKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "optional": {[0m
[0;32m                                                                                        "type": "boolean"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "secretKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "optional": {[0m
[0;32m                                                                                        "type": "boolean"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "vaultKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "field": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "urn": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            }[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "object",[0m
[0;32m                                                                        "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "qrep": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "enabled": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "infraHost": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "infraIP": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "license": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "accept": {[0m
[0;32m                                                                        "type": "boolean"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "value": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "valueFrom": {[0m
[0;32m                                                                        "properties": {[0m
[0;32m                                                                            "configMapKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "optional": {[0m
[0;32m                                                                                        "type": "boolean"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "secretKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "optional": {[0m
[0;32m                                                                                        "type": "boolean"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "vaultKeyRef": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "field": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "name": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "urn": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            }[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "object",[0m
[0;32m                                                                        "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "useSslForDbConnect": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "rest": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "enabled": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "useSslForDbConnect": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "type": "object",[0m
[0;32m                                                "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                            },[0m
[0;32m                                            "advOpts": {[0m
[0;32m                                                "type": "object",[0m
[0;32m                                                "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                            },[0m
[0;32m                                            "affinity": {[0m
[0;32m                                                "properties": {[0m
[0;32m                                                    "nodeAffinity": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "preferredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                                                "items": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "preference": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "matchExpressions": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "matchFields": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "weight": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "preference",[0m
[0;32m                                                                        "weight"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "array"[0m
[0;32m                                                            },[0m
[0;32m                                                            "requiredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "nodeSelectorTerms": {[0m
[0;32m                                                                        "items": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "matchExpressions": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "matchFields": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "array"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "required": [[0m
[0;32m                                                                    "nodeSelectorTerms"[0m
[0;32m                                                                ],[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "podAffinity": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "preferredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                                                "items": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "podAffinityTerm": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "labelSelector": {[0m
[0;32m                                                                                    "properties": {[0m
[0;32m                                                                                        "matchExpressions": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "properties": {[0m
[0;32m                                                                                                    "key": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "operator": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "values": {[0m
[0;32m                                                                                                        "items": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "type": "array"[0m
[0;32m                                                                                                    }[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "required": [[0m
[0;32m                                                                                                    "key",[0m
[0;32m                                                                                                    "operator"[0m
[0;32m                                                                                                ],[0m
[0;32m                                                                                                "type": "object"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "array"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "matchLabels": {[0m
[0;32m                                                                                            "additionalProperties": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        }[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "namespaceSelector": {[0m
[0;32m                                                                                    "properties": {[0m
[0;32m                                                                                        "matchExpressions": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "properties": {[0m
[0;32m                                                                                                    "key": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "operator": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "values": {[0m
[0;32m                                                                                                        "items": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "type": "array"[0m
[0;32m                                                                                                    }[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "required": [[0m
[0;32m                                                                                                    "key",[0m
[0;32m                                                                                                    "operator"[0m
[0;32m                                                                                                ],[0m
[0;32m                                                                                                "type": "object"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "array"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "matchLabels": {[0m
[0;32m                                                                                            "additionalProperties": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        }[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "namespaces": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "topologyKey": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "topologyKey"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "weight": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "podAffinityTerm",[0m
[0;32m                                                                        "weight"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "array"[0m
[0;32m                                                            },[0m
[0;32m                                                            "requiredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                                                "items": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "labelSelector": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "matchExpressions": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "matchLabels": {[0m
[0;32m                                                                                    "additionalProperties": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "namespaceSelector": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "matchExpressions": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "matchLabels": {[0m
[0;32m                                                                                    "additionalProperties": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "namespaces": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "topologyKey": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "topologyKey"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "array"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "podAntiAffinity": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "preferredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                                                "items": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "podAffinityTerm": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "labelSelector": {[0m
[0;32m                                                                                    "properties": {[0m
[0;32m                                                                                        "matchExpressions": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "properties": {[0m
[0;32m                                                                                                    "key": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "operator": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "values": {[0m
[0;32m                                                                                                        "items": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "type": "array"[0m
[0;32m                                                                                                    }[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "required": [[0m
[0;32m                                                                                                    "key",[0m
[0;32m                                                                                                    "operator"[0m
[0;32m                                                                                                ],[0m
[0;32m                                                                                                "type": "object"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "array"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "matchLabels": {[0m
[0;32m                                                                                            "additionalProperties": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        }[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "namespaceSelector": {[0m
[0;32m                                                                                    "properties": {[0m
[0;32m                                                                                        "matchExpressions": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "properties": {[0m
[0;32m                                                                                                    "key": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "operator": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "values": {[0m
[0;32m                                                                                                        "items": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "type": "array"[0m
[0;32m                                                                                                    }[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "required": [[0m
[0;32m                                                                                                    "key",[0m
[0;32m                                                                                                    "operator"[0m
[0;32m                                                                                                ],[0m
[0;32m                                                                                                "type": "object"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "array"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "matchLabels": {[0m
[0;32m                                                                                            "additionalProperties": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        }[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "namespaces": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "topologyKey": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "topologyKey"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "weight": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "podAffinityTerm",[0m
[0;32m                                                                        "weight"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "array"[0m
[0;32m                                                            },[0m
[0;32m                                                            "requiredDuringSchedulingIgnoredDuringExecution": {[0m
[0;32m                                                                "items": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "labelSelector": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "matchExpressions": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "matchLabels": {[0m
[0;32m                                                                                    "additionalProperties": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "namespaceSelector": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "matchExpressions": {[0m
[0;32m                                                                                    "items": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "key": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "operator": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "values": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "key",[0m
[0;32m                                                                                            "operator"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "array"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "matchLabels": {[0m
[0;32m                                                                                    "additionalProperties": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "namespaces": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "topologyKey": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "topologyKey"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "array"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "type": "object"[0m
[0;32m                                            },[0m
[0;32m                                            "environment": {[0m
[0;32m                                                "properties": {[0m
[0;32m                                                    "database": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "dbConfig": {[0m
[0;32m                                                                "additionalProperties": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "disableNodePortService": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "name": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "settings": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "codeset": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "collation": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "dftExtentSize": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "dftPageSize": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "dftTableOrg": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "enableBackupCompression": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "encrypt": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "territory": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object",[0m
[0;32m                                                                "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                            },[0m
[0;32m                                                            "ssl": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "allowSslOnly": {[0m
[0;32m                                                                        "type": "boolean"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "certLabel": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "secretName": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "dbType": {[0m
[0;32m                                                        "type": "string"[0m
[0;32m                                                    },[0m
[0;32m                                                    "fcm": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "dnsPolicy": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "hostNetwork": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "ips": {[0m
[0;32m                                                                "items": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "array"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "instance": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "dbmConfig": {[0m
[0;32m                                                                "additionalProperties": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "fencedUser": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "group": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "password": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "registry": {[0m
[0;32m                                                                "additionalProperties": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "user": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "ldap": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "admin": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "adminGroup": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "blueAdminPassword": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "domain": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "enabled": {[0m
[0;32m                                                                "type": "boolean"[0m
[0;32m                                                            },[0m
[0;32m                                                            "password": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "port": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "server": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "userGroup": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    },[0m
[0;32m                                                    "mln": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "distribution": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "total": {[0m
[0;32m                                                                "type": "integer"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object"[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "type": "object",[0m
[0;32m                                                "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                            },[0m
[0;32m                                            "license": {[0m
[0;32m                                                "properties": {[0m
[0;32m                                                    "accept": {[0m
[0;32m                                                        "type": "boolean"[0m
[0;32m                                                    },[0m
[0;32m                                                    "value": {[0m
[0;32m                                                        "type": "string"[0m
[0;32m                                                    },[0m
[0;32m                                                    "valueFrom": {[0m
[0;32m                                                        "properties": {[0m
[0;32m                                                            "configMapKeyRef": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "key": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "name": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "optional": {[0m
[0;32m                                                                        "type": "boolean"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "required": [[0m
[0;32m                                                                    "key"[0m
[0;32m                                                                ],[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "secretKeyRef": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "key": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "name": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "optional": {[0m
[0;32m                                                                        "type": "boolean"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "required": [[0m
[0;32m                                                                    "key"[0m
[0;32m                                                                ],[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "vaultKeyRef": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "field": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "name": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "urn": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            }[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": "object",[0m
[0;32m                                                        "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "type": "object"[0m
[0;32m                                            },[0m
[0;32m                                            "podConfig": {[0m
[0;32m                                                "additionalProperties": {[0m
[0;32m                                                    "properties": {[0m
[0;32m                                                        "annotations": {[0m
[0;32m                                                            "additionalProperties": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        },[0m
[0;32m                                                        "hostAliases": {[0m
[0;32m                                                            "items": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "hostnames": {[0m
[0;32m                                                                        "items": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "array"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "ip": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "array"[0m
[0;32m                                                        },[0m
[0;32m                                                        "labels": {[0m
[0;32m                                                            "additionalProperties": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        },[0m
[0;32m                                                        "resource": {[0m
[0;32m                                                            "additionalProperties": {[0m
[0;32m                                                                "properties": {[0m
[0;32m                                                                    "limits": {[0m
[0;32m                                                                        "additionalProperties": {[0m
[0;32m                                                                            "anyOf": [[0m
[0;32m                                                                                {[0m
[0;32m                                                                                    "type": "integer"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                            "x-kubernetes-int-or-string": true[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "object"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "requests": {[0m
[0;32m                                                                        "additionalProperties": {[0m
[0;32m                                                                            "anyOf": [[0m
[0;32m                                                                                {[0m
[0;32m                                                                                    "type": "integer"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                            "x-kubernetes-int-or-string": true[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": "object"[0m
[0;32m                                                                    }[0m
[0;32m                                                                },[0m
[0;32m                                                                "type": "object"[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "type": "object"[0m
[0;32m                                                },[0m
[0;32m                                                "type": "object"[0m
[0;32m                                            },[0m
[0;32m                                            "size": {[0m
[0;32m                                                "format": "int32",[0m
[0;32m                                                "minimum": 1,[0m
[0;32m                                                "type": "integer"[0m
[0;32m                                            },[0m
[0;32m                                            "storage": {[0m
[0;32m                                                "items": {[0m
[0;32m                                                    "properties": {[0m
[0;32m                                                        "claimName": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "mountPath": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "name": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "spec": {[0m
[0;32m                                                            "properties": {[0m
[0;32m                                                                "accessModes": {[0m
[0;32m                                                                    "items": {[0m
[0;32m                                                                        "type": "string"[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "array"[0m
[0;32m                                                                },[0m
[0;32m                                                                "dataSource": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "apiGroup": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "kind": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "name": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "kind",[0m
[0;32m                                                                        "name"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "dataSourceRef": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "apiGroup": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "kind": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "name": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "kind",[0m
[0;32m                                                                        "name"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "resources": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "limits": {[0m
[0;32m                                                                            "additionalProperties": {[0m
[0;32m                                                                                "anyOf": [[0m
[0;32m                                                                                    {[0m
[0;32m                                                                                        "type": "integer"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                                "x-kubernetes-int-or-string": true[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "requests": {[0m
[0;32m                                                                            "additionalProperties": {[0m
[0;32m                                                                                "anyOf": [[0m
[0;32m                                                                                    {[0m
[0;32m                                                                                        "type": "integer"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                                "x-kubernetes-int-or-string": true[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "selector": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "matchExpressions": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "operator": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "values": {[0m
[0;32m                                                                                        "items": {[0m
[0;32m                                                                                            "type": "string"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "type": "array"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key",[0m
[0;32m                                                                                    "operator"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "matchLabels": {[0m
[0;32m                                                                            "additionalProperties": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "storageClassName": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "volumeMode": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "volumeName": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                }[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": {[0m
[0;32m                                                            "enum": [[0m
[0;32m                                                                "template",[0m
[0;32m                                                                "existing",[0m
[0;32m                                                                "create",[0m
[0;32m                                                                ""[0m
[0;32m                                                            ],[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "required": [[0m
[0;32m                                                        "name"[0m
[0;32m                                                    ],[0m
[0;32m                                                    "type": "object"[0m
[0;32m                                                },[0m
[0;32m                                                "type": "array"[0m
[0;32m                                            },[0m
[0;32m                                            "tolerations": {[0m
[0;32m                                                "items": {[0m
[0;32m                                                    "properties": {[0m
[0;32m                                                        "effect": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "key": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "operator": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "tolerationSeconds": {[0m
[0;32m                                                            "format": "int64",[0m
[0;32m                                                            "type": "integer"[0m
[0;32m                                                        },[0m
[0;32m                                                        "value": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "type": "object"[0m
[0;32m                                                },[0m
[0;32m                                                "type": "array"[0m
[0;32m                                            },[0m
[0;32m                                            "vaults": {[0m
[0;32m                                                "items": {[0m
[0;32m                                                    "properties": {[0m
[0;32m                                                        "cacert": {[0m
[0;32m                                                            "properties": {[0m
[0;32m                                                                "value": {[0m
[0;32m                                                                    "minLength": 1,[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "value64": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "valueFrom": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "configMapKeyRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "key": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "optional": {[0m
[0;32m                                                                                    "type": "boolean"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "key"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretKeyRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "key": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "optional": {[0m
[0;32m                                                                                    "type": "boolean"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "key"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "vaultKeyRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "field": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "urn": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object",[0m
[0;32m                                                                    "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                                }[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        },[0m
[0;32m                                                        "headers": {[0m
[0;32m                                                            "items": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "array"[0m
[0;32m                                                        },[0m
[0;32m                                                        "name": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "provider": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "token": {[0m
[0;32m                                                            "properties": {[0m
[0;32m                                                                "value": {[0m
[0;32m                                                                    "minLength": 1,[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "value64": {[0m
[0;32m                                                                    "type": "string"[0m
[0;32m                                                                },[0m
[0;32m                                                                "valueFrom": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "configMapKeyRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "key": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "optional": {[0m
[0;32m                                                                                    "type": "boolean"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "key"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretKeyRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "key": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "optional": {[0m
[0;32m                                                                                    "type": "boolean"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "key"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "vaultKeyRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "field": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "urn": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object",[0m
[0;32m                                                                    "x-kubernetes-preserve-unknown-fields": true[0m
[0;32m                                                                }[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        },[0m
[0;32m                                                        "url": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "required": [[0m
[0;32m                                                        "name",[0m
[0;32m                                                        "provider",[0m
[0;32m                                                        "url"[0m
[0;32m                                                    ],[0m
[0;32m                                                    "type": "object"[0m
[0;32m                                                },[0m
[0;32m                                                "type": "array"[0m
[0;32m                                            },[0m
[0;32m                                            "version": {[0m
[0;32m                                                "default": "11.5.7.0",[0m
[0;32m                                                "type": "string"[0m
[0;32m                                            },[0m
[0;32m                                            "volumeSources": {[0m
[0;32m                                                "items": {[0m
[0;32m                                                    "properties": {[0m
[0;32m                                                        "optional": {[0m
[0;32m                                                            "type": "boolean"[0m
[0;32m                                                        },[0m
[0;32m                                                        "visibility": {[0m
[0;32m                                                            "items": {[0m
[0;32m                                                                "type": "string"[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "array"[0m
[0;32m                                                        },[0m
[0;32m                                                        "volumeSource": {[0m
[0;32m                                                            "properties": {[0m
[0;32m                                                                "awsElasticBlockStore": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "partition": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeID": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "volumeID"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "azureDisk": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "cachingMode": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "diskName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "diskURI": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "kind": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "diskName",[0m
[0;32m                                                                        "diskURI"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "azureFile": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "shareName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "secretName",[0m
[0;32m                                                                        "shareName"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "cephfs": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "monitors": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "path": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretFile": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "user": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "monitors"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "cinder": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeID": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "volumeID"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "configMap": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "defaultMode": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "items": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "mode": {[0m
[0;32m                                                                                        "format": "int32",[0m
[0;32m                                                                                        "type": "integer"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "path": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key",[0m
[0;32m                                                                                    "path"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "name": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "optional": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "csi": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "driver": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "nodePublishSecretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeAttributes": {[0m
[0;32m                                                                            "additionalProperties": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "driver"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "downwardAPI": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "defaultMode": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "items": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "fieldRef": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "apiVersion": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "fieldPath": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "fieldPath"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "mode": {[0m
[0;32m                                                                                        "format": "int32",[0m
[0;32m                                                                                        "type": "integer"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "path": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "resourceFieldRef": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "containerName": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "divisor": {[0m
[0;32m                                                                                                "anyOf": [[0m
[0;32m                                                                                                    {[0m
[0;32m                                                                                                        "type": "integer"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    }[0m
[0;32m                                                                                                ],[0m
[0;32m                                                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                                                "x-kubernetes-int-or-string": true[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "resource": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "resource"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "path"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "emptyDir": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "medium": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "sizeLimit": {[0m
[0;32m                                                                            "anyOf": [[0m
[0;32m                                                                                {[0m
[0;32m                                                                                    "type": "integer"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                            "x-kubernetes-int-or-string": true[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "ephemeral": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "volumeClaimTemplate": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "metadata": {[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "spec": {[0m
[0;32m                                                                                    "properties": {[0m
[0;32m                                                                                        "accessModes": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "array"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "dataSource": {[0m
[0;32m                                                                                            "properties": {[0m
[0;32m                                                                                                "apiGroup": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "kind": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "name": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                }[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "required": [[0m
[0;32m                                                                                                "kind",[0m
[0;32m                                                                                                "name"[0m
[0;32m                                                                                            ],[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "dataSourceRef": {[0m
[0;32m                                                                                            "properties": {[0m
[0;32m                                                                                                "apiGroup": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "kind": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "name": {[0m
[0;32m                                                                                                    "type": "string"[0m
[0;32m                                                                                                }[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "required": [[0m
[0;32m                                                                                                "kind",[0m
[0;32m                                                                                                "name"[0m
[0;32m                                                                                            ],[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "resources": {[0m
[0;32m                                                                                            "properties": {[0m
[0;32m                                                                                                "limits": {[0m
[0;32m                                                                                                    "additionalProperties": {[0m
[0;32m                                                                                                        "anyOf": [[0m
[0;32m                                                                                                            {[0m
[0;32m                                                                                                                "type": "integer"[0m
[0;32m                                                                                                            },[0m
[0;32m                                                                                                            {[0m
[0;32m                                                                                                                "type": "string"[0m
[0;32m                                                                                                            }[0m
[0;32m                                                                                                        ],[0m
[0;32m                                                                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                                                        "x-kubernetes-int-or-string": true[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "type": "object"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "requests": {[0m
[0;32m                                                                                                    "additionalProperties": {[0m
[0;32m                                                                                                        "anyOf": [[0m
[0;32m                                                                                                            {[0m
[0;32m                                                                                                                "type": "integer"[0m
[0;32m                                                                                                            },[0m
[0;32m                                                                                                            {[0m
[0;32m                                                                                                                "type": "string"[0m
[0;32m                                                                                                            }[0m
[0;32m                                                                                                        ],[0m
[0;32m                                                                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                                                        "x-kubernetes-int-or-string": true[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "type": "object"[0m
[0;32m                                                                                                }[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "selector": {[0m
[0;32m                                                                                            "properties": {[0m
[0;32m                                                                                                "matchExpressions": {[0m
[0;32m                                                                                                    "items": {[0m
[0;32m                                                                                                        "properties": {[0m
[0;32m                                                                                                            "key": {[0m
[0;32m                                                                                                                "type": "string"[0m
[0;32m                                                                                                            },[0m
[0;32m                                                                                                            "operator": {[0m
[0;32m                                                                                                                "type": "string"[0m
[0;32m                                                                                                            },[0m
[0;32m                                                                                                            "values": {[0m
[0;32m                                                                                                                "items": {[0m
[0;32m                                                                                                                    "type": "string"[0m
[0;32m                                                                                                                },[0m
[0;32m                                                                                                                "type": "array"[0m
[0;32m                                                                                                            }[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "required": [[0m
[0;32m                                                                                                            "key",[0m
[0;32m                                                                                                            "operator"[0m
[0;32m                                                                                                        ],[0m
[0;32m                                                                                                        "type": "object"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "type": "array"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "matchLabels": {[0m
[0;32m                                                                                                    "additionalProperties": {[0m
[0;32m                                                                                                        "type": "string"[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "type": "object"[0m
[0;32m                                                                                                }[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "type": "object"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "storageClassName": {[0m
[0;32m                                                                                            "type": "string"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "volumeMode": {[0m
[0;32m                                                                                            "type": "string"[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "volumeName": {[0m
[0;32m                                                                                            "type": "string"[0m
[0;32m                                                                                        }[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "type": "object"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "required": [[0m
[0;32m                                                                                "spec"[0m
[0;32m                                                                            ],[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "fc": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "lun": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "targetWWNs": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "wwids": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "flexVolume": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "driver": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "options": {[0m
[0;32m                                                                            "additionalProperties": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "driver"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "flocker": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "datasetName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "datasetUUID": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "gcePersistentDisk": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "partition": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "pdName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "pdName"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "gitRepo": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "directory": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "repository": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "revision": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "repository"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "glusterfs": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "endpoints": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "path": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "endpoints",[0m
[0;32m                                                                        "path"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "hostPath": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "path": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "type": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "path"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "iscsi": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "chapAuthDiscovery": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "chapAuthSession": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "initiatorName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "iqn": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "iscsiInterface": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "lun": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "portals": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "targetPortal": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "iqn",[0m
[0;32m                                                                        "lun",[0m
[0;32m                                                                        "targetPortal"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "nfs": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "path": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "server": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "path",[0m
[0;32m                                                                        "server"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "persistentVolumeClaim": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "claimName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "claimName"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "photonPersistentDisk": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "pdID": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "pdID"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "portworxVolume": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeID": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "volumeID"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "projected": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "defaultMode": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "sources": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "configMap": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "properties": {[0m
[0;32m                                                                                                        "key": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "mode": {[0m
[0;32m                                                                                                            "format": "int32",[0m
[0;32m                                                                                                            "type": "integer"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "path": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        }[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "required": [[0m
[0;32m                                                                                                        "key",[0m
[0;32m                                                                                                        "path"[0m
[0;32m                                                                                                    ],[0m
[0;32m                                                                                                    "type": "object"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "name": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "optional": {[0m
[0;32m                                                                                                "type": "boolean"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "downwardAPI": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "properties": {[0m
[0;32m                                                                                                        "fieldRef": {[0m
[0;32m                                                                                                            "properties": {[0m
[0;32m                                                                                                                "apiVersion": {[0m
[0;32m                                                                                                                    "type": "string"[0m
[0;32m                                                                                                                },[0m
[0;32m                                                                                                                "fieldPath": {[0m
[0;32m                                                                                                                    "type": "string"[0m
[0;32m                                                                                                                }[0m
[0;32m                                                                                                            },[0m
[0;32m                                                                                                            "required": [[0m
[0;32m                                                                                                                "fieldPath"[0m
[0;32m                                                                                                            ],[0m
[0;32m                                                                                                            "type": "object"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "mode": {[0m
[0;32m                                                                                                            "format": "int32",[0m
[0;32m                                                                                                            "type": "integer"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "path": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "resourceFieldRef": {[0m
[0;32m                                                                                                            "properties": {[0m
[0;32m                                                                                                                "containerName": {[0m
[0;32m                                                                                                                    "type": "string"[0m
[0;32m                                                                                                                },[0m
[0;32m                                                                                                                "divisor": {[0m
[0;32m                                                                                                                    "anyOf": [[0m
[0;32m                                                                                                                        {[0m
[0;32m                                                                                                                            "type": "integer"[0m
[0;32m                                                                                                                        },[0m
[0;32m                                                                                                                        {[0m
[0;32m                                                                                                                            "type": "string"[0m
[0;32m                                                                                                                        }[0m
[0;32m                                                                                                                    ],[0m
[0;32m                                                                                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",[0m
[0;32m                                                                                                                    "x-kubernetes-int-or-string": true[0m
[0;32m                                                                                                                },[0m
[0;32m                                                                                                                "resource": {[0m
[0;32m                                                                                                                    "type": "string"[0m
[0;32m                                                                                                                }[0m
[0;32m                                                                                                            },[0m
[0;32m                                                                                                            "required": [[0m
[0;32m                                                                                                                "resource"[0m
[0;32m                                                                                                            ],[0m
[0;32m                                                                                                            "type": "object"[0m
[0;32m                                                                                                        }[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "required": [[0m
[0;32m                                                                                                        "path"[0m
[0;32m                                                                                                    ],[0m
[0;32m                                                                                                    "type": "object"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "secret": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "items": {[0m
[0;32m                                                                                                "items": {[0m
[0;32m                                                                                                    "properties": {[0m
[0;32m                                                                                                        "key": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "mode": {[0m
[0;32m                                                                                                            "format": "int32",[0m
[0;32m                                                                                                            "type": "integer"[0m
[0;32m                                                                                                        },[0m
[0;32m                                                                                                        "path": {[0m
[0;32m                                                                                                            "type": "string"[0m
[0;32m                                                                                                        }[0m
[0;32m                                                                                                    },[0m
[0;32m                                                                                                    "required": [[0m
[0;32m                                                                                                        "key",[0m
[0;32m                                                                                                        "path"[0m
[0;32m                                                                                                    ],[0m
[0;32m                                                                                                    "type": "object"[0m
[0;32m                                                                                                },[0m
[0;32m                                                                                                "type": "array"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "name": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "optional": {[0m
[0;32m                                                                                                "type": "boolean"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "serviceAccountToken": {[0m
[0;32m                                                                                        "properties": {[0m
[0;32m                                                                                            "audience": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "expirationSeconds": {[0m
[0;32m                                                                                                "format": "int64",[0m
[0;32m                                                                                                "type": "integer"[0m
[0;32m                                                                                            },[0m
[0;32m                                                                                            "path": {[0m
[0;32m                                                                                                "type": "string"[0m
[0;32m                                                                                            }[0m
[0;32m                                                                                        },[0m
[0;32m                                                                                        "required": [[0m
[0;32m                                                                                            "path"[0m
[0;32m                                                                                        ],[0m
[0;32m                                                                                        "type": "object"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "quobyte": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "group": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "registry": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "tenant": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "user": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volume": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "registry",[0m
[0;32m                                                                        "volume"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "rbd": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "image": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "keyring": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "monitors": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "type": "string"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "pool": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "user": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "image",[0m
[0;32m                                                                        "monitors"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "scaleIO": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "gateway": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "protectionDomain": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "sslEnabled": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "storageMode": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "storagePool": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "system": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "gateway",[0m
[0;32m                                                                        "secretRef",[0m
[0;32m                                                                        "system"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "secret": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "defaultMode": {[0m
[0;32m                                                                            "format": "int32",[0m
[0;32m                                                                            "type": "integer"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "items": {[0m
[0;32m                                                                            "items": {[0m
[0;32m                                                                                "properties": {[0m
[0;32m                                                                                    "key": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "mode": {[0m
[0;32m                                                                                        "format": "int32",[0m
[0;32m                                                                                        "type": "integer"[0m
[0;32m                                                                                    },[0m
[0;32m                                                                                    "path": {[0m
[0;32m                                                                                        "type": "string"[0m
[0;32m                                                                                    }[0m
[0;32m                                                                                },[0m
[0;32m                                                                                "required": [[0m
[0;32m                                                                                    "key",[0m
[0;32m                                                                                    "path"[0m
[0;32m                                                                                ],[0m
[0;32m                                                                                "type": "object"[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "array"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "optional": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "storageos": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "readOnly": {[0m
[0;32m                                                                            "type": "boolean"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "secretRef": {[0m
[0;32m                                                                            "properties": {[0m
[0;32m                                                                                "name": {[0m
[0;32m                                                                                    "type": "string"[0m
[0;32m                                                                                }[0m
[0;32m                                                                            },[0m
[0;32m                                                                            "type": "object"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumeNamespace": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                },[0m
[0;32m                                                                "vsphereVolume": {[0m
[0;32m                                                                    "properties": {[0m
[0;32m                                                                        "fsType": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "storagePolicyID": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "storagePolicyName": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        },[0m
[0;32m                                                                        "volumePath": {[0m
[0;32m                                                                            "type": "string"[0m
[0;32m                                                                        }[0m
[0;32m                                                                    },[0m
[0;32m                                                                    "required": [[0m
[0;32m                                                                        "volumePath"[0m
[0;32m                                                                    ],[0m
[0;32m                                                                    "type": "object"[0m
[0;32m                                                                }[0m
[0;32m                                                            },[0m
[0;32m                                                            "type": "object"[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "type": "object"[0m
[0;32m                                                },[0m
[0;32m                                                "type": "array"[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "required": [[0m
[0;32m                                            "size",[0m
[0;32m                                            "version"[0m
[0;32m                                        ],[0m
[0;32m                                        "type": "object"[0m
[0;32m                                    },[0m
[0;32m                                    "status": {[0m
[0;32m                                        "properties": {[0m
[0;32m                                            "conditions": {[0m
[0;32m                                                "items": {[0m
[0;32m                                                    "properties": {[0m
[0;32m                                                        "lastTransitionTime": {[0m
[0;32m                                                            "format": "date-time",[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "message": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "reason": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "status": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        },[0m
[0;32m                                                        "type": {[0m
[0;32m                                                            "type": "string"[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "required": [[0m
[0;32m                                                        "status",[0m
[0;32m                                                        "type"[0m
[0;32m                                                    ],[0m
[0;32m                                                    "type": "object"[0m
[0;32m                                                },[0m
[0;32m                                                "type": "array"[0m
[0;32m                                            },[0m
[0;32m                                            "maintenanceState": {[0m
[0;32m                                                "type": "string"[0m
[0;32m                                            },[0m
[0;32m                                            "state": {[0m
[0;32m                                                "type": "string"[0m
[0;32m                                            },[0m
[0;32m                                            "version": {[0m
[0;32m                                                "type": "string"[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "required": [[0m
[0;32m                                            "state"[0m
[0;32m                                        ],[0m
[0;32m                                        "type": "object"[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "type": "object"[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "served": true,[0m
[0;32m                        "storage": true,[0m
[0;32m                        "subresources": {[0m
[0;32m                            "status": {}[0m
[0;32m                        }[0m
[0;32m                    }[0m
[0;32m                ][0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "acceptedNames": {[0m
[0;32m                    "kind": "Db2uCluster",[0m
[0;32m                    "listKind": "Db2uClusterList",[0m
[0;32m                    "plural": "db2uclusters",[0m
[0;32m                    "shortNames": [[0m
[0;32m                        "db2u"[0m
[0;32m                    ],[0m
[0;32m                    "singular": "db2ucluster"[0m
[0;32m                },[0m
[0;32m                "conditions": [[0m
[0;32m                    {[0m
[0;32m                        "lastTransitionTime": "2024-04-14T07:34:09Z",[0m
[0;32m                        "message": "no conflicts found",[0m
[0;32m                        "reason": "NoConflicts",[0m
[0;32m                        "status": "True",[0m
[0;32m                        "type": "NamesAccepted"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "lastTransitionTime": "2024-04-14T07:34:09Z",[0m
[0;32m                        "message": "the initial names have been accepted",[0m
[0;32m                        "reason": "InitialNamesAccepted",[0m
[0;32m                        "status": "True",[0m
[0;32m                        "type": "Established"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "storedVersions": [[0m
[0;32m                    "v1"[0m
[0;32m                ][0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "attempts": 1,[0m
[0;32m    "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "ansible_facts": {[0m
[0;32m        "db2_version": "s11.5.9.0-cn1"[0m
[0;32m    },[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "Db2 Channel ............................ v110509.0",[0m
[0;32m        "Db2 Version ............................ s11.5.9.0-cn1"[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [][0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;33m        "kind": "Db2uCluster",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"db2u.databases.ibm.com/v1\",\"kind\":\"Db2uCluster\",\"metadata\":{\"name\":\"db2u-manage\",\"namespace\":\"db2u\"},\"spec\":{\"account\":{\"imagePullSecrets\":[\"ibm-registry\"],\"privileged\":true},\"addOns\":{\"graph\":{\"enabled\":false},\"rest\":{\"enabled\":false}},\"environment\":{\"database\":{\"dbConfig\":{\"APPLHEAPSZ\":\"8192 AUTOMATIC\"},\"name\":\"BLUDB\",\"settings\":{\"dftTableOrg\":\"ROW\"},\"ssl\":{\"certLabel\":\"CN=db2u\",\"secretName\":\"db2u-certificate\"}},\"dbType\":\"db2wh\",\"instance\":{\"registry\":{\"DB2AUTH\":\"OSAUTHDB,ALLOW_LOCAL_FALLBACK,PLUGIN_AUTO_RELOAD\",\"DB2_4K_DEVICE_SUPPORT\":\"ON\",\"DB2_FMP_RUN_AS_CONNECTED_USER\":\"NO\",\"DB2_WORKLOAD\":\"ANALYTICS\"}},\"mln\":{\"total\":1}},\"license\":{\"accept\":true},\"podConfig\":{\"db2u\":{\"resource\":{\"db2u\":{\"limits\":{\"cpu\":\"6000m\",\"memory\":\"16Gi\"},\"requests\":{\"cpu\":\"4000m\",\"memory\":\"8Gi\"}}}}},\"size\":1,\"storage\":[{\"name\":\"meta\",\"spec\":{\"accessModes\":[\"ReadWriteMany\"],\"resources\":{\"requests\":{\"storage\":\"20Gi\"}},\"storageClassName\":\"ocs-storagecluster-cephfs\"},\"type\":\"create\"},{\"name\":\"data\",\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"gp3-csi\"},\"type\":\"template\"},{\"name\":\"backup\",\"spec\":{\"accessModes\":[\"ReadWriteMany\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"ocs-storagecluster-cephfs\"},\"type\":\"create\"},{\"name\":\"activelogs\",\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"gp3-csi\"},\"type\":\"template\"},{\"name\":\"tempts\",\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"gp3-csi\"},\"type\":\"template\"}],\"version\":\"s11.5.9.0-cn1\"}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:35:04Z",[0m
[0;33m            "generation": 1,[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            ".": {},[0m
[0;33m                            "f:account": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:imagePullSecrets": {},[0m
[0;33m                                "f:privileged": {}[0m
[0;33m                            },[0m
[0;33m                            "f:addOns": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:graph": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:enabled": {}[0m
[0;33m                                },[0m
[0;33m                                "f:rest": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:enabled": {}[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:environment": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:database": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:dbConfig": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:APPLHEAPSZ": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:settings": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:dftTableOrg": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:ssl": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:certLabel": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "f:dbType": {},[0m
[0;33m                                "f:instance": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:registry": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:DB2AUTH": {},[0m
[0;33m                                        "f:DB2_4K_DEVICE_SUPPORT": {},[0m
[0;33m                                        "f:DB2_FMP_RUN_AS_CONNECTED_USER": {},[0m
[0;33m                                        "f:DB2_WORKLOAD": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "f:mln": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:total": {}[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:license": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:accept": {}[0m
[0;33m                            },[0m
[0;33m                            "f:podConfig": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:db2u": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:resource": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:db2u": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:limits": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:cpu": {},[0m
[0;33m                                                "f:memory": {}[0m
[0;33m                                            },[0m
[0;33m                                            "f:requests": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:cpu": {},[0m
[0;33m                                                "f:memory": {}[0m
[0;33m                                            }[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:size": {},[0m
[0;33m                            "f:storage": {},[0m
[0;33m                            "f:version": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:35:04Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u-manage",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "resourceVersion": "10108554",[0m
[0;33m            "uid": "3f2ca4c4-f00a-45fe-9325-889d845d3438"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "account": {[0m
[0;33m                "imagePullSecrets": [[0m
[0;33m                    "ibm-registry"[0m
[0;33m                ],[0m
[0;33m                "privileged": true[0m
[0;33m            },[0m
[0;33m            "addOns": {[0m
[0;33m                "graph": {[0m
[0;33m                    "enabled": false[0m
[0;33m                },[0m
[0;33m                "rest": {[0m
[0;33m                    "enabled": false[0m
[0;33m                }[0m
[0;33m            },[0m
[0;33m            "environment": {[0m
[0;33m                "database": {[0m
[0;33m                    "dbConfig": {[0m
[0;33m                        "APPLHEAPSZ": "8192 AUTOMATIC"[0m
[0;33m                    },[0m
[0;33m                    "name": "BLUDB",[0m
[0;33m                    "settings": {[0m
[0;33m                        "dftTableOrg": "ROW"[0m
[0;33m                    },[0m
[0;33m                    "ssl": {[0m
[0;33m                        "certLabel": "CN=db2u",[0m
[0;33m                        "secretName": "db2u-certificate"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                "dbType": "db2wh",[0m
[0;33m                "instance": {[0m
[0;33m                    "registry": {[0m
[0;33m                        "DB2AUTH": "OSAUTHDB,ALLOW_LOCAL_FALLBACK,PLUGIN_AUTO_RELOAD",[0m
[0;33m                        "DB2_4K_DEVICE_SUPPORT": "ON",[0m
[0;33m                        "DB2_FMP_RUN_AS_CONNECTED_USER": "NO",[0m
[0;33m                        "DB2_WORKLOAD": "ANALYTICS"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                "mln": {[0m
[0;33m                    "total": 1[0m
[0;33m                }[0m
[0;33m            },[0m
[0;33m            "license": {[0m
[0;33m                "accept": true[0m
[0;33m            },[0m
[0;33m            "podConfig": {[0m
[0;33m                "db2u": {[0m
[0;33m                    "resource": {[0m
[0;33m                        "db2u": {[0m
[0;33m                            "limits": {[0m
[0;33m                                "cpu": "6000m",[0m
[0;33m                                "memory": "16Gi"[0m
[0;33m                            },[0m
[0;33m                            "requests": {[0m
[0;33m                                "cpu": "4000m",[0m
[0;33m                                "memory": "8Gi"[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            },[0m
[0;33m            "size": 1,[0m
[0;33m            "storage": [[0m
[0;33m                {[0m
[0;33m                    "name": "meta",[0m
[0;33m                    "spec": {[0m
[0;33m                        "accessModes": [[0m
[0;33m                            "ReadWriteMany"[0m
[0;33m                        ],[0m
[0;33m                        "resources": {[0m
[0;33m                            "requests": {[0m
[0;33m                                "storage": "20Gi"[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "storageClassName": "ocs-storagecluster-cephfs"[0m
[0;33m                    },[0m
[0;33m                    "type": "create"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "data",[0m
[0;33m                    "spec": {[0m
[0;33m                        "accessModes": [[0m
[0;33m                            "ReadWriteOnce"[0m
[0;33m                        ],[0m
[0;33m                        "resources": {[0m
[0;33m                            "requests": {[0m
[0;33m                                "storage": "100Gi"[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "storageClassName": "gp3-csi"[0m
[0;33m                    },[0m
[0;33m                    "type": "template"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "backup",[0m
[0;33m                    "spec": {[0m
[0;33m                        "accessModes": [[0m
[0;33m                            "ReadWriteMany"[0m
[0;33m                        ],[0m
[0;33m                        "resources": {[0m
[0;33m                            "requests": {[0m
[0;33m                                "storage": "100Gi"[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "storageClassName": "ocs-storagecluster-cephfs"[0m
[0;33m                    },[0m
[0;33m                    "type": "create"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "activelogs",[0m
[0;33m                    "spec": {[0m
[0;33m                        "accessModes": [[0m
[0;33m                            "ReadWriteOnce"[0m
[0;33m                        ],[0m
[0;33m                        "resources": {[0m
[0;33m                            "requests": {[0m
[0;33m                                "storage": "100Gi"[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "storageClassName": "gp3-csi"[0m
[0;33m                    },[0m
[0;33m                    "type": "template"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "tempts",[0m
[0;33m                    "spec": {[0m
[0;33m                        "accessModes": [[0m
[0;33m                            "ReadWriteOnce"[0m
[0;33m                        ],[0m
[0;33m                        "resources": {[0m
[0;33m                            "requests": {[0m
[0;33m                                "storage": "100Gi"[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "storageClassName": "gp3-csi"[0m
[0;33m                    },[0m
[0;33m                    "type": "template"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "version": "s11.5.9.0-cn1"[0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "attempts": 5,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m            "kind": "Db2uCluster",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "db2u/certs-api-cert": "[secure]",[0m
[0;32m                    "db2u/certs-api-key": "[secure]",[0m
[0;32m                    "db2u/certs-wv-rest": "[secure]",[0m
[0;32m                    "db2u/license": "[secure]",[0m
[0;32m                    "db2u/sshkeys-db2instusr": "[secure]",[0m
[0;32m                    "db2u/sshkeys-db2uadm": "[secure]",[0m
[0;32m                    "db2u/sshkeys-db2uhausr": "[secure]",[0m
[0;32m                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"db2u.databases.ibm.com/v1\",\"kind\":\"Db2uCluster\",\"metadata\":{\"name\":\"db2u-manage\",\"namespace\":\"db2u\"},\"spec\":{\"account\":{\"imagePullSecrets\":[\"ibm-registry\"],\"privileged\":true},\"addOns\":{\"graph\":{\"enabled\":false},\"rest\":{\"enabled\":false}},\"environment\":{\"database\":{\"dbConfig\":{\"APPLHEAPSZ\":\"8192 AUTOMATIC\"},\"name\":\"BLUDB\",\"settings\":{\"dftTableOrg\":\"ROW\"},\"ssl\":{\"certLabel\":\"CN=db2u\",\"secretName\":\"db2u-certificate\"}},\"dbType\":\"db2wh\",\"instance\":{\"registry\":{\"DB2AUTH\":\"OSAUTHDB,ALLOW_LOCAL_FALLBACK,PLUGIN_AUTO_RELOAD\",\"DB2_4K_DEVICE_SUPPORT\":\"ON\",\"DB2_FMP_RUN_AS_CONNECTED_USER\":\"NO\",\"DB2_WORKLOAD\":\"ANALYTICS\"}},\"mln\":{\"total\":1}},\"license\":{\"accept\":true},\"podConfig\":{\"db2u\":{\"resource\":{\"db2u\":{\"limits\":{\"cpu\":\"6000m\",\"memory\":\"16Gi\"},\"requests\":{\"cpu\":\"4000m\",\"memory\":\"8Gi\"}}}}},\"size\":1,\"storage\":[{\"name\":\"meta\",\"spec\":{\"accessModes\":[\"ReadWriteMany\"],\"resources\":{\"requests\":{\"storage\":\"20Gi\"}},\"storageClassName\":\"ocs-storagecluster-cephfs\"},\"type\":\"create\"},{\"name\":\"data\",\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"gp3-csi\"},\"type\":\"template\"},{\"name\":\"backup\",\"spec\":{\"accessModes\":[\"ReadWriteMany\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"ocs-storagecluster-cephfs\"},\"type\":\"create\"},{\"name\":\"activelogs\",\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"gp3-csi\"},\"type\":\"template\"},{\"name\":\"tempts\",\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"gp3-csi\"},\"type\":\"template\"}],\"version\":\"s11.5.9.0-cn1\"}}"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-14T07:35:04Z",[0m
[0;32m                "generation": 3,[0m
[0;32m                "labels": {[0m
[0;32m                    "formation_id": "db2u-manage"[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:account": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:imagePullSecrets": {},[0m
[0;32m                                    "f:privileged": {}[0m
[0;32m                                },[0m
[0;32m                                "f:addOns": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:graph": {},[0m
[0;32m                                    "f:rest": {}[0m
[0;32m                                },[0m
[0;32m                                "f:environment": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:database": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:dbConfig": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:APPLHEAPSZ": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:name": {},[0m
[0;32m                                        "f:settings": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:dftTableOrg": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:ssl": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:certLabel": {}[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    "f:dbType": {},[0m
[0;32m                                    "f:instance": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:registry": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:DB2AUTH": {},[0m
[0;32m                                            "f:DB2_4K_DEVICE_SUPPORT": {},[0m
[0;32m                                            "f:DB2_FMP_RUN_AS_CONNECTED_USER": {},[0m
[0;32m                                            "f:DB2_WORKLOAD": {}[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    "f:mln": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:total": {}[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:license": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:accept": {}[0m
[0;32m                                },[0m
[0;32m                                "f:podConfig": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:db2u": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:resource": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:db2u": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:limits": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:memory": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:requests": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:memory": {}[0m
[0;32m                                                }[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:size": {},[0m
[0;32m                                "f:storage": {},[0m
[0;32m                                "f:version": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "OpenAPI-Generator",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:35:04Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    "f:db2u/certs-api-cert": {},[0m
[0;32m                                    "f:db2u/certs-api-key": {},[0m
[0;32m                                    "f:db2u/certs-wv-rest": {},[0m
[0;32m                                    "f:db2u/license": {},[0m
[0;32m                                    "f:db2u/sshkeys-db2instusr": {},[0m
[0;32m                                    "f:db2u/sshkeys-db2uadm": {},[0m
[0;32m                                    "f:db2u/sshkeys-db2uhausr": {}[0m
[0;32m                                },[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:formation_id": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                "f:addOns": {[0m
[0;32m                                    "f:qrep": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:infraHost": {},[0m
[0;32m                                        "f:infraIP": {},[0m
[0;32m                                        "f:license": {}[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:environment": {[0m
[0;32m                                    "f:database": {[0m
[0;32m                                        "f:ssl": {[0m
[0;32m                                            "f:secretName": {}[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    "f:instance": {[0m
[0;32m                                        "f:password": {}[0m
[0;32m                                    },[0m
[0;32m                                    "f:ldap": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:blueAdminPassword": {},[0m
[0;32m                                        "f:enabled": {},[0m
[0;32m                                        "f:password": {}[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:podConfig": {[0m
[0;32m                                    "f:db2u": {[0m
[0;32m                                        "f:resource": {[0m
[0;32m                                            "f:db2u": {[0m
[0;32m                                                "f:limits": {[0m
[0;32m                                                    "f:cpu": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:requests": {[0m
[0;32m                                                    "f:cpu": {}[0m
[0;32m                                                }[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    }[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:35:19Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:status": {[0m
[0;32m                                ".": {},[0m
[0;32m                                "f:conditions": {},[0m
[0;32m                                "f:maintenanceState": {},[0m
[0;32m                                "f:state": {},[0m
[0;32m                                "f:version": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-14T07:52:56Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "db2u-manage",[0m
[0;32m                "namespace": "db2u",[0m
[0;32m                "resourceVersion": "10128342",[0m
[0;32m                "uid": "3f2ca4c4-f00a-45fe-9325-889d845d3438"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "account": {[0m
[0;32m                    "imagePullSecrets": [[0m
[0;32m                        "ibm-registry"[0m
[0;32m                    ],[0m
[0;32m                    "privileged": true[0m
[0;32m                },[0m
[0;32m                "addOns": {[0m
[0;32m                    "graph": {},[0m
[0;32m                    "qrep": {[0m
[0;32m                        "infraHost": "xxx.ibm.com",[0m
[0;32m                        "infraIP": "x.x.x.x",[0m
[0;32m                        "license": {}[0m
[0;32m                    },[0m
[0;32m                    "rest": {}[0m
[0;32m                },[0m
[0;32m                "environment": {[0m
[0;32m                    "database": {[0m
[0;32m                        "dbConfig": {[0m
[0;32m                            "APPLHEAPSZ": "8192 AUTOMATIC"[0m
[0;32m                        },[0m
[0;32m                        "name": "BLUDB",[0m
[0;32m                        "settings": {[0m
[0;32m                            "dftTableOrg": "ROW"[0m
[0;32m                        },[0m
[0;32m                        "ssl": {[0m
[0;32m                            "certLabel": "CN=db2u",[0m
[0;32m                            "secretName": "[secure]"[0m
[0;32m                        }[0m
[0;32m                    },[0m
[0;32m                    "dbType": "db2wh",[0m
[0;32m                    "instance": {[0m
[0;32m                        "password": "[secure]",[0m
[0;32m                        "registry": {[0m
[0;32m                            "DB2AUTH": "OSAUTHDB,ALLOW_LOCAL_FALLBACK,PLUGIN_AUTO_RELOAD",[0m
[0;32m                            "DB2_4K_DEVICE_SUPPORT": "ON",[0m
[0;32m                            "DB2_FMP_RUN_AS_CONNECTED_USER": "NO",[0m
[0;32m                            "DB2_WORKLOAD": "ANALYTICS"[0m
[0;32m                        }[0m
[0;32m                    },[0m
[0;32m                    "ldap": {[0m
[0;32m                        "blueAdminPassword": "[secure]",[0m
[0;32m                        "enabled": true,[0m
[0;32m                        "password": "[secure]"[0m
[0;32m                    },[0m
[0;32m                    "mln": {[0m
[0;32m                        "total": 1[0m
[0;32m                    }[0m
[0;32m                },[0m
[0;32m                "license": {[0m
[0;32m                    "accept": true[0m
[0;32m                },[0m
[0;32m                "podConfig": {[0m
[0;32m                    "db2u": {[0m
[0;32m                        "resource": {[0m
[0;32m                            "db2u": {[0m
[0;32m                                "limits": {[0m
[0;32m                                    "cpu": "6",[0m
[0;32m                                    "memory": "16Gi"[0m
[0;32m                                },[0m
[0;32m                                "requests": {[0m
[0;32m                                    "cpu": "4",[0m
[0;32m                                    "memory": "8Gi"[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        }[0m
[0;32m                    }[0m
[0;32m                },[0m
[0;32m                "size": 1,[0m
[0;32m                "storage": [[0m
[0;32m                    {[0m
[0;32m                        "name": "meta",[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteMany"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "20Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "ocs-storagecluster-cephfs"[0m
[0;32m                        },[0m
[0;32m                        "type": "create"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "name": "data",[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteOnce"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "gp3-csi"[0m
[0;32m                        },[0m
[0;32m                        "type": "template"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "name": "backup",[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteMany"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "ocs-storagecluster-cephfs"[0m
[0;32m                        },[0m
[0;32m                        "type": "create"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "name": "activelogs",[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteOnce"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "gp3-csi"[0m
[0;32m                        },[0m
[0;32m                        "type": "template"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "name": "tempts",[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteOnce"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "gp3-csi"[0m
[0;32m                        },[0m
[0;32m                        "type": "template"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "version": "s11.5.9.0-cn1"[0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "conditions": [[0m
[0;32m                    {[0m
[0;32m                        "lastTransitionTime": "2024-04-14T07:52:56Z",[0m
[0;32m                        "status": "OK",[0m
[0;32m                        "type": "FormationStatus"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "maintenanceState": "None",[0m
[0;32m                "state": "Ready",[0m
[0;32m                "version": "s11.5.9.0-cn1"[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "attempts": 1,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "v1",[0m
[0;32m            "kind": "Service",[0m
[0;32m            "metadata": {[0m
[0;32m                "creationTimestamp": "2024-04-14T07:36:53Z",[0m
[0;32m                "labels": {[0m
[0;32m                    "app": "db2u-manage",[0m
[0;32m                    "component": "db2wh",[0m
[0;32m                    "formation_id": "db2u-manage",[0m
[0;32m                    "role": "db",[0m
[0;32m                    "type": "engine"[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:app": {},[0m
[0;32m                                    "f:component": {},[0m
[0;32m                                    "f:formation_id": {},[0m
[0;32m                                    "f:role": {},[0m
[0;32m                                    "f:type": {}[0m
[0;32m                                },[0m
[0;32m                                "f:ownerReferences": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "k:{\"uid\":\"22d04bf3-baa7-429b-953f-f5cbea8c1138\"}": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                "f:externalTrafficPolicy": {},[0m
[0;32m                                "f:internalTrafficPolicy": {},[0m
[0;32m                                "f:ports": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "k:{\"port\":50000,\"protocol\":\"TCP\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:name": {},[0m
[0;32m                                        "f:port": {},[0m
[0;32m                                        "f:protocol": {},[0m
[0;32m                                        "f:targetPort": {}[0m
[0;32m                                    },[0m
[0;32m                                    "k:{\"port\":50001,\"protocol\":\"TCP\"}": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:name": {},[0m
[0;32m                                        "f:port": {},[0m
[0;32m                                        "f:protocol": {},[0m
[0;32m                                        "f:targetPort": {}[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:publishNotReadyAddresses": {},[0m
[0;32m                                "f:selector": {},[0m
[0;32m                                "f:sessionAffinity": {},[0m
[0;32m                                "f:type": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:36:53Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "c-db2u-manage-db2u-engn-svc",[0m
[0;32m                "namespace": "db2u",[0m
[0;32m                "ownerReferences": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                        "kind": "Formation",[0m
[0;32m                        "name": "db2u-manage",[0m
[0;32m                        "uid": "22d04bf3-baa7-429b-953f-f5cbea8c1138"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "resourceVersion": "10110587",[0m
[0;32m                "uid": "ea6bbd8f-01e5-411e-a69f-3386d70b21df"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "clusterIP": "172.30.51.85",[0m
[0;32m                "clusterIPs": [[0m
[0;32m                    "172.30.51.85"[0m
[0;32m                ],[0m
[0;32m                "externalTrafficPolicy": "Cluster",[0m
[0;32m                "internalTrafficPolicy": "Cluster",[0m
[0;32m                "ipFamilies": [[0m
[0;32m                    "IPv4"[0m
[0;32m                ],[0m
[0;32m                "ipFamilyPolicy": "SingleStack",[0m
[0;32m                "ports": [[0m
[0;32m                    {[0m
[0;32m                        "name": "ssl-server",[0m
[0;32m                        "nodePort": 32257,[0m
[0;32m                        "port": 50001,[0m
[0;32m                        "protocol": "TCP",[0m
[0;32m                        "targetPort": 50001[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "name": "legacy-server",[0m
[0;32m                        "nodePort": 32665,[0m
[0;32m                        "port": 50000,[0m
[0;32m                        "protocol": "TCP",[0m
[0;32m                        "targetPort": 50000[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "publishNotReadyAddresses": true,[0m
[0;32m                "selector": {[0m
[0;32m                    "app": "db2u-manage",[0m
[0;32m                    "component": "db2wh",[0m
[0;32m                    "formation_id": "db2u-manage",[0m
[0;32m                    "role": "db",[0m
[0;32m                    "type": "engine"[0m
[0;32m                },[0m
[0;32m                "sessionAffinity": "None",[0m
[0;32m                "type": "NodePort"[0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "loadBalancer": {}[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "v1",[0m
[0;32m            "data": {[0m
[0;32m                "ca.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR1ekNDQXFPZ0F3SUJBZ0lRSkI1azgxVlp6OUZkMU9sbERkN1dRREFOQmdrcWhraUc5dzBCQVFzRkFEQnQKTVFzd0NRWURWUVFHRXdKSFFqRVBNQTBHQTFVRUJ4TUdURzl1Wkc5dU1ROHdEUVlEVlFRSkV3Wk1iMjVrYjI0eApLakFvQmdOVkJBc1RJVWxDVFNCTllYaHBiVzhnUVhCd2JHbGpZWFJwYjI0Z1UzVnBkR1VnUkVJeVZURVFNQTRHCkExVUVBeE1IWTJFdVpHSXlkVEFlRncweU5EQTBNVFF3TnpNME5UTmFGdzAwTkRBME1Ea3dOek0wTlROYU1HMHgKQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSEV3Wk1iMjVrYjI0eER6QU5CZ05WQkFrVEJreHZibVJ2YmpFcQpNQ2dHQTFVRUN4TWhTVUpOSUUxaGVHbHRieUJCY0hCc2FXTmhkR2x2YmlCVGRXbDBaU0JFUWpKVk1SQXdEZ1lEClZRUURFd2RqWVM1a1lqSjFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJnSDgKQnh4TlE1QUxad3VYQ2ZnVWQ4cm9iVHVjVkJJRENxSmI5eUlEbTNsa2UrU2xUVk5HaklzOSs2Sm9wbXUydkloYgpIWEhPUHpzR1JaY2VqenZDdGwySFI5MzQwbDFVbDRZV2hiRUdUVnhCWlJ1S29zM1FLZGJNL1NSUzhwUVlRdWFjCjgxMWZWd3pUaGNUTjdKVzA5WWxPSTlUQm1uU214eG1pMzZFbGc3TWlMZUdEQlF4MmVXTXFjWG9PQ1FOZFRoWFEKV0NzSEVoNmRXS1Bpbi9tLzRlV0pwdjhJZFB2cjdtTEdQU3dxQUNyQ0FYLzdVQlhPQVR4OVZyRFd2VmUzTUVpNApFNHpaVnhNOGdEbC9pNWJGbldhR0VLWWliRGVLdzBDL09jWWlUeG5FekVGRXN1TG1kR212cnZKSzZLRVA3Z1VyCnZpRTd3QzU1ZjM2empTUE1td0lEQVFBQm8xY3dWVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdFd1lEVlIwbEJBd3cKQ2dZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUIraFNsRzlLSitzQgoxMFBTUTRrK2FKY3R0aWd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQU1CTnBqQ3Y2TW5jdGtWL2tTY2Y2Qkl4Ci9kaGs0MUpyL0IycGU2NExlV1Baa3ExTEsrb3VaQkF2a3NFV0ptb0d5dzZsYmZ5eW5laWR6QnFXY1hTL0NKZHIKekRDaFRuWm9rR2MxTjdZVUFqdjRENVljOWVXT0YrZUorQnBsM1RrVjJiQVBJc21oWWpVZm5iWlVOaENhb3kwQgpicTV3bldzVDFXZjhSeVhLUzFkeURhL3owQnhPZS9MS05MNUlLQjJVOEYxdFV5Z09UdjdRRUZ4Vis0WEkzMDZmCkNmcC82UkdXOHdEOXNkay8wWVFwYkduOWxhbTRBZ2ZVbys2UkdCOWt1byt5cVdpKzJkMUdBQWR6RklSWUd0Z3oKbGNwVnlwU3NEanZzamVvL1BMR2dNOFhMN0xqb0VSRnVFQ3dtcmpFcWx1d3hOa0xPcTVQMnpEUFBEdTFCQnlNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",[0m
[0;32m                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVtekNDQTRPZ0F3SUJBZ0lRQ1oydmJSZjI5MTQ2blBvOFQvSnlZakFOQmdrcWhraUc5dzBCQVFzRkFEQnQKTVFzd0NRWURWUVFHRXdKSFFqRVBNQTBHQTFVRUJ4TUdURzl1Wkc5dU1ROHdEUVlEVlFRSkV3Wk1iMjVrYjI0eApLakFvQmdOVkJBc1RJVWxDVFNCTllYaHBiVzhnUVhCd2JHbGpZWFJwYjI0Z1UzVnBkR1VnUkVJeVZURVFNQTRHCkExVUVBeE1IWTJFdVpHSXlkVEFlRncweU5EQTBNVFF3TnpNMU1EQmFGdzAwTkRBME1Ea3dOek0xTURCYU1Hb3gKQ3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSEV3Wk1iMjVrYjI0eER6QU5CZ05WQkFrVEJreHZibVJ2YmpFcQpNQ2dHQTFVRUN4TWhTVUpOSUUxaGVHbHRieUJCY0hCc2FXTmhkR2x2YmlCVGRXbDBaU0JFUWpKVk1RMHdDd1lEClZRUURFd1JrWWpKMU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdDdBazBEdTgKTU9zTXhhNHV6Z2x5cnMwaWMxM1ZXQ2Z5MzI4cTlVQnVGTDFYajBtQWN6bTFiTlpiV3kzN2JOYTVjRXoxYzBCZgozMjkvUVE4bUJUUGdxci9nU0JVbE5UQ01RQzMwbEkwOHJYeEhCaTN4SnFyUFUwVEdMTUJocHNlUk9aMWNVOVVzCjZrbUVQRjRpRXBhYkxOSzlad09pelBBNjdPWlVEdzA1R1F6bHQ5S2lqVmxteGhPVDBRd2pNeU9VTEIyR1prSmsKSHZHVGFCM1RXS2thTWVmMFhWajdKWFFaa1FjZFhXWXNZcnVYT2llV0t6bW1aVVpwMXdhY3lncEJvQjUwRVdkMApmYmtLV0Zia3hWdjVXTUV2SGFvcElyanA4TkVtRCtoQzZzdVFrbHNUYjF4RjZxeENoWkxmMEpNQTA1a2Rqc2VzCnhxRDIraVI5VlpiMU5RSURBUUFCbzRJQk9EQ0NBVFF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQk1HQTFVZEpRUU0KTUFvR0NDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUIraFNsRzlLSitzQgoxMFBTUTRrK2FKY3R0aWd3Z2QwR0ExVWRFUVNCMVRDQjBvSS9aR0l5ZFMxdFlXNWhaMlV0WkdJeWRTNWhjSEJ6CkxuUjZjbTl6WVMxMGMzRnZiR2wxYXk1ME5tbzBMbkF4TG05d1pXNXphR2xtZEdGd2NITXVZMjl0Z2tFcUxtUmkKTW5VdGJXRnVZV2RsTFdSaU1uVXVZWEJ3Y3k1MGVuSnZjMkV0ZEhOeGIyeHBkV3N1ZERacU5DNXdNUzV2Y0dWdQpjMmhwWm5SaGNIQnpMbU52YllJa1l5MWtZakoxTFcxaGJtRm5aUzFrWWpKMUxXVnVaMjR0YzNaakxtUmlNblV1CmMzWmpnaVlxTG1NdFpHSXlkUzF0WVc1aFoyVXRaR0l5ZFMxbGJtZHVMWE4yWXk1a1lqSjFMbk4yWXpBTkJna3EKaGtpRzl3MEJBUXNGQUFPQ0FRRUFDS3NXeDc4ZitBNkdZTUtNL0JBcXVmcUhwZkcxQzErTDlXVW54ZWp3VGt5bQpTNmxXaG5rR2pSSWR3YWxDVk5qZFY5S0IzUVVtZzVsYm80NUZhMmRPNnhJVmVIVm1tNHkxVTBrZ3hrZEJacHl4CnlaVXVHRWJDWTNMRlBpcmdMTlpMNVo3eW8yZ0djY3RZZTljKzFyYlk4ckJZNVR6NzFFcDFXQ3VHYlFmek82bngKb0JadVZaa1QxeTk3WkVSdVBFS0pBbEJZendpSEJMaWQzUHBveHdBMlBHbFg4N2FVYnJQY2NBVjIyVXhaYkdweQpJQUNISGI5azl1MzBrZ2pwYVNBVXJTM2puRWN0Y1pTbElNMjlUeXk0QnNXT1FhNkdicHJySFpzYXBiUFlrczdkCmZwTDlvOERNb2hvNnZ6VjB3TTZUYzhrRTcrR3BxRlhiWlprOVVwNHJaZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",[0m
[0;32m                "tls.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdDdBazBEdThNT3NNeGE0dXpnbHlyczBpYzEzVldDZnkzMjhxOVVCdUZMMVhqMG1BCmN6bTFiTlpiV3kzN2JOYTVjRXoxYzBCZjMyOS9RUThtQlRQZ3FyL2dTQlVsTlRDTVFDMzBsSTA4clh4SEJpM3gKSnFyUFUwVEdMTUJocHNlUk9aMWNVOVVzNmttRVBGNGlFcGFiTE5LOVp3T2l6UEE2N09aVUR3MDVHUXpsdDlLaQpqVmxteGhPVDBRd2pNeU9VTEIyR1prSmtIdkdUYUIzVFdLa2FNZWYwWFZqN0pYUVprUWNkWFdZc1lydVhPaWVXCkt6bW1aVVpwMXdhY3lncEJvQjUwRVdkMGZia0tXRmJreFZ2NVdNRXZIYW9wSXJqcDhORW1EK2hDNnN1UWtsc1QKYjF4RjZxeENoWkxmMEpNQTA1a2Rqc2VzeHFEMitpUjlWWmIxTlFJREFRQUJBb0lCQVFDZzdwZ3lRRU91OENBdQppVjdFY1E2akMySmxoUTVId0NoUGpZd3JkeGw2M2pCNmYwRWtzcWk3QkVyaDViVmtNL1FmNmEwYUhvcGdyY1RsCjhTbTBZVEV6S0F5TjJzalFnd285cUlXaUtPUENjeUdlemwxN0xTZWJvcU9selo5QWlaUTQwQjkxNjAwQXJ3eEYKLzRzR2tpQzk4cHl5UmtNNkhqYmlHeUlHVmVWeWhaZjREU1d4aHRmUVhmdUNqcjB0OEF4aXkydmkyRnFCcHAwLwpGeG9aS3ZUemJBbWpWSng1b3QxNWlMdENPaDU2QzgzcUlENmFtd0txZDgrOWx3aDNtQVZVdDE4RlFZVkY1LzdqCjIvSEt2TUM4OXIwMFZUWTJEN2ttK01xS2RFeVo0UWNYSlY5cGI2WHFkSWNtMHNQYXJtN3M2ZWllM2w0dkpsbkwKRFlHK21nQjVBb0dCQU5Ed0lZTlRUVGtMV3JSUFVPb0R4T3FVb0tpTEtqOEs1bFJpRVhaTGZLZ0lmSWVjMG9HagpoVXkwSmd5TFJIcVN4eHN2UWpTVVFCeDI1VnB2aS9MUEtBQVJoTkk4KzJsUmM5eUNBM3crelhCQ1BpMjBLRmN0CkdyUEd3OU5aejZlMTFRNmI0SU1hZ1Z1dnd4KzN4MTBpZDAySlpxOHVmUE9jMFlUdm9PWndiRWdYQW9HQkFPRVEKQ2pzNUs5cmdJNW9hVS9TK1dYUVY2aTJKbSs3YWhoeEVKM0srMTJkRGNiS2NkR1JHWVBGUVlZZkM0dDdudWdaQgo0d2hqZUxWUzdRTTNuaW1kdDFXSmNXUCsvVnpZelFTZmlTQlNNOGVyVGVCOFRXdktmSWtMbDNOWjQ5SkxzLzJ2CnNXdEpUODEvdG5pUDYzbWh1dU80cUdvM29uUWU0bkdMWEJ3clRQQ1RBb0dBVllyN0xabGRkSTJCaFhFejM1dkwKYzMrR2gzcnl3UHpsY0liMlAwaUlzUU5JZVAxcjhrZlF1NmJHTFR5WHZOZDdUVlg3OVNyOVZLb1pIUDJ1ZnFyeAo1WlZHbkF6N29oTUhMTERPWElBWi9Hd2lxUE9wMElkVzkyUFpxUjZNTmszci9SODB2SGlObmN4SVJ5UW5LNnFBCnplNERiSlhMOHJHeDFvdUZoTk5pZ2VFQ2dZQS9hK20yTHJJeEI2Q0F1SktZRVZ2YjNxRVRIQWdaRXZOZjI4VFMKRFAxZVdCOGVHZ0Npa1VLWVBmSjk4MmxETDBHNHFiQjBtTE5YUlhzTXdRdU01cWpYTGRnS09iemtBU1FrL1dBQwovNmNmeVNJMDlGSk00YzZlUCtuNTA0YmpwL21jcjNucnBja2JPN1lMMjJLYjcvdGVXSmI4OTVpTDZIZ2ZUd294CjFmSGtpUUtCZ1FDUDJ5c0FVcGtmL3ZUazZuSEpIbXpIRnRudkpEamVrV3MxZ2gwcjJPL1M5SmlKd2tqVlBZT3oKdFVWZXFVc3REWmM2My9rVHVnYjB4QlZXbEJ5UWZ6ejBxTlhrV1JpZEFLZzVDZ3JPYTl6UWpZUlIwZ28vbFZFNgpSQ213b0JQdXlLTWlJb0xHN3pGbEhnYzQwUUJweHhCZWFhU2pFMFNVS3ZaRjFSa3ZzaHo5UkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="[0m
[0;32m            },[0m
[0;32m            "kind": "Secret",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "cert-manager.io/alt-names": "db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com,*.db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com,c-db2u-manage-db2u-engn-svc.db2u.svc,*.c-db2u-manage-db2u-engn-svc.db2u.svc",[0m
[0;32m                    "cert-manager.io/certificate-name": "db2u-certificate",[0m
[0;32m                    "cert-manager.io/common-name": "db2u",[0m
[0;32m                    "cert-manager.io/ip-sans": "",[0m
[0;32m                    "cert-manager.io/issuer-group": "",[0m
[0;32m                    "cert-manager.io/issuer-kind": "Issuer",[0m
[0;32m                    "cert-manager.io/issuer-name": "db2u-issuer",[0m
[0;32m                    "cert-manager.io/subject-countries": "GB",[0m
[0;32m                    "cert-manager.io/subject-localities": "London",[0m
[0;32m                    "cert-manager.io/subject-organizationalunits": "IBM Maximo Application Suite DB2U",[0m
[0;32m                    "cert-manager.io/subject-streetaddresses": "London",[0m
[0;32m                    "cert-manager.io/uri-sans": ""[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-14T07:35:00Z",[0m
[0;32m                "labels": {[0m
[0;32m                    "controller.cert-manager.io/fao": "true"[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:data": {[0m
[0;32m                                "f:ca.crt": {},[0m
[0;32m                                "f:tls.crt": {},[0m
[0;32m                                "f:tls.key": {}[0m
[0;32m                            },[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    "f:cert-manager.io/alt-names": {},[0m
[0;32m                                    "f:cert-manager.io/certificate-name": {},[0m
[0;32m                                    "f:cert-manager.io/common-name": {},[0m
[0;32m                                    "f:cert-manager.io/ip-sans": {},[0m
[0;32m                                    "f:cert-manager.io/issuer-group": {},[0m
[0;32m                                    "f:cert-manager.io/issuer-kind": {},[0m
[0;32m                                    "f:cert-manager.io/issuer-name": {},[0m
[0;32m                                    "f:cert-manager.io/subject-countries": {},[0m
[0;32m                                    "f:cert-manager.io/subject-localities": {},[0m
[0;32m                                    "f:cert-manager.io/subject-organizationalunits": {},[0m
[0;32m                                    "f:cert-manager.io/subject-streetaddresses": {},[0m
[0;32m                                    "f:cert-manager.io/uri-sans": {}[0m
[0;32m                                },[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    "f:controller.cert-manager.io/fao": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:type": {}[0m
[0;32m                        },[0m
[0;32m                        "manager": "cert-manager-certificates-issuing",[0m
[0;32m                        "operation": "Apply",[0m
[0;32m                        "time": "2024-04-14T07:35:00Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "db2u-certificate",[0m
[0;32m                "namespace": "db2u",[0m
[0;32m                "resourceVersion": "10108476",[0m
[0;32m                "uid": "20727b6d-97b2-4359-80dc-f0ddaa5c1d6e"[0m
[0;32m            },[0m
[0;32m            "type": "kubernetes.io/tls"[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "ansible_facts": {[0m
[0;32m        "db2_ca_pem": "-----BEGIN CERTIFICATE-----\nMIIDuzCCAqOgAwIBAgIQJB5k81VZz9Fd1OllDd7WQDANBgkqhkiG9w0BAQsFADBt\nMQswCQYDVQQGEwJHQjEPMA0GA1UEBxMGTG9uZG9uMQ8wDQYDVQQJEwZMb25kb24x\nKjAoBgNVBAsTIUlCTSBNYXhpbW8gQXBwbGljYXRpb24gU3VpdGUgREIyVTEQMA4G\nA1UEAxMHY2EuZGIydTAeFw0yNDA0MTQwNzM0NTNaFw00NDA0MDkwNzM0NTNaMG0x\nCzAJBgNVBAYTAkdCMQ8wDQYDVQQHEwZMb25kb24xDzANBgNVBAkTBkxvbmRvbjEq\nMCgGA1UECxMhSUJNIE1heGltbyBBcHBsaWNhdGlvbiBTdWl0ZSBEQjJVMRAwDgYD\nVQQDEwdjYS5kYjJ1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gH8\nBxxNQ5ALZwuXCfgUd8robTucVBIDCqJb9yIDm3lke+SlTVNGjIs9+6Jopmu2vIhb\nHXHOPzsGRZcejzvCtl2HR9340l1Ul4YWhbEGTVxBZRuKos3QKdbM/SRS8pQYQuac\n811fVwzThcTN7JW09YlOI9TBmnSmxxmi36Elg7MiLeGDBQx2eWMqcXoOCQNdThXQ\nWCsHEh6dWKPin/m/4eWJpv8IdPvr7mLGPSwqACrCAX/7UBXOATx9VrDWvVe3MEi4\nE4zZVxM8gDl/i5bFnWaGEKYibDeKw0C/OcYiTxnEzEFEsuLmdGmvrvJK6KEP7gUr\nviE7wC55f36zjSPMmwIDAQABo1cwVTAOBgNVHQ8BAf8EBAMCAqQwEwYDVR0lBAww\nCgYIKwYBBQUHAwEwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUB+hSlG9KJ+sB\n10PSQ4k+aJcttigwDQYJKoZIhvcNAQELBQADggEBAMBNpjCv6MnctkV/kScf6BIx\n/dhk41Jr/B2pe64LeWPZkq1LK+ouZBAvksEWJmoGyw6lbfyyneidzBqWcXS/CJdr\nzDChTnZokGc1N7YUAjv4D5Yc9eWOF+eJ+Bpl3TkV2bAPIsmhYjUfnbZUNhCaoy0B\nbq5wnWsT1Wf8RyXKS1dyDa/z0BxOe/LKNL5IKB2U8F1tUygOTv7QEFxV+4XI306f\nCfp/6RGW8wD9sdk/0YQpbGn9lam4AgfUo+6RGB9kuo+yqWi+2d1GAAdzFIRYGtgz\nlcpVypSsDjvsjeo/PLGgM8XL7LjoERFuECwmrjEqluwxNkLOq5P2zDPPDu1BByM=\n-----END CERTIFICATE-----\n",[0m
[0;32m        "db2_tls_crt": "-----BEGIN CERTIFICATE-----\nMIIEmzCCA4OgAwIBAgIQCZ2vbRf29146nPo8T/JyYjANBgkqhkiG9w0BAQsFADBt\nMQswCQYDVQQGEwJHQjEPMA0GA1UEBxMGTG9uZG9uMQ8wDQYDVQQJEwZMb25kb24x\nKjAoBgNVBAsTIUlCTSBNYXhpbW8gQXBwbGljYXRpb24gU3VpdGUgREIyVTEQMA4G\nA1UEAxMHY2EuZGIydTAeFw0yNDA0MTQwNzM1MDBaFw00NDA0MDkwNzM1MDBaMGox\nCzAJBgNVBAYTAkdCMQ8wDQYDVQQHEwZMb25kb24xDzANBgNVBAkTBkxvbmRvbjEq\nMCgGA1UECxMhSUJNIE1heGltbyBBcHBsaWNhdGlvbiBTdWl0ZSBEQjJVMQ0wCwYD\nVQQDEwRkYjJ1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7Ak0Du8\nMOsMxa4uzglyrs0ic13VWCfy328q9UBuFL1Xj0mAczm1bNZbWy37bNa5cEz1c0Bf\n329/QQ8mBTPgqr/gSBUlNTCMQC30lI08rXxHBi3xJqrPU0TGLMBhpseROZ1cU9Us\n6kmEPF4iEpabLNK9ZwOizPA67OZUDw05GQzlt9KijVlmxhOT0QwjMyOULB2GZkJk\nHvGTaB3TWKkaMef0XVj7JXQZkQcdXWYsYruXOieWKzmmZUZp1wacygpBoB50EWd0\nfbkKWFbkxVv5WMEvHaopIrjp8NEmD+hC6suQklsTb1xF6qxChZLf0JMA05kdjses\nxqD2+iR9VZb1NQIDAQABo4IBODCCATQwDgYDVR0PAQH/BAQDAgKkMBMGA1UdJQQM\nMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUB+hSlG9KJ+sB\n10PSQ4k+aJcttigwgd0GA1UdEQSB1TCB0oI/ZGIydS1tYW5hZ2UtZGIydS5hcHBz\nLnR6cm9zYS10c3FvbGl1ay50Nmo0LnAxLm9wZW5zaGlmdGFwcHMuY29tgkEqLmRi\nMnUtbWFuYWdlLWRiMnUuYXBwcy50enJvc2EtdHNxb2xpdWsudDZqNC5wMS5vcGVu\nc2hpZnRhcHBzLmNvbYIkYy1kYjJ1LW1hbmFnZS1kYjJ1LWVuZ24tc3ZjLmRiMnUu\nc3ZjgiYqLmMtZGIydS1tYW5hZ2UtZGIydS1lbmduLXN2Yy5kYjJ1LnN2YzANBgkq\nhkiG9w0BAQsFAAOCAQEACKsWx78f+A6GYMKM/BAqufqHpfG1C1+L9WUnxejwTkym\nS6lWhnkGjRIdwalCVNjdV9KB3QUmg5lbo45Fa2dO6xIVeHVmm4y1U0kgxkdBZpyx\nyZUuGEbCY3LFPirgLNZL5Z7yo2gGcctYe9c+1rbY8rBY5Tz71Ep1WCuGbQfzO6nx\noBZuVZkT1y97ZERuPEKJAlBYzwiHBLid3PpoxwA2PGlX87aUbrPccAV22UxZbGpy\nIACHHb9k9u30kgjpaSAUrS3jnEctcZSlIM29Tyy4BsWOQa6GbprrHZsapbPYks7d\nfpL9o8DMoho6vzV0wM6Tc8kE7+GpqFXbZZk9Up4rZg==\n-----END CERTIFICATE-----\n",[0m
[0;32m        "db2_tls_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAt7Ak0Du8MOsMxa4uzglyrs0ic13VWCfy328q9UBuFL1Xj0mA\nczm1bNZbWy37bNa5cEz1c0Bf329/QQ8mBTPgqr/gSBUlNTCMQC30lI08rXxHBi3x\nJqrPU0TGLMBhpseROZ1cU9Us6kmEPF4iEpabLNK9ZwOizPA67OZUDw05GQzlt9Ki\njVlmxhOT0QwjMyOULB2GZkJkHvGTaB3TWKkaMef0XVj7JXQZkQcdXWYsYruXOieW\nKzmmZUZp1wacygpBoB50EWd0fbkKWFbkxVv5WMEvHaopIrjp8NEmD+hC6suQklsT\nb1xF6qxChZLf0JMA05kdjsesxqD2+iR9VZb1NQIDAQABAoIBAQCg7pgyQEOu8CAu\niV7EcQ6jC2JlhQ5HwChPjYwrdxl63jB6f0Eksqi7BErh5bVkM/Qf6a0aHopgrcTl\n8Sm0YTEzKAyN2sjQgwo9qIWiKOPCcyGezl17LSeboqOlzZ9AiZQ40B91600ArwxF\n/4sGkiC98pyyRkM6HjbiGyIGVeVyhZf4DSWxhtfQXfuCjr0t8Axiy2vi2FqBpp0/\nFxoZKvTzbAmjVJx5ot15iLtCOh56C83qID6amwKqd8+9lwh3mAVUt18FQYVF5/7j\n2/HKvMC89r00VTY2D7km+MqKdEyZ4QcXJV9pb6XqdIcm0sParm7s6eie3l4vJlnL\nDYG+mgB5AoGBANDwIYNTTTkLWrRPUOoDxOqUoKiLKj8K5lRiEXZLfKgIfIec0oGj\nhUy0JgyLRHqSxxsvQjSUQBx25Vpvi/LPKAARhNI8+2lRc9yCA3w+zXBCPi20KFct\nGrPGw9NZz6e11Q6b4IMagVuvwx+3x10id02JZq8ufPOc0YTvoOZwbEgXAoGBAOEQ\nCjs5K9rgI5oaU/S+WXQV6i2Jm+7ahhxEJ3K+12dDcbKcdGRGYPFQYYfC4t7nugZB\n4whjeLVS7QM3nimdt1WJcWP+/VzYzQSfiSBSM8erTeB8TWvKfIkLl3NZ49JLs/2v\nsWtJT81/tniP63mhuuO4qGo3onQe4nGLXBwrTPCTAoGAVYr7LZlddI2BhXEz35vL\nc3+Gh3rywPzlcIb2P0iIsQNIeP1r8kfQu6bGLTyXvNd7TVX79Sr9VKoZHP2ufqrx\n5ZVGnAz7ohMHLLDOXIAZ/GwiqPOp0IdW92PZqR6MNk3r/R80vHiNncxIRyQnK6qA\nze4DbJXL8rGx1ouFhNNigeECgYA/a+m2LrIxB6CAuJKYEVvb3qETHAgZEvNf28TS\nDP1eWB8eGgCikUKYPfJ982lDL0G4qbB0mLNXRXsMwQuM5qjXLdgKObzkASQk/WAC\n/6cfySI09FJM4c6eP+n504bjp/mcr3nrpckbO7YL22Kb7/teWJb895iL6HgfTwox\n1fHkiQKBgQCP2ysAUpkf/vTk6nHJHmzHFtnvJDjekWs1gh0r2O/S9JiJwkjVPYOz\ntUVeqUstDZc63/kTugb0xBVWlByQfzz0qNXkWRidAKg5CgrOa9zQjYRR0go/lVE6\nRCmwoBPuyKMiIoLG7zFlHgc40QBpxxBeaaSjE0SUKvZF1Rkvshz9RA==\n-----END RSA PRIVATE KEY-----\n"[0m
[0;32m    },[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "msg": "All items completed",[0m
[0;32m    "results": [[0m
[0;32m        {[0m
[0;32m            "ansible_facts": {[0m
[0;32m                "db2_tls_serviceport": "50001"[0m
[0;32m            },[0m
[0;32m            "ansible_loop_var": "item",[0m
[0;32m            "changed": false,[0m
[0;32m            "failed": false,[0m
[0;32m            "item": {[0m
[0;32m                "name": "ssl-server",[0m
[0;32m                "nodePort": 32257,[0m
[0;32m                "port": 50001,[0m
[0;32m                "protocol": "TCP",[0m
[0;32m                "targetPort": 50001[0m
[0;32m            }[0m
[0;32m        },[0m
[0;32m        {[0m
[0;32m            "ansible_loop_var": "item",[0m
[0;32m            "changed": false,[0m
[0;32m            "false_condition": "item.name == 'ssl-server'",[0m
[0;32m            "item": {[0m
[0;32m                "name": "legacy-server",[0m
[0;32m                "nodePort": 32665,[0m
[0;32m                "port": 50000,[0m
[0;32m                "protocol": "TCP",[0m
[0;32m                "targetPort": 50000[0m
[0;32m            },[0m
[0;32m            "skip_reason": "Conditional result was False",[0m
[0;32m            "skipped": true[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "apply",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "route.openshift.io/v1",[0m
[0;33m        "kind": "Route",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"route.openshift.io/v1\",\"kind\":\"Route\",\"metadata\":{\"labels\":{\"formation_id\":\"db2u-manage\"},\"name\":\"db2u-db2u-manage-tls-route\",\"namespace\":\"db2u\"},\"spec\":{\"host\":\"db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com\",\"port\":{\"targetPort\":\"ssl-server\"},\"tls\":{\"nsecureEdgeTerminationPolicy\":\"None\",\"termination\":\"passthrough\"},\"to\":{\"kind\":\"Service\",\"name\":\"c-db2u-manage-db2u-engn-svc\",\"weight\":100},\"wildcardPolicy\":\"None\"}}"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:55:13Z",[0m
[0;33m            "labels": {[0m
[0;33m                "formation_id": "db2u-manage"[0m
[0;33m            },[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "route.openshift.io/v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:kubectl.kubernetes.io/last-applied-configuration": {}[0m
[0;33m                            },[0m
[0;33m                            "f:labels": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:formation_id": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            "f:host": {},[0m
[0;33m                            "f:port": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:targetPort": {}[0m
[0;33m                            },[0m
[0;33m                            "f:tls": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:termination": {}[0m
[0;33m                            },[0m
[0;33m                            "f:to": {[0m
[0;33m                                "f:kind": {},[0m
[0;33m                                "f:name": {},[0m
[0;33m                                "f:weight": {}[0m
[0;33m                            },[0m
[0;33m                            "f:wildcardPolicy": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "OpenAPI-Generator",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:55:13Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "db2u-db2u-manage-tls-route",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "resourceVersion": "10130775",[0m
[0;33m            "uid": "8905d84b-b73d-4cf9-bce4-4f227789511e"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "host": "db2u-manage-db2u.apps.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com",[0m
[0;33m            "port": {[0m
[0;33m                "targetPort": "ssl-server"[0m
[0;33m            },[0m
[0;33m            "tls": {[0m
[0;33m                "termination": "passthrough"[0m
[0;33m            },[0m
[0;33m            "to": {[0m
[0;33m                "kind": "Service",[0m
[0;33m                "name": "c-db2u-manage-db2u-engn-svc",[0m
[0;33m                "weight": 100[0m
[0;33m            },[0m
[0;33m            "wildcardPolicy": "None"[0m
[0;33m        },[0m
[0;33m        "status": {}[0m
[0;33m    }[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [][0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "method": "delete",[0m
[0;33m    "result": {[0m
[0;33m        "apiVersion": "v1",[0m
[0;33m        "kind": "Pod",[0m
[0;33m        "metadata": {[0m
[0;33m            "annotations": {[0m
[0;33m                "k8s.ovn.org/pod-networks": "{\"default\":{\"ip_addresses\":[\"10.131.4.28/23\"],\"mac_address\":\"0a:58:0a:83:04:1c\",\"gateway_ips\":[\"10.131.4.1\"],\"routes\":[{\"dest\":\"10.128.0.0/14\",\"nextHop\":\"10.131.4.1\"},{\"dest\":\"172.30.0.0/16\",\"nextHop\":\"10.131.4.1\"},{\"dest\":\"100.64.0.0/16\",\"nextHop\":\"10.131.4.1\"}],\"ip_address\":\"10.131.4.28/23\",\"gateway_ip\":\"10.131.4.1\"}}",[0m
[0;33m                "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"ovn-kubernetes\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.131.4.28\"\n    ],\n    \"mac\": \"0a:58:0a:83:04:1c\",\n    \"default\": true,\n    \"dns\": {}\n}]",[0m
[0;33m                "openshift.io/scc": "db2u-c-db2u-manage-scc",[0m
[0;33m                "productChargedContainers": "All",[0m
[0;33m                "productID": "cb1bb71fd6fb4b6695f64ba436421a33",[0m
[0;33m                "productMetric": "FREE",[0m
[0;33m                "productName": "IBM Db2 Warehouse Developer Edition Non-Production (Community)"[0m
[0;33m            },[0m
[0;33m            "creationTimestamp": "2024-04-14T07:39:06Z",[0m
[0;33m            "deletionGracePeriodSeconds": 120,[0m
[0;33m            "deletionTimestamp": "2024-04-14T07:57:20Z",[0m
[0;33m            "generateName": "c-db2u-manage-db2u-",[0m
[0;33m            "labels": {[0m
[0;33m                "app": "db2u-manage",[0m
[0;33m                "component": "db2wh",[0m
[0;33m                "controller-revision-hash": "c-db2u-manage-db2u-9d5898ffc",[0m
[0;33m                "formation_id": "db2u-manage",[0m
[0;33m                "name": "dashmpp-head-0",[0m
[0;33m                "role": "db",[0m
[0;33m                "statefulset.kubernetes.io/pod-name": "c-db2u-manage-db2u-0",[0m
[0;33m                "type": "engine"[0m
[0;33m            },[0m
[0;33m            "managedFields": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:productChargedContainers": {},[0m
[0;33m                                "f:productID": {},[0m
[0;33m                                "f:productMetric": {},[0m
[0;33m                                "f:productName": {}[0m
[0;33m                            },[0m
[0;33m                            "f:generateName": {},[0m
[0;33m                            "f:labels": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:app": {},[0m
[0;33m                                "f:component": {},[0m
[0;33m                                "f:controller-revision-hash": {},[0m
[0;33m                                "f:formation_id": {},[0m
[0;33m                                "f:role": {},[0m
[0;33m                                "f:statefulset.kubernetes.io/pod-name": {},[0m
[0;33m                                "f:type": {}[0m
[0;33m                            },[0m
[0;33m                            "f:ownerReferences": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "k:{\"uid\":\"e914aad1-f607-41b8-84b3-4e6807e32cd1\"}": {}[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        "f:spec": {[0m
[0;33m                            "f:affinity": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:podAntiAffinity": {}[0m
[0;33m                            },[0m
[0;33m                            "f:containers": {[0m
[0;33m                                "k:{\"name\":\"db2u\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:env": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"name\":\"CPU_LIMIT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:resourceFieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_CERT_FILE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_CONFIGMAP_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_DATABASE_BACKEND\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_ENDPOINT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_KEY_FILE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2_NGINX_SVC_HOST_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"ETCDCTL_API\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"ETCDCTL_ENDPOINTS\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"ETCD_ENDPOINTS\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"FORMATION_ID\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"MEMORY_LIMIT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:resourceFieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"MEMORY_REQUEST\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:resourceFieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"ODF_SUPPORT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD_NAMESPACE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"SERVICE_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"V2\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"WV_HACLASS\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"WV_RECOVERY\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"etcdoperator\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:image": {},[0m
[0;33m                                    "f:imagePullPolicy": {},[0m
[0;33m                                    "f:livenessProbe": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:failureThreshold": {},[0m
[0;33m                                        "f:httpGet": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:path": {},[0m
[0;33m                                            "f:port": {},[0m
[0;33m                                            "f:scheme": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:periodSeconds": {},[0m
[0;33m                                        "f:successThreshold": {},[0m
[0;33m                                        "f:timeoutSeconds": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:ports": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"containerPort\":50000,\"protocol\":\"TCP\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:containerPort": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:protocol": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"containerPort\":50001,\"protocol\":\"TCP\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:containerPort": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:protocol": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"containerPort\":50052,\"protocol\":\"TCP\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:containerPort": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:protocol": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:readinessProbe": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:failureThreshold": {},[0m
[0;33m                                        "f:httpGet": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:path": {},[0m
[0;33m                                            "f:port": {},[0m
[0;33m                                            "f:scheme": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:periodSeconds": {},[0m
[0;33m                                        "f:successThreshold": {},[0m
[0;33m                                        "f:timeoutSeconds": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:resources": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:limits": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:cpu": {},[0m
[0;33m                                            "f:ephemeral-storage": {},[0m
[0;33m                                            "f:memory": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:requests": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:cpu": {},[0m
[0;33m                                            "f:ephemeral-storage": {},[0m
[0;33m                                            "f:memory": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:securityContext": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:allowPrivilegeEscalation": {},[0m
[0;33m                                        "f:capabilities": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:add": {},[0m
[0;33m                                            "f:drop": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:privileged": {},[0m
[0;33m                                        "f:readOnlyRootFilesystem": {},[0m
[0;33m                                        "f:runAsUser": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:startupProbe": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:failureThreshold": {},[0m
[0;33m                                        "f:httpGet": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:path": {},[0m
[0;33m                                            "f:port": {},[0m
[0;33m                                            "f:scheme": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:initialDelaySeconds": {},[0m
[0;33m                                        "f:periodSeconds": {},[0m
[0;33m                                        "f:successThreshold": {},[0m
[0;33m                                        "f:timeoutSeconds": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:terminationMessagePath": {},[0m
[0;33m                                    "f:terminationMessagePolicy": {},[0m
[0;33m                                    "f:volumeMounts": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"mountPath\":\"/db2u/license/\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/dev/shm\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/backup\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/bludata0\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2/db-cfg\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2/dbm-cfg\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2/registry\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2u\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/local\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/logs/active\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/tempts/c-db2u-manage-db2u\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/run\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/certs/db2u-api\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/certs/wv-rest\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/db2instancepwd\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/db2ssl\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/hivepwd\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/kp\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/sshkeys/db2instusr\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/sshkeys/db2uadm\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/sshkeys/db2uhausr\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/secrets/user-mgmt-keypwd\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:dnsConfig": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:options": {},[0m
[0;33m                                "f:searches": {}[0m
[0;33m                            },[0m
[0;33m                            "f:dnsPolicy": {},[0m
[0;33m                            "f:enableServiceLinks": {},[0m
[0;33m                            "f:hostname": {},[0m
[0;33m                            "f:initContainers": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "k:{\"name\":\"init-kernel\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:command": {},[0m
[0;33m                                    "f:env": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_CERT_FILE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_CONFIGMAP_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_DATABASE_BACKEND\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_ENDPOINT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_KEY_FILE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2_NGINX_SVC_HOST_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"MEMORY_LIMIT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:resourceFieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD_NAMESPACE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"SERVICENAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"SERVICE_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:image": {},[0m
[0;33m                                    "f:imagePullPolicy": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:resources": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:limits": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:cpu": {},[0m
[0;33m                                            "f:ephemeral-storage": {},[0m
[0;33m                                            "f:memory": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:requests": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:cpu": {},[0m
[0;33m                                            "f:ephemeral-storage": {},[0m
[0;33m                                            "f:memory": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:securityContext": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:allowPrivilegeEscalation": {},[0m
[0;33m                                        "f:capabilities": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:drop": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:privileged": {},[0m
[0;33m                                        "f:readOnlyRootFilesystem": {},[0m
[0;33m                                        "f:runAsNonRoot": {},[0m
[0;33m                                        "f:runAsUser": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:terminationMessagePath": {},[0m
[0;33m                                    "f:terminationMessagePolicy": {},[0m
[0;33m                                    "f:volumeMounts": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"mountPath\":\"/host/proc\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"init-labels\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:command": {},[0m
[0;33m                                    "f:env": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"name\":\"DB2TYPE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_CERT_FILE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_CONFIGMAP_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_DATABASE_BACKEND\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_ENDPOINT\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2U_API_KEY_FILE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"DB2_NGINX_SVC_HOST_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"FORMATION_ID\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"MLN_TOTAL\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"POD_NAMESPACE\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:valueFrom": {[0m
[0;33m                                                ".": {},[0m
[0;33m                                                "f:fieldRef": {}[0m
[0;33m                                            }[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"REPLICAS\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"SERVICENAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"name\":\"SERVICE_NAME\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:value": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:image": {},[0m
[0;33m                                    "f:imagePullPolicy": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:resources": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:limits": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:cpu": {},[0m
[0;33m                                            "f:ephemeral-storage": {},[0m
[0;33m                                            "f:memory": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:requests": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:cpu": {},[0m
[0;33m                                            "f:ephemeral-storage": {},[0m
[0;33m                                            "f:memory": {}[0m
[0;33m                                        }[0m
[0;33m                                    },[0m
[0;33m                                    "f:securityContext": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:allowPrivilegeEscalation": {},[0m
[0;33m                                        "f:capabilities": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:add": {},[0m
[0;33m                                            "f:drop": {}[0m
[0;33m                                        },[0m
[0;33m                                        "f:privileged": {},[0m
[0;33m                                        "f:readOnlyRootFilesystem": {},[0m
[0;33m                                        "f:runAsUser": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:terminationMessagePath": {},[0m
[0;33m                                    "f:terminationMessagePolicy": {},[0m
[0;33m                                    "f:volumeMounts": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {}[0m
[0;33m                                        },[0m
[0;33m                                        "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2u\"}": {[0m
[0;33m                                            ".": {},[0m
[0;33m                                            "f:mountPath": {},[0m
[0;33m                                            "f:name": {},[0m
[0;33m                                            "f:readOnly": {}[0m
[0;33m                                        }[0m
[0;33m                                    }[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:restartPolicy": {},[0m
[0;33m                            "f:schedulerName": {},[0m
[0;33m                            "f:securityContext": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "f:runAsNonRoot": {},[0m
[0;33m                                "f:sysctls": {}[0m
[0;33m                            },[0m
[0;33m                            "f:serviceAccount": {},[0m
[0;33m                            "f:serviceAccountName": {},[0m
[0;33m                            "f:subdomain": {},[0m
[0;33m                            "f:terminationGracePeriodSeconds": {},[0m
[0;33m                            "f:volumes": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "k:{\"name\":\"activelogs\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:persistentVolumeClaim": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:claimName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"backup\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:persistentVolumeClaim": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:claimName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"certs-db2u-api\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"certs-wv-rest\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"data\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:persistentVolumeClaim": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:claimName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"db2dbconfig\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:configMap": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:name": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"db2dbmconfig\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:configMap": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:name": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"db2regconfig\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:configMap": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:name": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"db2ssl\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"db2u-lic\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"db2uconfig\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:configMap": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:name": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"dshm\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:emptyDir": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:medium": {},[0m
[0;33m                                        "f:sizeLimit": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"hive\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"instancepassword\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"kp-secret-file\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"local\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:emptyDir": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:sizeLimit": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"meta\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:persistentVolumeClaim": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:claimName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"proc\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:hostPath": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:path": {},[0m
[0;33m                                        "f:type": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"runvol\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:emptyDir": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:medium": {},[0m
[0;33m                                        "f:sizeLimit": {}[0m
[0;33m                                    },[0m
[0;33m                                    "f:name": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"sshkeys-db2instusr\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"sshkeys-db2uadm\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"sshkeys-db2uhausr\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"tempts\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:persistentVolumeClaim": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:claimName": {}[0m
[0;33m                                    }[0m
[0;33m                                },[0m
[0;33m                                "k:{\"name\":\"user-mgmt-key\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:name": {},[0m
[0;33m                                    "f:secret": {[0m
[0;33m                                        ".": {},[0m
[0;33m                                        "f:defaultMode": {},[0m
[0;33m                                        "f:optional": {},[0m
[0;33m                                        "f:secretName": {}[0m
[0;33m                                    }[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "kube-controller-manager",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:39:06Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                "f:k8s.ovn.org/pod-networks": {}[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "ip-10-0-172-88",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "subresource": "status",[0m
[0;33m                    "time": "2024-04-14T07:39:10Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:annotations": {[0m
[0;33m                                "f:k8s.v1.cni.cncf.io/network-status": {}[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "multus-daemon",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "subresource": "status",[0m
[0;33m                    "time": "2024-04-14T07:39:20Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:metadata": {[0m
[0;33m                            "f:labels": {[0m
[0;33m                                "f:name": {}[0m
[0;33m                            }[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "kubectl-label",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "time": "2024-04-14T07:41:35Z"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "v1",[0m
[0;33m                    "fieldsType": "FieldsV1",[0m
[0;33m                    "fieldsV1": {[0m
[0;33m                        "f:status": {[0m
[0;33m                            "f:conditions": {[0m
[0;33m                                "k:{\"type\":\"ContainersReady\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:lastProbeTime": {},[0m
[0;33m                                    "f:lastTransitionTime": {},[0m
[0;33m                                    "f:status": {},[0m
[0;33m                                    "f:type": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"type\":\"Initialized\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:lastProbeTime": {},[0m
[0;33m                                    "f:lastTransitionTime": {},[0m
[0;33m                                    "f:status": {},[0m
[0;33m                                    "f:type": {}[0m
[0;33m                                },[0m
[0;33m                                "k:{\"type\":\"Ready\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:lastProbeTime": {},[0m
[0;33m                                    "f:lastTransitionTime": {},[0m
[0;33m                                    "f:status": {},[0m
[0;33m                                    "f:type": {}[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:containerStatuses": {},[0m
[0;33m                            "f:hostIP": {},[0m
[0;33m                            "f:initContainerStatuses": {},[0m
[0;33m                            "f:phase": {},[0m
[0;33m                            "f:podIP": {},[0m
[0;33m                            "f:podIPs": {[0m
[0;33m                                ".": {},[0m
[0;33m                                "k:{\"ip\":\"10.131.4.28\"}": {[0m
[0;33m                                    ".": {},[0m
[0;33m                                    "f:ip": {}[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            "f:startTime": {}[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "manager": "kubelet",[0m
[0;33m                    "operation": "Update",[0m
[0;33m                    "subresource": "status",[0m
[0;33m                    "time": "2024-04-14T07:51:24Z"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "name": "c-db2u-manage-db2u-0",[0m
[0;33m            "namespace": "db2u",[0m
[0;33m            "ownerReferences": [[0m
[0;33m                {[0m
[0;33m                    "apiVersion": "apps/v1",[0m
[0;33m                    "blockOwnerDeletion": true,[0m
[0;33m                    "controller": true,[0m
[0;33m                    "kind": "StatefulSet",[0m
[0;33m                    "name": "c-db2u-manage-db2u",[0m
[0;33m                    "uid": "e914aad1-f607-41b8-84b3-4e6807e32cd1"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "resourceVersion": "10130888",[0m
[0;33m            "uid": "97ae679c-8dc3-4e36-b79e-946a0b4a3e74"[0m
[0;33m        },[0m
[0;33m        "spec": {[0m
[0;33m            "affinity": {[0m
[0;33m                "podAntiAffinity": {}[0m
[0;33m            },[0m
[0;33m            "containers": [[0m
[0;33m                {[0m
[0;33m                    "env": [[0m
[0;33m                        {[0m
[0;33m                            "name": "POD",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.labels['name']"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "POD_NAME",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.name"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "POD_NAMESPACE",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.namespace"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "MEMORY_REQUEST",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "resourceFieldRef": {[0m
[0;33m                                    "divisor": "0",[0m
[0;33m                                    "resource": "requests.memory"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "MEMORY_LIMIT",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "resourceFieldRef": {[0m
[0;33m                                    "divisor": "0",[0m
[0;33m                                    "resource": "limits.memory"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "CPU_LIMIT",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "resourceFieldRef": {[0m
[0;33m                                    "divisor": "0",[0m
[0;33m                                    "resource": "limits.cpu"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "ODF_SUPPORT"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "FORMATION_ID",[0m
[0;33m                            "value": "c-db2u-manage-db2u"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "V2",[0m
[0;33m                            "value": "false"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "etcdoperator",[0m
[0;33m                            "value": "true"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "WV_RECOVERY",[0m
[0;33m                            "value": "full"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "WV_HACLASS",[0m
[0;33m                            "value": "UDB"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "ETCD_ENDPOINTS",[0m
[0;33m                            "value": "http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "ETCDCTL_API",[0m
[0;33m                            "value": "3"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "ETCDCTL_ENDPOINTS",[0m
[0;33m                            "value": "http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "SERVICE_NAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u-internal"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_ENDPOINT",[0m
[0;33m                            "value": "c-db2u-manage-db2u-internal.db2u.svc:50052"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_DATABASE_BACKEND",[0m
[0;33m                            "value": "k8s"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_CONFIGMAP_NAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u-api"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_KEY_FILE",[0m
[0;33m                            "value": "/secrets/certs/db2u-api/tls.key"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_CERT_FILE",[0m
[0;33m                            "value": "/secrets/certs/db2u-api/tls.crt"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2_NGINX_SVC_HOST_NAME",[0m
[0;33m                            "value": "https://internal-nginx-svc:12443"[0m
[0;33m                        }[0m
[0;33m                    ],[0m
[0;33m                    "image": "icr.io/db2u/db2u@sha256:793e05f77076e8e1e055c738e90c9706d582c7da286e908955504842f844ce06",[0m
[0;33m                    "imagePullPolicy": "IfNotPresent",[0m
[0;33m                    "livenessProbe": {[0m
[0;33m                        "failureThreshold": 5,[0m
[0;33m                        "httpGet": {[0m
[0;33m                            "path": "/v1/db2/health",[0m
[0;33m                            "port": 50052,[0m
[0;33m                            "scheme": "HTTPS"[0m
[0;33m                        },[0m
[0;33m                        "periodSeconds": 60,[0m
[0;33m                        "successThreshold": 1,[0m
[0;33m                        "timeoutSeconds": 30[0m
[0;33m                    },[0m
[0;33m                    "name": "db2u",[0m
[0;33m                    "ports": [[0m
[0;33m                        {[0m
[0;33m                            "containerPort": 50000,[0m
[0;33m                            "name": "db2-server",[0m
[0;33m                            "protocol": "TCP"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "containerPort": 50001,[0m
[0;33m                            "name": "db2-ssl-server",[0m
[0;33m                            "protocol": "TCP"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "containerPort": 50052,[0m
[0;33m                            "name": "db2uapi",[0m
[0;33m                            "protocol": "TCP"[0m
[0;33m                        }[0m
[0;33m                    ],[0m
[0;33m                    "readinessProbe": {[0m
[0;33m                        "failureThreshold": 10,[0m
[0;33m                        "httpGet": {[0m
[0;33m                            "path": "/v1/db2/healthv2?Type=readiness",[0m
[0;33m                            "port": 50052,[0m
[0;33m                            "scheme": "HTTPS"[0m
[0;33m                        },[0m
[0;33m                        "periodSeconds": 30,[0m
[0;33m                        "successThreshold": 1,[0m
[0;33m                        "timeoutSeconds": 30[0m
[0;33m                    },[0m
[0;33m                    "resources": {[0m
[0;33m                        "limits": {[0m
[0;33m                            "cpu": "6",[0m
[0;33m                            "ephemeral-storage": "4Gi",[0m
[0;33m                            "memory": "16Gi"[0m
[0;33m                        },[0m
[0;33m                        "requests": {[0m
[0;33m                            "cpu": "4",[0m
[0;33m                            "ephemeral-storage": "2Gi",[0m
[0;33m                            "memory": "8Gi"[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "securityContext": {[0m
[0;33m                        "allowPrivilegeEscalation": true,[0m
[0;33m                        "capabilities": {[0m
[0;33m                            "add": [[0m
[0;33m                                "SYS_RESOURCE",[0m
[0;33m                                "IPC_OWNER",[0m
[0;33m                                "SYS_NICE",[0m
[0;33m                                "CHOWN",[0m
[0;33m                                "DAC_OVERRIDE",[0m
[0;33m                                "FSETID",[0m
[0;33m                                "FOWNER",[0m
[0;33m                                "SETGID",[0m
[0;33m                                "SETUID",[0m
[0;33m                                "SETFCAP",[0m
[0;33m                                "SETPCAP",[0m
[0;33m                                "SYS_CHROOT",[0m
[0;33m                                "KILL",[0m
[0;33m                                "AUDIT_WRITE"[0m
[0;33m                            ],[0m
[0;33m                            "drop": [[0m
[0;33m                                "ALL"[0m
[0;33m                            ][0m
[0;33m                        },[0m
[0;33m                        "privileged": false,[0m
[0;33m                        "readOnlyRootFilesystem": false,[0m
[0;33m                        "runAsUser": 600[0m
[0;33m                    },[0m
[0;33m                    "startupProbe": {[0m
[0;33m                        "failureThreshold": 60,[0m
[0;33m                        "httpGet": {[0m
[0;33m                            "path": "/v1/db2/healthv2?Type=startup",[0m
[0;33m                            "port": 50052,[0m
[0;33m                            "scheme": "HTTPS"[0m
[0;33m                        },[0m
[0;33m                        "initialDelaySeconds": 30,[0m
[0;33m                        "periodSeconds": 20,[0m
[0;33m                        "successThreshold": 1,[0m
[0;33m                        "timeoutSeconds": 30[0m
[0;33m                    },[0m
[0;33m                    "terminationMessagePath": "/dev/termination-log",[0m
[0;33m                    "terminationMessagePolicy": "File",[0m
[0;33m                    "volumeMounts": [[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0",[0m
[0;33m                            "name": "meta"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/bludata0",[0m
[0;33m                            "name": "data"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/backup",[0m
[0;33m                            "name": "backup"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/logs/active",[0m
[0;33m                            "name": "activelogs"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/tempts/c-db2u-manage-db2u",[0m
[0;33m                            "name": "tempts"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/dev/shm",[0m
[0;33m                            "name": "dshm"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/local",[0m
[0;33m                            "name": "local"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/run",[0m
[0;33m                            "name": "runvol"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0/configmap/db2u",[0m
[0;33m                            "name": "db2uconfig",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0/configmap/db2/registry",[0m
[0;33m                            "name": "db2regconfig",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0/configmap/db2/dbm-cfg",[0m
[0;33m                            "name": "db2dbmconfig",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0/configmap/db2/db-cfg",[0m
[0;33m                            "name": "db2dbconfig",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/sshkeys/db2uadm",[0m
[0;33m                            "name": "sshkeys-db2uadm",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/sshkeys/db2uhausr",[0m
[0;33m                            "name": "sshkeys-db2uhausr",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/sshkeys/db2instusr",[0m
[0;33m                            "name": "sshkeys-db2instusr",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/certs/wv-rest",[0m
[0;33m                            "name": "certs-wv-rest",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/db2ssl",[0m
[0;33m                            "name": "db2ssl",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/db2u/license/",[0m
[0;33m                            "name": "db2u-lic",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/db2instancepwd",[0m
[0;33m                            "name": "instancepassword",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/certs/db2u-api",[0m
[0;33m                            "name": "certs-db2u-api",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/user-mgmt-keypwd",[0m
[0;33m                            "name": "user-mgmt-key",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/kp",[0m
[0;33m                            "name": "kp-secret-file",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/secrets/hivepwd",[0m
[0;33m                            "name": "hive",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",[0m
[0;33m                            "name": "kube-api-access-7khhs",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        }[0m
[0;33m                    ][0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "dnsConfig": {[0m
[0;33m                "options": [[0m
[0;33m                    {[0m
[0;33m                        "name": "ndots",[0m
[0;33m                        "value": "2"[0m
[0;33m                    }[0m
[0;33m                ],[0m
[0;33m                "searches": [[0m
[0;33m                    "c-db2u-manage-db2u-internal.db2u.svc.cluster.local"[0m
[0;33m                ][0m
[0;33m            },[0m
[0;33m            "dnsPolicy": "ClusterFirst",[0m
[0;33m            "enableServiceLinks": true,[0m
[0;33m            "hostname": "c-db2u-manage-db2u-0",[0m
[0;33m            "imagePullSecrets": [[0m
[0;33m                {[0m
[0;33m                    "name": "ibm-registry"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "account-db2u-db2u-manage-dockercfg-l76f7"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "initContainers": [[0m
[0;33m                {[0m
[0;33m                    "command": [[0m
[0;33m                        "bash",[0m
[0;33m                        "-ec",[0m
[0;33m                        "/tools/pre-install/db2u_init.sh ${MLN_TOTAL} ${REPLICAS}"[0m
[0;33m                    ],[0m
[0;33m                    "env": [[0m
[0;33m                        {[0m
[0;33m                            "name": "SERVICENAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2TYPE",[0m
[0;33m                            "value": "db2wh"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "POD_NAME",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.name"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "POD_NAMESPACE",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.namespace"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "FORMATION_ID",[0m
[0;33m                            "value": "c-db2u-manage-db2u"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "MLN_TOTAL",[0m
[0;33m                            "value": "1"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "REPLICAS",[0m
[0;33m                            "value": "1"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "SERVICE_NAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u-internal"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_ENDPOINT",[0m
[0;33m                            "value": "c-db2u-manage-db2u-internal.db2u.svc:50052"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_DATABASE_BACKEND",[0m
[0;33m                            "value": "k8s"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_CONFIGMAP_NAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u-api"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_KEY_FILE",[0m
[0;33m                            "value": "/secrets/certs/db2u-api/tls.key"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_CERT_FILE",[0m
[0;33m                            "value": "/secrets/certs/db2u-api/tls.crt"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2_NGINX_SVC_HOST_NAME",[0m
[0;33m                            "value": "https://internal-nginx-svc:12443"[0m
[0;33m                        }[0m
[0;33m                    ],[0m
[0;33m                    "image": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;33m                    "imagePullPolicy": "IfNotPresent",[0m
[0;33m                    "name": "init-labels",[0m
[0;33m                    "resources": {[0m
[0;33m                        "limits": {[0m
[0;33m                            "cpu": "500m",[0m
[0;33m                            "ephemeral-storage": "5Mi",[0m
[0;33m                            "memory": "256Mi"[0m
[0;33m                        },[0m
[0;33m                        "requests": {[0m
[0;33m                            "cpu": "100m",[0m
[0;33m                            "ephemeral-storage": "1Mi",[0m
[0;33m                            "memory": "50Mi"[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "securityContext": {[0m
[0;33m                        "allowPrivilegeEscalation": true,[0m
[0;33m                        "capabilities": {[0m
[0;33m                            "add": [[0m
[0;33m                                "CHOWN",[0m
[0;33m                                "DAC_OVERRIDE",[0m
[0;33m                                "FOWNER",[0m
[0;33m                                "SETUID",[0m
[0;33m                                "SETGID"[0m
[0;33m                            ],[0m
[0;33m                            "drop": [[0m
[0;33m                                "ALL"[0m
[0;33m                            ][0m
[0;33m                        },[0m
[0;33m                        "privileged": false,[0m
[0;33m                        "readOnlyRootFilesystem": false,[0m
[0;33m                        "runAsUser": 500[0m
[0;33m                    },[0m
[0;33m                    "terminationMessagePath": "/dev/termination-log",[0m
[0;33m                    "terminationMessagePolicy": "File",[0m
[0;33m                    "volumeMounts": [[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0",[0m
[0;33m                            "name": "meta"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0/configmap/db2u",[0m
[0;33m                            "name": "db2uconfig",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",[0m
[0;33m                            "name": "kube-api-access-7khhs",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        }[0m
[0;33m                    ][0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "command": [[0m
[0;33m                        "bash",[0m
[0;33m                        "-ec",[0m
[0;33m                        "/tools/pre-install/set_kernel_params.sh"[0m
[0;33m                    ],[0m
[0;33m                    "env": [[0m
[0;33m                        {[0m
[0;33m                            "name": "SERVICENAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "POD_NAME",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.name"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "POD_NAMESPACE",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "fieldRef": {[0m
[0;33m                                    "apiVersion": "v1",[0m
[0;33m                                    "fieldPath": "metadata.namespace"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "MEMORY_LIMIT",[0m
[0;33m                            "valueFrom": {[0m
[0;33m                                "resourceFieldRef": {[0m
[0;33m                                    "containerName": "db2u",[0m
[0;33m                                    "divisor": "0",[0m
[0;33m                                    "resource": "limits.memory"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "SERVICE_NAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u-internal"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_ENDPOINT",[0m
[0;33m                            "value": "c-db2u-manage-db2u-internal.db2u.svc:50052"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_DATABASE_BACKEND",[0m
[0;33m                            "value": "k8s"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_CONFIGMAP_NAME",[0m
[0;33m                            "value": "c-db2u-manage-db2u-api"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_KEY_FILE",[0m
[0;33m                            "value": "/secrets/certs/db2u-api/tls.key"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2U_API_CERT_FILE",[0m
[0;33m                            "value": "/secrets/certs/db2u-api/tls.crt"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "name": "DB2_NGINX_SVC_HOST_NAME",[0m
[0;33m                            "value": "https://internal-nginx-svc:12443"[0m
[0;33m                        }[0m
[0;33m                    ],[0m
[0;33m                    "image": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;33m                    "imagePullPolicy": "IfNotPresent",[0m
[0;33m                    "name": "init-kernel",[0m
[0;33m                    "resources": {[0m
[0;33m                        "limits": {[0m
[0;33m                            "cpu": "500m",[0m
[0;33m                            "ephemeral-storage": "5Mi",[0m
[0;33m                            "memory": "256Mi"[0m
[0;33m                        },[0m
[0;33m                        "requests": {[0m
[0;33m                            "cpu": "100m",[0m
[0;33m                            "ephemeral-storage": "1Mi",[0m
[0;33m                            "memory": "50Mi"[0m
[0;33m                        }[0m
[0;33m                    },[0m
[0;33m                    "securityContext": {[0m
[0;33m                        "allowPrivilegeEscalation": true,[0m
[0;33m                        "capabilities": {[0m
[0;33m                            "drop": [[0m
[0;33m                                "ALL"[0m
[0;33m                            ][0m
[0;33m                        },[0m
[0;33m                        "privileged": true,[0m
[0;33m                        "readOnlyRootFilesystem": false,[0m
[0;33m                        "runAsNonRoot": false,[0m
[0;33m                        "runAsUser": 0[0m
[0;33m                    },[0m
[0;33m                    "terminationMessagePath": "/dev/termination-log",[0m
[0;33m                    "terminationMessagePolicy": "File",[0m
[0;33m                    "volumeMounts": [[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/mnt/blumeta0",[0m
[0;33m                            "name": "meta"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/host/proc",[0m
[0;33m                            "name": "proc"[0m
[0;33m                        },[0m
[0;33m                        {[0m
[0;33m                            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",[0m
[0;33m                            "name": "kube-api-access-7khhs",[0m
[0;33m                            "readOnly": true[0m
[0;33m                        }[0m
[0;33m                    ][0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "nodeName": "ip-10-0-172-88.us-west-2.compute.internal",[0m
[0;33m            "preemptionPolicy": "PreemptLowerPriority",[0m
[0;33m            "priority": 0,[0m
[0;33m            "restartPolicy": "Always",[0m
[0;33m            "schedulerName": "default-scheduler",[0m
[0;33m            "securityContext": {[0m
[0;33m                "runAsNonRoot": true,[0m
[0;33m                "seLinuxOptions": {[0m
[0;33m                    "level": "s0:c33,c17"[0m
[0;33m                },[0m
[0;33m                "sysctls": [[0m
[0;33m                    {[0m
[0;33m                        "name": "net.ipv4.ip_local_port_range",[0m
[0;33m                        "value": "32768 49999"[0m
[0;33m                    }[0m
[0;33m                ][0m
[0;33m            },[0m
[0;33m            "serviceAccount": "account-db2u-db2u-manage",[0m
[0;33m            "serviceAccountName": "account-db2u-db2u-manage",[0m
[0;33m            "subdomain": "c-db2u-manage-db2u-internal",[0m
[0;33m            "terminationGracePeriodSeconds": 120,[0m
[0;33m            "tolerations": [[0m
[0;33m                {[0m
[0;33m                    "effect": "NoExecute",[0m
[0;33m                    "key": "node.kubernetes.io/not-ready",[0m
[0;33m                    "operator": "Exists",[0m
[0;33m                    "tolerationSeconds": 300[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "effect": "NoExecute",[0m
[0;33m                    "key": "node.kubernetes.io/unreachable",[0m
[0;33m                    "operator": "Exists",[0m
[0;33m                    "tolerationSeconds": 300[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "effect": "NoSchedule",[0m
[0;33m                    "key": "node.kubernetes.io/memory-pressure",[0m
[0;33m                    "operator": "Exists"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "volumes": [[0m
[0;33m                {[0m
[0;33m                    "name": "data",[0m
[0;33m                    "persistentVolumeClaim": {[0m
[0;33m                        "claimName": "data-c-db2u-manage-db2u-0"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "activelogs",[0m
[0;33m                    "persistentVolumeClaim": {[0m
[0;33m                        "claimName": "activelogs-c-db2u-manage-db2u-0"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "tempts",[0m
[0;33m                    "persistentVolumeClaim": {[0m
[0;33m                        "claimName": "tempts-c-db2u-manage-db2u-0"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "meta",[0m
[0;33m                    "persistentVolumeClaim": {[0m
[0;33m                        "claimName": "c-db2u-manage-meta"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "backup",[0m
[0;33m                    "persistentVolumeClaim": {[0m
[0;33m                        "claimName": "c-db2u-manage-backup"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "emptyDir": {[0m
[0;33m                        "medium": "Memory",[0m
[0;33m                        "sizeLimit": "1Gi"[0m
[0;33m                    },[0m
[0;33m                    "name": "dshm"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "emptyDir": {[0m
[0;33m                        "sizeLimit": "200Mi"[0m
[0;33m                    },[0m
[0;33m                    "name": "local"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "emptyDir": {[0m
[0;33m                        "medium": "Memory",[0m
[0;33m                        "sizeLimit": "200Mi"[0m
[0;33m                    },[0m
[0;33m                    "name": "runvol"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "hostPath": {[0m
[0;33m                        "path": "/proc",[0m
[0;33m                        "type": ""[0m
[0;33m                    },[0m
[0;33m                    "name": "proc"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "configMap": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "name": "c-db2u-manage-db2uconfig"[0m
[0;33m                    },[0m
[0;33m                    "name": "db2uconfig"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "configMap": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "name": "c-db2u-manage-db2regconfig"[0m
[0;33m                    },[0m
[0;33m                    "name": "db2regconfig"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "configMap": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "name": "c-db2u-manage-db2dbmconfig"[0m
[0;33m                    },[0m
[0;33m                    "name": "db2dbmconfig"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "configMap": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "name": "c-db2u-manage-db2dbconfig"[0m
[0;33m                    },[0m
[0;33m                    "name": "db2dbconfig"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "sshkeys-db2uadm",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 256,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-sshkeys-db2uadm"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "sshkeys-db2uhausr",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 256,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-sshkeys-db2uhausr"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "sshkeys-db2instusr",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 256,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-sshkeys-db2instusr"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "certs-wv-rest",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 256,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-certs-wv-rest"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "db2ssl",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "db2u-certificate"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "db2u-lic",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 256,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-db2u-lic"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "instancepassword",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-instancepassword"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "certs-db2u-api",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-certs-db2u-api"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "user-mgmt-key",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 256,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-user-mgmt-key"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "kp-secret-file",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-kp-secret-file"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "hive",[0m
[0;33m                    "secret": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "optional": false,[0m
[0;33m                        "secretName": "c-db2u-manage-hive"[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "name": "kube-api-access-7khhs",[0m
[0;33m                    "projected": {[0m
[0;33m                        "defaultMode": 420,[0m
[0;33m                        "sources": [[0m
[0;33m                            {[0m
[0;33m                                "serviceAccountToken": {[0m
[0;33m                                    "expirationSeconds": 3607,[0m
[0;33m                                    "path": "token"[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "configMap": {[0m
[0;33m                                    "items": [[0m
[0;33m                                        {[0m
[0;33m                                            "key": "ca.crt",[0m
[0;33m                                            "path": "ca.crt"[0m
[0;33m                                        }[0m
[0;33m                                    ],[0m
[0;33m                                    "name": "kube-root-ca.crt"[0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "downwardAPI": {[0m
[0;33m                                    "items": [[0m
[0;33m                                        {[0m
[0;33m                                            "fieldRef": {[0m
[0;33m                                                "apiVersion": "v1",[0m
[0;33m                                                "fieldPath": "metadata.namespace"[0m
[0;33m                                            },[0m
[0;33m                                            "path": "namespace"[0m
[0;33m                                        }[0m
[0;33m                                    ][0m
[0;33m                                }[0m
[0;33m                            },[0m
[0;33m                            {[0m
[0;33m                                "configMap": {[0m
[0;33m                                    "items": [[0m
[0;33m                                        {[0m
[0;33m                                            "key": "service-ca.crt",[0m
[0;33m                                            "path": "service-ca.crt"[0m
[0;33m                                        }[0m
[0;33m                                    ],[0m
[0;33m                                    "name": "openshift-service-ca.crt"[0m
[0;33m                                }[0m
[0;33m                            }[0m
[0;33m                        ][0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            ][0m
[0;33m        },[0m
[0;33m        "status": {[0m
[0;33m            "conditions": [[0m
[0;33m                {[0m
[0;33m                    "lastProbeTime": null,[0m
[0;33m                    "lastTransitionTime": "2024-04-14T07:41:36Z",[0m
[0;33m                    "status": "True",[0m
[0;33m                    "type": "Initialized"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "lastProbeTime": null,[0m
[0;33m                    "lastTransitionTime": "2024-04-14T07:51:24Z",[0m
[0;33m                    "status": "True",[0m
[0;33m                    "type": "Ready"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "lastProbeTime": null,[0m
[0;33m                    "lastTransitionTime": "2024-04-14T07:51:24Z",[0m
[0;33m                    "status": "True",[0m
[0;33m                    "type": "ContainersReady"[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "lastProbeTime": null,[0m
[0;33m                    "lastTransitionTime": "2024-04-14T07:39:10Z",[0m
[0;33m                    "status": "True",[0m
[0;33m                    "type": "PodScheduled"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "containerStatuses": [[0m
[0;33m                {[0m
[0;33m                    "containerID": "cri-o://e48de123dbda47a7df3443efb229f7fcdb9e0b18588995659df3619c6afedc63",[0m
[0;33m                    "image": "icr.io/db2u/db2u@sha256:793e05f77076e8e1e055c738e90c9706d582c7da286e908955504842f844ce06",[0m
[0;33m                    "imageID": "icr.io/db2u/db2u@sha256:793e05f77076e8e1e055c738e90c9706d582c7da286e908955504842f844ce06",[0m
[0;33m                    "lastState": {},[0m
[0;33m                    "name": "db2u",[0m
[0;33m                    "ready": true,[0m
[0;33m                    "restartCount": 0,[0m
[0;33m                    "started": true,[0m
[0;33m                    "state": {[0m
[0;33m                        "running": {[0m
[0;33m                            "startedAt": "2024-04-14T07:46:11Z"[0m
[0;33m                        }[0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "hostIP": "10.0.172.88",[0m
[0;33m            "initContainerStatuses": [[0m
[0;33m                {[0m
[0;33m                    "containerID": "cri-o://6f69a0240019e0eabf1ce447368caefaa06dcca1055603c23aef6011eff333d2",[0m
[0;33m                    "image": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;33m                    "imageID": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;33m                    "lastState": {},[0m
[0;33m                    "name": "init-labels",[0m
[0;33m                    "ready": true,[0m
[0;33m                    "restartCount": 0,[0m
[0;33m                    "state": {[0m
[0;33m                        "terminated": {[0m
[0;33m                            "containerID": "cri-o://6f69a0240019e0eabf1ce447368caefaa06dcca1055603c23aef6011eff333d2",[0m
[0;33m                            "exitCode": 0,[0m
[0;33m                            "finishedAt": "2024-04-14T07:41:35Z",[0m
[0;33m                            "reason": "Completed",[0m
[0;33m                            "startedAt": "2024-04-14T07:41:34Z"[0m
[0;33m                        }[0m
[0;33m                    }[0m
[0;33m                },[0m
[0;33m                {[0m
[0;33m                    "containerID": "cri-o://834f5038f7d52cbb8bcc55d4d9c5e3330b4eb023e305e06fb9d19a62d170a8b8",[0m
[0;33m                    "image": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;33m                    "imageID": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;33m                    "lastState": {},[0m
[0;33m                    "name": "init-kernel",[0m
[0;33m                    "ready": true,[0m
[0;33m                    "restartCount": 0,[0m
[0;33m                    "state": {[0m
[0;33m                        "terminated": {[0m
[0;33m                            "containerID": "cri-o://834f5038f7d52cbb8bcc55d4d9c5e3330b4eb023e305e06fb9d19a62d170a8b8",[0m
[0;33m                            "exitCode": 0,[0m
[0;33m                            "finishedAt": "2024-04-14T07:41:35Z",[0m
[0;33m                            "reason": "Completed",[0m
[0;33m                            "startedAt": "2024-04-14T07:41:35Z"[0m
[0;33m                        }[0m
[0;33m                    }[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "phase": "Running",[0m
[0;33m            "podIP": "10.131.4.28",[0m
[0;33m            "podIPs": [[0m
[0;33m                {[0m
[0;33m                    "ip": "10.131.4.28"[0m
[0;33m                }[0m
[0;33m            ],[0m
[0;33m            "qosClass": "Burstable",[0m
[0;33m            "startTime": "2024-04-14T07:39:10Z"[0m
[0;33m        }[0m
[0;33m    }[0m
[0;33m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "msg": [[0m
[0;32m        "",[0m
[0;32m        false[0m
[0;32m    ][0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "api_found": true,[0m
[0;32m    "attempts": 1,[0m
[0;32m    "changed": false,[0m
[0;32m    "resources": [[0m
[0;32m        {[0m
[0;32m            "apiVersion": "apps/v1",[0m
[0;32m            "kind": "StatefulSet",[0m
[0;32m            "metadata": {[0m
[0;32m                "annotations": {[0m
[0;32m                    "databases.cloud.ibm.com/converged-replicas": "1",[0m
[0;32m                    "productChargedContainers": "All",[0m
[0;32m                    "productID": "cb1bb71fd6fb4b6695f64ba436421a33",[0m
[0;32m                    "productMetric": "FREE",[0m
[0;32m                    "productName": "IBM Db2 Warehouse Developer Edition Non-Production (Community)"[0m
[0;32m                },[0m
[0;32m                "creationTimestamp": "2024-04-14T07:39:06Z",[0m
[0;32m                "generation": 1,[0m
[0;32m                "labels": {[0m
[0;32m                    "app": "db2u-manage",[0m
[0;32m                    "component": "db2wh",[0m
[0;32m                    "formation_id": "db2u-manage",[0m
[0;32m                    "role": "db",[0m
[0;32m                    "type": "engine"[0m
[0;32m                },[0m
[0;32m                "managedFields": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apps/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:status": {[0m
[0;32m                                "f:availableReplicas": {},[0m
[0;32m                                "f:collisionCount": {},[0m
[0;32m                                "f:currentRevision": {},[0m
[0;32m                                "f:observedGeneration": {},[0m
[0;32m                                "f:readyReplicas": {},[0m
[0;32m                                "f:replicas": {},[0m
[0;32m                                "f:updateRevision": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "kube-controller-manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "subresource": "status",[0m
[0;32m                        "time": "2024-04-14T07:51:24Z"[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "apps/v1",[0m
[0;32m                        "fieldsType": "FieldsV1",[0m
[0;32m                        "fieldsV1": {[0m
[0;32m                            "f:metadata": {[0m
[0;32m                                "f:annotations": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:databases.cloud.ibm.com/converged-replicas": {},[0m
[0;32m                                    "f:productChargedContainers": {},[0m
[0;32m                                    "f:productID": {},[0m
[0;32m                                    "f:productMetric": {},[0m
[0;32m                                    "f:productName": {}[0m
[0;32m                                },[0m
[0;32m                                "f:labels": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:app": {},[0m
[0;32m                                    "f:component": {},[0m
[0;32m                                    "f:formation_id": {},[0m
[0;32m                                    "f:role": {},[0m
[0;32m                                    "f:type": {}[0m
[0;32m                                },[0m
[0;32m                                "f:ownerReferences": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "k:{\"uid\":\"22d04bf3-baa7-429b-953f-f5cbea8c1138\"}": {}[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "f:spec": {[0m
[0;32m                                "f:persistentVolumeClaimRetentionPolicy": {[0m
[0;32m                                    ".": {},[0m
[0;32m                                    "f:whenDeleted": {},[0m
[0;32m                                    "f:whenScaled": {}[0m
[0;32m                                },[0m
[0;32m                                "f:podManagementPolicy": {},[0m
[0;32m                                "f:replicas": {},[0m
[0;32m                                "f:revisionHistoryLimit": {},[0m
[0;32m                                "f:selector": {},[0m
[0;32m                                "f:serviceName": {},[0m
[0;32m                                "f:template": {[0m
[0;32m                                    "f:metadata": {[0m
[0;32m                                        "f:annotations": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:productChargedContainers": {},[0m
[0;32m                                            "f:productID": {},[0m
[0;32m                                            "f:productMetric": {},[0m
[0;32m                                            "f:productName": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:labels": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:app": {},[0m
[0;32m                                            "f:component": {},[0m
[0;32m                                            "f:formation_id": {},[0m
[0;32m                                            "f:role": {},[0m
[0;32m                                            "f:type": {}[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    "f:spec": {[0m
[0;32m                                        "f:affinity": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:podAntiAffinity": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:containers": {[0m
[0;32m                                            "k:{\"name\":\"db2u\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:env": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"name\":\"CPU_LIMIT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:resourceFieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_CERT_FILE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_CONFIGMAP_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_DATABASE_BACKEND\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_ENDPOINT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_KEY_FILE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2_NGINX_SVC_HOST_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"ETCDCTL_API\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"ETCDCTL_ENDPOINTS\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"ETCD_ENDPOINTS\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"FORMATION_ID\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"MEMORY_LIMIT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:resourceFieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"MEMORY_REQUEST\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:resourceFieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"ODF_SUPPORT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"SERVICE_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"V2\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"WV_HACLASS\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"WV_RECOVERY\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"etcdoperator\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:image": {},[0m
[0;32m                                                "f:imagePullPolicy": {},[0m
[0;32m                                                "f:livenessProbe": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:failureThreshold": {},[0m
[0;32m                                                    "f:httpGet": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:path": {},[0m
[0;32m                                                        "f:port": {},[0m
[0;32m                                                        "f:scheme": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:periodSeconds": {},[0m
[0;32m                                                    "f:successThreshold": {},[0m
[0;32m                                                    "f:timeoutSeconds": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:ports": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"containerPort\":50000,\"protocol\":\"TCP\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:containerPort": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:protocol": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"containerPort\":50001,\"protocol\":\"TCP\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:containerPort": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:protocol": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"containerPort\":50052,\"protocol\":\"TCP\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:containerPort": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:protocol": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:readinessProbe": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:failureThreshold": {},[0m
[0;32m                                                    "f:httpGet": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:path": {},[0m
[0;32m                                                        "f:port": {},[0m
[0;32m                                                        "f:scheme": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:periodSeconds": {},[0m
[0;32m                                                    "f:successThreshold": {},[0m
[0;32m                                                    "f:timeoutSeconds": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:resources": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:limits": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:ephemeral-storage": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:requests": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:ephemeral-storage": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:securityContext": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:allowPrivilegeEscalation": {},[0m
[0;32m                                                    "f:capabilities": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:add": {},[0m
[0;32m                                                        "f:drop": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:privileged": {},[0m
[0;32m                                                    "f:readOnlyRootFilesystem": {},[0m
[0;32m                                                    "f:runAsUser": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:startupProbe": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:failureThreshold": {},[0m
[0;32m                                                    "f:httpGet": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:path": {},[0m
[0;32m                                                        "f:port": {},[0m
[0;32m                                                        "f:scheme": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:initialDelaySeconds": {},[0m
[0;32m                                                    "f:periodSeconds": {},[0m
[0;32m                                                    "f:successThreshold": {},[0m
[0;32m                                                    "f:timeoutSeconds": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:terminationMessagePath": {},[0m
[0;32m                                                "f:terminationMessagePolicy": {},[0m
[0;32m                                                "f:volumeMounts": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"mountPath\":\"/db2u/license/\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/dev/shm\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/backup\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/bludata0\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2/db-cfg\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2/dbm-cfg\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2/registry\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2u\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/local\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/logs/active\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/tempts/c-db2u-manage-db2u\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/run\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/certs/db2u-api\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/certs/wv-rest\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/db2instancepwd\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/db2ssl\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/hivepwd\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/kp\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/sshkeys/db2instusr\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/sshkeys/db2uadm\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/sshkeys/db2uhausr\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/secrets/user-mgmt-keypwd\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    }[0m
[0;32m                                                }[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "f:dnsConfig": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:options": {},[0m
[0;32m                                            "f:searches": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:dnsPolicy": {},[0m
[0;32m                                        "f:initContainers": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "k:{\"name\":\"init-kernel\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:command": {},[0m
[0;32m                                                "f:env": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_CERT_FILE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_CONFIGMAP_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_DATABASE_BACKEND\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_ENDPOINT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_KEY_FILE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2_NGINX_SVC_HOST_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"MEMORY_LIMIT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:resourceFieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"SERVICENAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"SERVICE_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:image": {},[0m
[0;32m                                                "f:imagePullPolicy": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:resources": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:limits": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:ephemeral-storage": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:requests": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:ephemeral-storage": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:securityContext": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:allowPrivilegeEscalation": {},[0m
[0;32m                                                    "f:capabilities": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:drop": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:privileged": {},[0m
[0;32m                                                    "f:readOnlyRootFilesystem": {},[0m
[0;32m                                                    "f:runAsNonRoot": {},[0m
[0;32m                                                    "f:runAsUser": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:terminationMessagePath": {},[0m
[0;32m                                                "f:terminationMessagePolicy": {},[0m
[0;32m                                                "f:volumeMounts": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"mountPath\":\"/host/proc\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    }[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"init-labels\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:command": {},[0m
[0;32m                                                "f:env": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"name\":\"DB2TYPE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_CERT_FILE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_CONFIGMAP_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_DATABASE_BACKEND\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_ENDPOINT\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2U_API_KEY_FILE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"DB2_NGINX_SVC_HOST_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"FORMATION_ID\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"MLN_TOTAL\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:valueFrom": {[0m
[0;32m                                                            ".": {},[0m
[0;32m                                                            "f:fieldRef": {}[0m
[0;32m                                                        }[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"REPLICAS\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"SERVICENAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"name\":\"SERVICE_NAME\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:value": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:image": {},[0m
[0;32m                                                "f:imagePullPolicy": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:resources": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:limits": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:ephemeral-storage": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:requests": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:cpu": {},[0m
[0;32m                                                        "f:ephemeral-storage": {},[0m
[0;32m                                                        "f:memory": {}[0m
[0;32m                                                    }[0m
[0;32m                                                },[0m
[0;32m                                                "f:securityContext": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:allowPrivilegeEscalation": {},[0m
[0;32m                                                    "f:capabilities": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:add": {},[0m
[0;32m                                                        "f:drop": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "f:privileged": {},[0m
[0;32m                                                    "f:readOnlyRootFilesystem": {},[0m
[0;32m                                                    "f:runAsUser": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:terminationMessagePath": {},[0m
[0;32m                                                "f:terminationMessagePolicy": {},[0m
[0;32m                                                "f:volumeMounts": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {}[0m
[0;32m                                                    },[0m
[0;32m                                                    "k:{\"mountPath\":\"/mnt/blumeta0/configmap/db2u\"}": {[0m
[0;32m                                                        ".": {},[0m
[0;32m                                                        "f:mountPath": {},[0m
[0;32m                                                        "f:name": {},[0m
[0;32m                                                        "f:readOnly": {}[0m
[0;32m                                                    }[0m
[0;32m                                                }[0m
[0;32m                                            }[0m
[0;32m                                        },[0m
[0;32m                                        "f:restartPolicy": {},[0m
[0;32m                                        "f:schedulerName": {},[0m
[0;32m                                        "f:securityContext": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "f:runAsNonRoot": {},[0m
[0;32m                                            "f:sysctls": {}[0m
[0;32m                                        },[0m
[0;32m                                        "f:serviceAccount": {},[0m
[0;32m                                        "f:serviceAccountName": {},[0m
[0;32m                                        "f:terminationGracePeriodSeconds": {},[0m
[0;32m                                        "f:volumes": {[0m
[0;32m                                            ".": {},[0m
[0;32m                                            "k:{\"name\":\"backup\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:persistentVolumeClaim": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:claimName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"certs-db2u-api\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"certs-wv-rest\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"db2dbconfig\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:configMap": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:name": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"db2dbmconfig\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:configMap": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:name": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"db2regconfig\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:configMap": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:name": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"db2ssl\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"db2u-lic\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"db2uconfig\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:configMap": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:name": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"dshm\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:emptyDir": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:medium": {},[0m
[0;32m                                                    "f:sizeLimit": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"hive\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"instancepassword\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"kp-secret-file\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"local\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:emptyDir": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:sizeLimit": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"meta\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:persistentVolumeClaim": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:claimName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"proc\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:hostPath": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:path": {},[0m
[0;32m                                                    "f:type": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"runvol\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:emptyDir": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:medium": {},[0m
[0;32m                                                    "f:sizeLimit": {}[0m
[0;32m                                                },[0m
[0;32m                                                "f:name": {}[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"sshkeys-db2instusr\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"sshkeys-db2uadm\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"sshkeys-db2uhausr\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            },[0m
[0;32m                                            "k:{\"name\":\"user-mgmt-key\"}": {[0m
[0;32m                                                ".": {},[0m
[0;32m                                                "f:name": {},[0m
[0;32m                                                "f:secret": {[0m
[0;32m                                                    ".": {},[0m
[0;32m                                                    "f:defaultMode": {},[0m
[0;32m                                                    "f:optional": {},[0m
[0;32m                                                    "f:secretName": {}[0m
[0;32m                                                }[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "f:updateStrategy": {[0m
[0;32m                                    "f:rollingUpdate": {[0m
[0;32m                                        ".": {},[0m
[0;32m                                        "f:partition": {}[0m
[0;32m                                    },[0m
[0;32m                                    "f:type": {}[0m
[0;32m                                },[0m
[0;32m                                "f:volumeClaimTemplates": {}[0m
[0;32m                            }[0m
[0;32m                        },[0m
[0;32m                        "manager": "manager",[0m
[0;32m                        "operation": "Update",[0m
[0;32m                        "time": "2024-04-14T07:52:04Z"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "name": "c-db2u-manage-db2u",[0m
[0;32m                "namespace": "db2u",[0m
[0;32m                "ownerReferences": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                        "kind": "Formation",[0m
[0;32m                        "name": "db2u-manage",[0m
[0;32m                        "uid": "22d04bf3-baa7-429b-953f-f5cbea8c1138"[0m
[0;32m                    }[0m
[0;32m                ],[0m
[0;32m                "resourceVersion": "10130898",[0m
[0;32m                "uid": "e914aad1-f607-41b8-84b3-4e6807e32cd1"[0m
[0;32m            },[0m
[0;32m            "spec": {[0m
[0;32m                "persistentVolumeClaimRetentionPolicy": {[0m
[0;32m                    "whenDeleted": "Retain",[0m
[0;32m                    "whenScaled": "Retain"[0m
[0;32m                },[0m
[0;32m                "podManagementPolicy": "Parallel",[0m
[0;32m                "replicas": 1,[0m
[0;32m                "revisionHistoryLimit": 10,[0m
[0;32m                "selector": {[0m
[0;32m                    "matchLabels": {[0m
[0;32m                        "app": "db2u-manage",[0m
[0;32m                        "component": "db2wh",[0m
[0;32m                        "formation_id": "db2u-manage",[0m
[0;32m                        "role": "db",[0m
[0;32m                        "type": "engine"[0m
[0;32m                    }[0m
[0;32m                },[0m
[0;32m                "serviceName": "c-db2u-manage-db2u-internal",[0m
[0;32m                "template": {[0m
[0;32m                    "metadata": {[0m
[0;32m                        "annotations": {[0m
[0;32m                            "productChargedContainers": "All",[0m
[0;32m                            "productID": "cb1bb71fd6fb4b6695f64ba436421a33",[0m
[0;32m                            "productMetric": "FREE",[0m
[0;32m                            "productName": "IBM Db2 Warehouse Developer Edition Non-Production (Community)"[0m
[0;32m                        },[0m
[0;32m                        "creationTimestamp": null,[0m
[0;32m                        "labels": {[0m
[0;32m                            "app": "db2u-manage",[0m
[0;32m                            "component": "db2wh",[0m
[0;32m                            "formation_id": "db2u-manage",[0m
[0;32m                            "role": "db",[0m
[0;32m                            "type": "engine"[0m
[0;32m                        }[0m
[0;32m                    },[0m
[0;32m                    "spec": {[0m
[0;32m                        "affinity": {[0m
[0;32m                            "podAntiAffinity": {}[0m
[0;32m                        },[0m
[0;32m                        "containers": [[0m
[0;32m                            {[0m
[0;32m                                "env": [[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.labels['name']"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD_NAME",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.name"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD_NAMESPACE",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.namespace"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "MEMORY_REQUEST",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "resourceFieldRef": {[0m
[0;32m                                                "divisor": "0",[0m
[0;32m                                                "resource": "requests.memory"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "MEMORY_LIMIT",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "resourceFieldRef": {[0m
[0;32m                                                "divisor": "0",[0m
[0;32m                                                "resource": "limits.memory"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "CPU_LIMIT",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "resourceFieldRef": {[0m
[0;32m                                                "divisor": "0",[0m
[0;32m                                                "resource": "limits.cpu"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "ODF_SUPPORT"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "FORMATION_ID",[0m
[0;32m                                        "value": "c-db2u-manage-db2u"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "V2",[0m
[0;32m                                        "value": "false"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "etcdoperator",[0m
[0;32m                                        "value": "true"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "WV_RECOVERY",[0m
[0;32m                                        "value": "full"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "WV_HACLASS",[0m
[0;32m                                        "value": "UDB"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "ETCD_ENDPOINTS",[0m
[0;32m                                        "value": "http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "ETCDCTL_API",[0m
[0;32m                                        "value": "3"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "ETCDCTL_ENDPOINTS",[0m
[0;32m                                        "value": "http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379,http://c-db2u-manage-etcd-0.c-db2u-manage-etcd:2379"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "SERVICE_NAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-internal"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_ENDPOINT",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-internal.db2u.svc:50052"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_DATABASE_BACKEND",[0m
[0;32m                                        "value": "k8s"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_CONFIGMAP_NAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-api"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_KEY_FILE",[0m
[0;32m                                        "value": "/secrets/certs/db2u-api/tls.key"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_CERT_FILE",[0m
[0;32m                                        "value": "/secrets/certs/db2u-api/tls.crt"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2_NGINX_SVC_HOST_NAME",[0m
[0;32m                                        "value": "https://internal-nginx-svc:12443"[0m
[0;32m                                    }[0m
[0;32m                                ],[0m
[0;32m                                "image": "icr.io/db2u/db2u@sha256:793e05f77076e8e1e055c738e90c9706d582c7da286e908955504842f844ce06",[0m
[0;32m                                "imagePullPolicy": "IfNotPresent",[0m
[0;32m                                "livenessProbe": {[0m
[0;32m                                    "failureThreshold": 5,[0m
[0;32m                                    "httpGet": {[0m
[0;32m                                        "path": "/v1/db2/health",[0m
[0;32m                                        "port": 50052,[0m
[0;32m                                        "scheme": "HTTPS"[0m
[0;32m                                    },[0m
[0;32m                                    "periodSeconds": 60,[0m
[0;32m                                    "successThreshold": 1,[0m
[0;32m                                    "timeoutSeconds": 30[0m
[0;32m                                },[0m
[0;32m                                "name": "db2u",[0m
[0;32m                                "ports": [[0m
[0;32m                                    {[0m
[0;32m                                        "containerPort": 50000,[0m
[0;32m                                        "name": "db2-server",[0m
[0;32m                                        "protocol": "TCP"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "containerPort": 50001,[0m
[0;32m                                        "name": "db2-ssl-server",[0m
[0;32m                                        "protocol": "TCP"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "containerPort": 50052,[0m
[0;32m                                        "name": "db2uapi",[0m
[0;32m                                        "protocol": "TCP"[0m
[0;32m                                    }[0m
[0;32m                                ],[0m
[0;32m                                "readinessProbe": {[0m
[0;32m                                    "failureThreshold": 10,[0m
[0;32m                                    "httpGet": {[0m
[0;32m                                        "path": "/v1/db2/healthv2?Type=readiness",[0m
[0;32m                                        "port": 50052,[0m
[0;32m                                        "scheme": "HTTPS"[0m
[0;32m                                    },[0m
[0;32m                                    "periodSeconds": 30,[0m
[0;32m                                    "successThreshold": 1,[0m
[0;32m                                    "timeoutSeconds": 30[0m
[0;32m                                },[0m
[0;32m                                "resources": {[0m
[0;32m                                    "limits": {[0m
[0;32m                                        "cpu": "6",[0m
[0;32m                                        "ephemeral-storage": "4Gi",[0m
[0;32m                                        "memory": "16Gi"[0m
[0;32m                                    },[0m
[0;32m                                    "requests": {[0m
[0;32m                                        "cpu": "4",[0m
[0;32m                                        "ephemeral-storage": "2Gi",[0m
[0;32m                                        "memory": "8Gi"[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "securityContext": {[0m
[0;32m                                    "allowPrivilegeEscalation": true,[0m
[0;32m                                    "capabilities": {[0m
[0;32m                                        "add": [[0m
[0;32m                                            "SYS_RESOURCE",[0m
[0;32m                                            "IPC_OWNER",[0m
[0;32m                                            "SYS_NICE",[0m
[0;32m                                            "CHOWN",[0m
[0;32m                                            "DAC_OVERRIDE",[0m
[0;32m                                            "FSETID",[0m
[0;32m                                            "FOWNER",[0m
[0;32m                                            "SETGID",[0m
[0;32m                                            "SETUID",[0m
[0;32m                                            "SETFCAP",[0m
[0;32m                                            "SETPCAP",[0m
[0;32m                                            "SYS_CHROOT",[0m
[0;32m                                            "KILL",[0m
[0;32m                                            "AUDIT_WRITE"[0m
[0;32m                                        ],[0m
[0;32m                                        "drop": [[0m
[0;32m                                            "ALL"[0m
[0;32m                                        ][0m
[0;32m                                    },[0m
[0;32m                                    "privileged": false,[0m
[0;32m                                    "readOnlyRootFilesystem": false,[0m
[0;32m                                    "runAsUser": 600[0m
[0;32m                                },[0m
[0;32m                                "startupProbe": {[0m
[0;32m                                    "failureThreshold": 60,[0m
[0;32m                                    "httpGet": {[0m
[0;32m                                        "path": "/v1/db2/healthv2?Type=startup",[0m
[0;32m                                        "port": 50052,[0m
[0;32m                                        "scheme": "HTTPS"[0m
[0;32m                                    },[0m
[0;32m                                    "initialDelaySeconds": 30,[0m
[0;32m                                    "periodSeconds": 20,[0m
[0;32m                                    "successThreshold": 1,[0m
[0;32m                                    "timeoutSeconds": 30[0m
[0;32m                                },[0m
[0;32m                                "terminationMessagePath": "/dev/termination-log",[0m
[0;32m                                "terminationMessagePolicy": "File",[0m
[0;32m                                "volumeMounts": [[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0",[0m
[0;32m                                        "name": "meta"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/bludata0",[0m
[0;32m                                        "name": "data"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/backup",[0m
[0;32m                                        "name": "backup"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/logs/active",[0m
[0;32m                                        "name": "activelogs"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/tempts/c-db2u-manage-db2u",[0m
[0;32m                                        "name": "tempts"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/dev/shm",[0m
[0;32m                                        "name": "dshm"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/local",[0m
[0;32m                                        "name": "local"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/run",[0m
[0;32m                                        "name": "runvol"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0/configmap/db2u",[0m
[0;32m                                        "name": "db2uconfig",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0/configmap/db2/registry",[0m
[0;32m                                        "name": "db2regconfig",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0/configmap/db2/dbm-cfg",[0m
[0;32m                                        "name": "db2dbmconfig",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0/configmap/db2/db-cfg",[0m
[0;32m                                        "name": "db2dbconfig",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/sshkeys/db2uadm",[0m
[0;32m                                        "name": "sshkeys-db2uadm",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/sshkeys/db2uhausr",[0m
[0;32m                                        "name": "sshkeys-db2uhausr",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/sshkeys/db2instusr",[0m
[0;32m                                        "name": "sshkeys-db2instusr",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/certs/wv-rest",[0m
[0;32m                                        "name": "certs-wv-rest",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/db2ssl",[0m
[0;32m                                        "name": "db2ssl",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/db2u/license/",[0m
[0;32m                                        "name": "db2u-lic",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/db2instancepwd",[0m
[0;32m                                        "name": "instancepassword",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/certs/db2u-api",[0m
[0;32m                                        "name": "certs-db2u-api",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/user-mgmt-keypwd",[0m
[0;32m                                        "name": "user-mgmt-key",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/kp",[0m
[0;32m                                        "name": "kp-secret-file",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/secrets/hivepwd",[0m
[0;32m                                        "name": "hive",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "dnsConfig": {[0m
[0;32m                            "options": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "ndots",[0m
[0;32m                                    "value": "2"[0m
[0;32m                                }[0m
[0;32m                            ],[0m
[0;32m                            "searches": [[0m
[0;32m                                "c-db2u-manage-db2u-internal.db2u.svc.cluster.local"[0m
[0;32m                            ][0m
[0;32m                        },[0m
[0;32m                        "dnsPolicy": "ClusterFirst",[0m
[0;32m                        "initContainers": [[0m
[0;32m                            {[0m
[0;32m                                "command": [[0m
[0;32m                                    "bash",[0m
[0;32m                                    "-ec",[0m
[0;32m                                    "/tools/pre-install/db2u_init.sh ${MLN_TOTAL} ${REPLICAS}"[0m
[0;32m                                ],[0m
[0;32m                                "env": [[0m
[0;32m                                    {[0m
[0;32m                                        "name": "SERVICENAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2TYPE",[0m
[0;32m                                        "value": "db2wh"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD_NAME",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.name"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD_NAMESPACE",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.namespace"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "FORMATION_ID",[0m
[0;32m                                        "value": "c-db2u-manage-db2u"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "MLN_TOTAL",[0m
[0;32m                                        "value": "1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "REPLICAS",[0m
[0;32m                                        "value": "1"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "SERVICE_NAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-internal"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_ENDPOINT",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-internal.db2u.svc:50052"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_DATABASE_BACKEND",[0m
[0;32m                                        "value": "k8s"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_CONFIGMAP_NAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-api"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_KEY_FILE",[0m
[0;32m                                        "value": "/secrets/certs/db2u-api/tls.key"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_CERT_FILE",[0m
[0;32m                                        "value": "/secrets/certs/db2u-api/tls.crt"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2_NGINX_SVC_HOST_NAME",[0m
[0;32m                                        "value": "https://internal-nginx-svc:12443"[0m
[0;32m                                    }[0m
[0;32m                                ],[0m
[0;32m                                "image": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;32m                                "imagePullPolicy": "IfNotPresent",[0m
[0;32m                                "name": "init-labels",[0m
[0;32m                                "resources": {[0m
[0;32m                                    "limits": {[0m
[0;32m                                        "cpu": "500m",[0m
[0;32m                                        "ephemeral-storage": "5Mi",[0m
[0;32m                                        "memory": "256Mi"[0m
[0;32m                                    },[0m
[0;32m                                    "requests": {[0m
[0;32m                                        "cpu": "100m",[0m
[0;32m                                        "ephemeral-storage": "1Mi",[0m
[0;32m                                        "memory": "50Mi"[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "securityContext": {[0m
[0;32m                                    "allowPrivilegeEscalation": true,[0m
[0;32m                                    "capabilities": {[0m
[0;32m                                        "add": [[0m
[0;32m                                            "CHOWN",[0m
[0;32m                                            "DAC_OVERRIDE",[0m
[0;32m                                            "FOWNER",[0m
[0;32m                                            "SETUID",[0m
[0;32m                                            "SETGID"[0m
[0;32m                                        ],[0m
[0;32m                                        "drop": [[0m
[0;32m                                            "ALL"[0m
[0;32m                                        ][0m
[0;32m                                    },[0m
[0;32m                                    "privileged": false,[0m
[0;32m                                    "readOnlyRootFilesystem": false,[0m
[0;32m                                    "runAsUser": 500[0m
[0;32m                                },[0m
[0;32m                                "terminationMessagePath": "/dev/termination-log",[0m
[0;32m                                "terminationMessagePolicy": "File",[0m
[0;32m                                "volumeMounts": [[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0",[0m
[0;32m                                        "name": "meta"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0/configmap/db2u",[0m
[0;32m                                        "name": "db2uconfig",[0m
[0;32m                                        "readOnly": true[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "command": [[0m
[0;32m                                    "bash",[0m
[0;32m                                    "-ec",[0m
[0;32m                                    "/tools/pre-install/set_kernel_params.sh"[0m
[0;32m                                ],[0m
[0;32m                                "env": [[0m
[0;32m                                    {[0m
[0;32m                                        "name": "SERVICENAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD_NAME",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.name"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "POD_NAMESPACE",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "fieldRef": {[0m
[0;32m                                                "apiVersion": "v1",[0m
[0;32m                                                "fieldPath": "metadata.namespace"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "MEMORY_LIMIT",[0m
[0;32m                                        "valueFrom": {[0m
[0;32m                                            "resourceFieldRef": {[0m
[0;32m                                                "containerName": "db2u",[0m
[0;32m                                                "divisor": "0",[0m
[0;32m                                                "resource": "limits.memory"[0m
[0;32m                                            }[0m
[0;32m                                        }[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "SERVICE_NAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-internal"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_ENDPOINT",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-internal.db2u.svc:50052"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_DATABASE_BACKEND",[0m
[0;32m                                        "value": "k8s"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_CONFIGMAP_NAME",[0m
[0;32m                                        "value": "c-db2u-manage-db2u-api"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_KEY_FILE",[0m
[0;32m                                        "value": "/secrets/certs/db2u-api/tls.key"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2U_API_CERT_FILE",[0m
[0;32m                                        "value": "/secrets/certs/db2u-api/tls.crt"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "name": "DB2_NGINX_SVC_HOST_NAME",[0m
[0;32m                                        "value": "https://internal-nginx-svc:12443"[0m
[0;32m                                    }[0m
[0;32m                                ],[0m
[0;32m                                "image": "icr.io/db2u/db2u.tools@sha256:290532cb23d45a246dad7bca1aa761407480a3423f645800f5aa6ca1dedd863d",[0m
[0;32m                                "imagePullPolicy": "IfNotPresent",[0m
[0;32m                                "name": "init-kernel",[0m
[0;32m                                "resources": {[0m
[0;32m                                    "limits": {[0m
[0;32m                                        "cpu": "500m",[0m
[0;32m                                        "ephemeral-storage": "5Mi",[0m
[0;32m                                        "memory": "256Mi"[0m
[0;32m                                    },[0m
[0;32m                                    "requests": {[0m
[0;32m                                        "cpu": "100m",[0m
[0;32m                                        "ephemeral-storage": "1Mi",[0m
[0;32m                                        "memory": "50Mi"[0m
[0;32m                                    }[0m
[0;32m                                },[0m
[0;32m                                "securityContext": {[0m
[0;32m                                    "allowPrivilegeEscalation": true,[0m
[0;32m                                    "capabilities": {[0m
[0;32m                                        "drop": [[0m
[0;32m                                            "ALL"[0m
[0;32m                                        ][0m
[0;32m                                    },[0m
[0;32m                                    "privileged": true,[0m
[0;32m                                    "readOnlyRootFilesystem": false,[0m
[0;32m                                    "runAsNonRoot": false,[0m
[0;32m                                    "runAsUser": 0[0m
[0;32m                                },[0m
[0;32m                                "terminationMessagePath": "/dev/termination-log",[0m
[0;32m                                "terminationMessagePolicy": "File",[0m
[0;32m                                "volumeMounts": [[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/mnt/blumeta0",[0m
[0;32m                                        "name": "meta"[0m
[0;32m                                    },[0m
[0;32m                                    {[0m
[0;32m                                        "mountPath": "/host/proc",[0m
[0;32m                                        "name": "proc"[0m
[0;32m                                    }[0m
[0;32m                                ][0m
[0;32m                            }[0m
[0;32m                        ],[0m
[0;32m                        "restartPolicy": "Always",[0m
[0;32m                        "schedulerName": "default-scheduler",[0m
[0;32m                        "securityContext": {[0m
[0;32m                            "runAsNonRoot": true,[0m
[0;32m                            "sysctls": [[0m
[0;32m                                {[0m
[0;32m                                    "name": "net.ipv4.ip_local_port_range",[0m
[0;32m                                    "value": "32768 49999"[0m
[0;32m                                }[0m
[0;32m                            ][0m
[0;32m                        },[0m
[0;32m                        "serviceAccount": "account-db2u-db2u-manage",[0m
[0;32m                        "serviceAccountName": "account-db2u-db2u-manage",[0m
[0;32m                        "terminationGracePeriodSeconds": 120,[0m
[0;32m                        "volumes": [[0m
[0;32m                            {[0m
[0;32m                                "name": "meta",[0m
[0;32m                                "persistentVolumeClaim": {[0m
[0;32m                                    "claimName": "c-db2u-manage-meta"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "backup",[0m
[0;32m                                "persistentVolumeClaim": {[0m
[0;32m                                    "claimName": "c-db2u-manage-backup"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "emptyDir": {[0m
[0;32m                                    "medium": "Memory",[0m
[0;32m                                    "sizeLimit": "1Gi"[0m
[0;32m                                },[0m
[0;32m                                "name": "dshm"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "emptyDir": {[0m
[0;32m                                    "sizeLimit": "200Mi"[0m
[0;32m                                },[0m
[0;32m                                "name": "local"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "emptyDir": {[0m
[0;32m                                    "medium": "Memory",[0m
[0;32m                                    "sizeLimit": "200Mi"[0m
[0;32m                                },[0m
[0;32m                                "name": "runvol"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "hostPath": {[0m
[0;32m                                    "path": "/proc",[0m
[0;32m                                    "type": ""[0m
[0;32m                                },[0m
[0;32m                                "name": "proc"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "configMap": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "name": "c-db2u-manage-db2uconfig"[0m
[0;32m                                },[0m
[0;32m                                "name": "db2uconfig"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "configMap": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "name": "c-db2u-manage-db2regconfig"[0m
[0;32m                                },[0m
[0;32m                                "name": "db2regconfig"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "configMap": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "name": "c-db2u-manage-db2dbmconfig"[0m
[0;32m                                },[0m
[0;32m                                "name": "db2dbmconfig"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "configMap": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "name": "c-db2u-manage-db2dbconfig"[0m
[0;32m                                },[0m
[0;32m                                "name": "db2dbconfig"[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "sshkeys-db2uadm",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 256,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-sshkeys-db2uadm"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "sshkeys-db2uhausr",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 256,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-sshkeys-db2uhausr"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "sshkeys-db2instusr",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 256,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-sshkeys-db2instusr"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "certs-wv-rest",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 256,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-certs-wv-rest"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2ssl",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "db2u-certificate"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "db2u-lic",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 256,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-db2u-lic"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "instancepassword",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-instancepassword"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "certs-db2u-api",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-certs-db2u-api"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "user-mgmt-key",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 256,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-user-mgmt-key"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "kp-secret-file",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-kp-secret-file"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            {[0m
[0;32m                                "name": "hive",[0m
[0;32m                                "secret": {[0m
[0;32m                                    "defaultMode": 420,[0m
[0;32m                                    "optional": false,[0m
[0;32m                                    "secretName": "c-db2u-manage-hive"[0m
[0;32m                                }[0m
[0;32m                            }[0m
[0;32m                        ][0m
[0;32m                    }[0m
[0;32m                },[0m
[0;32m                "updateStrategy": {[0m
[0;32m                    "rollingUpdate": {[0m
[0;32m                        "partition": 0[0m
[0;32m                    },[0m
[0;32m                    "type": "RollingUpdate"[0m
[0;32m                },[0m
[0;32m                "volumeClaimTemplates": [[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "v1",[0m
[0;32m                        "kind": "PersistentVolumeClaim",[0m
[0;32m                        "metadata": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "formation_id": "db2u-manage",[0m
[0;32m                                "storageConfigType": "template"[0m
[0;32m                            },[0m
[0;32m                            "creationTimestamp": null,[0m
[0;32m                            "labels": {[0m
[0;32m                                "formation_id": "db2u-manage"[0m
[0;32m                            },[0m
[0;32m                            "name": "data",[0m
[0;32m                            "ownerReferences": [[0m
[0;32m                                {[0m
[0;32m                                    "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                                    "kind": "Formation",[0m
[0;32m                                    "name": "db2u-manage",[0m
[0;32m                                    "uid": "22d04bf3-baa7-429b-953f-f5cbea8c1138"[0m
[0;32m                                }[0m
[0;32m                            ][0m
[0;32m                        },[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteOnce"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "gp3-csi",[0m
[0;32m                            "volumeMode": "Filesystem"[0m
[0;32m                        },[0m
[0;32m                        "status": {[0m
[0;32m                            "phase": "Pending"[0m
[0;32m                        }[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "v1",[0m
[0;32m                        "kind": "PersistentVolumeClaim",[0m
[0;32m                        "metadata": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "formation_id": "db2u-manage",[0m
[0;32m                                "storageConfigType": "template"[0m
[0;32m                            },[0m
[0;32m                            "creationTimestamp": null,[0m
[0;32m                            "labels": {[0m
[0;32m                                "formation_id": "db2u-manage"[0m
[0;32m                            },[0m
[0;32m                            "name": "activelogs",[0m
[0;32m                            "ownerReferences": [[0m
[0;32m                                {[0m
[0;32m                                    "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                                    "kind": "Formation",[0m
[0;32m                                    "name": "db2u-manage",[0m
[0;32m                                    "uid": "22d04bf3-baa7-429b-953f-f5cbea8c1138"[0m
[0;32m                                }[0m
[0;32m                            ][0m
[0;32m                        },[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteOnce"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "gp3-csi",[0m
[0;32m                            "volumeMode": "Filesystem"[0m
[0;32m                        },[0m
[0;32m                        "status": {[0m
[0;32m                            "phase": "Pending"[0m
[0;32m                        }[0m
[0;32m                    },[0m
[0;32m                    {[0m
[0;32m                        "apiVersion": "v1",[0m
[0;32m                        "kind": "PersistentVolumeClaim",[0m
[0;32m                        "metadata": {[0m
[0;32m                            "annotations": {[0m
[0;32m                                "formation_id": "db2u-manage",[0m
[0;32m                                "storageConfigType": "template"[0m
[0;32m                            },[0m
[0;32m                            "creationTimestamp": null,[0m
[0;32m                            "labels": {[0m
[0;32m                                "formation_id": "db2u-manage"[0m
[0;32m                            },[0m
[0;32m                            "name": "tempts",[0m
[0;32m                            "ownerReferences": [[0m
[0;32m                                {[0m
[0;32m                                    "apiVersion": "db2u.databases.ibm.com/v1",[0m
[0;32m                                    "kind": "Formation",[0m
[0;32m                                    "name": "db2u-manage",[0m
[0;32m                                    "uid": "22d04bf3-baa7-429b-953f-f5cbea8c1138"[0m
[0;32m                                }[0m
[0;32m                            ][0m
[0;32m                        },[0m
[0;32m                        "spec": {[0m
[0;32m                            "accessModes": [[0m
[0;32m                                "ReadWriteOnce"[0m
[0;32m                            ],[0m
[0;32m                            "resources": {[0m
[0;32m                                "requests": {[0m
[0;32m                                    "storage": "100Gi"[0m
[0;32m                                }[0m
[0;32m                            },[0m
[0;32m                            "storageClassName": "gp3-csi",[0m
[0;32m                            "volumeMode": "Filesystem"[0m
[0;32m                        },[0m
[0;32m                        "status": {[0m
[0;32m                            "phase": "Pending"[0m
[0;32m                        }[0m
[0;32m                    }[0m
[0;32m                ][0m
[0;32m            },[0m
[0;32m            "status": {[0m
[0;32m                "availableReplicas": 1,[0m
[0;32m                "collisionCount": 0,[0m
[0;32m                "currentRevision": "c-db2u-manage-db2u-9d5898ffc",[0m
[0;32m                "observedGeneration": 1,[0m
[0;32m                "readyReplicas": 1,[0m
[0;32m                "replicas": 1,[0m
[0;32m                "updateRevision": "c-db2u-manage-db2u-9d5898ffc"[0m
[0;32m            }[0m
[0;32m        }[0m
[0;32m    ][0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "changed": false,[0m
[0;32m    "include": "tasks/install/suite_jdbccfg.yml",[0m
[0;32m    "include_args": {}[0m
[0;32m}[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "checksum": "32b9765e613382186c3cba269279f3186fb40556",[0m
[0;33m    "dest": "/tmp/system.yml",[0m
[0;33m    "gid": 1001,[0m
[0;33m    "group": "admin",[0m
[0;33m    "md5sum": "414108d5bc51f6e3355393f79069f8c3",[0m
[0;33m    "mode": "0664",[0m
[0;33m    "owner": "admin",[0m
[0;33m    "secontext": "unconfined_u:object_r:user_home_t:s0",[0m
[0;33m    "size": 134,[0m
[0;33m    "src": "/home/admin/.ansible/tmp/ansible-tmp-1713081321.743523-117244-159743512178203/source",[0m
[0;33m    "state": "file",[0m
[0;33m    "uid": 1001[0m
[0;33m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "ansible_facts": {[0m
[0;32m        "suite_jdbccfg_labels": {[0m
[0;32m            "mas.ibm.com/configScope": "system",[0m
[0;32m            "mas.ibm.com/instanceId": "masdemo"[0m
[0;32m        },[0m
[0;32m        "suite_jdbccfg_name": "masdemo-jdbc-system"[0m
[0;32m    },[0m
[0;32m    "ansible_included_var_files": [[0m
[0;32m        "/tmp/system.yml"[0m
[0;32m    ],[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;32mlocalhost | SUCCESS => {[0m
[0;32m    "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result",[0m
[0;32m    "changed": false[0m
[0;32m}[0m
[0;36mlocalhost | SKIPPED[0m
[0;33mlocalhost | CHANGED => {[0m
[0;33m    "changed": true,[0m
[0;33m    "checksum": "ea570424de18c5c22edbcee1d1fb027c95e7af1c",[0m
[0;33m    "dest": "/home/admin/itzuser/msconfig/jdbc-db2u-manage-db2u.yml",[0m
[0;33m    "gid": 1001,[0m
[0;33m    "group": "admin",[0m
[0;33m    "md5sum": "e27ffe9596832272b38ed6145d7b414e",[0m
[0;33m    "mode": "0664",[0m
[0;33m    "owner": "admin",[0m
[0;33m    "secontext": "unconfined_u:object_r:user_home_t:s0",[0m
[0;33m    "size": 2236,[0m
[0;33m    "src": "/home/admin/.ansible/tmp/ansible-tmp-1713081323.456893-117292-219444669107734/source",[0m
[0;33m    "state": "file",[0m
[0;33m    "uid": 1001[0m
[0;33m}[0m
]777;notify;Command completed;ansible localhost -m include_role -a name=ibm.mas_devops.db2]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ oc project db2u
Now using project "db2u" on server "https://api.tzrosa-tsqoliuk.t6j4.p1.openshiftapps.com:6443".
]777;notify;Command completed;oc project db2u]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ oc get pods c-db2u-manage-db2u-0
NAME                   READY   STATUS    RESTARTS   AGE
c-db2u-manage-db2u-0   1/1     Running   0          33m
]777;notify;Command completed;oc get pods c-db2u-manage-db2u-0]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ oc rsh pod/c-db2u-manage-db2u-0 su - db2inst1
Defaulted container "db2u" out of: db2u, init-labels (init), init-kernel (init)
Last login: Sun Apr 14 08:29:56 UTC 2024
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 connect to BLUDB

   Database Connection Information

 Database server        = DB2/LINUXX8664 11.5.9.0
 SQL authorization ID   = DB2INST1
 Local database alias   = BLUDB

[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using dft _table _org row
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOGARCHMETH1 off
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
SQL1363W  One or more of the parameters submitted for immediate modification 
were not changed dynamically. For these configuration parameters, the database 
must be shutdown and reactivated before the configuration parameter changes 
become effective.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using SELF _TUNING _MEM ON
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using APPGROUP _MEM _SZ 16384 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using APPLHEAPSZ 2048 AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using AUTO _MAINT ON DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using AUTO _TBL _MAINT ON DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using AUTO _RUNSTATS ON DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using AUTO _REORG ON DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using AUTO _DB _BACKUP ON DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using CATALOGCACHE _SZ 800 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using CHNGPGS _THRESH 40 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using DBHEAP AUTOMATIC
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOCKLIST AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOGBUFSZ 1024 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOCKTIMEOUT 300 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOGPRIMARY 20 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOGSECOND 100 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using LOGFILSIZ 8192 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using SOFTMAX 1000 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using MAXFILOP 61440 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using PCKCACHESZ AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using STAT _HEAP _SZ AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using STMTHEAP AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using UTIL _HEAP _SZ 10000 DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using DATABASE _MEMORY AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using AUTO _STMT _STATS OFF DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg for BLUDB using STMT _CONC LITERALS DEFERRED
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update alert cfg for database on ng db.db _backup _req SET THRESHOLDSCHECKED YES                                           <
DB20000I  The UPDATE ALERT CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update alert cfg foring db.tb _reorg _req SET THRESHOLDSCHECKED YES                                           <
DB20000I  The UPDATE ALERT CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update ag db.tb _runstats _req SET THRESHOLDSCHECKED YE                                           <S
DB20000I  The UPDATE ALERT CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using PRIV _MEM _THRESH 32767 DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using KEEPFENCED NO DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using NUMDB 2 DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using RQRIOBLK 65535 DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using HEALTH _MON OFF DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using AGENT _STACK _SZ 1000 DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update dbm cfg using MON _HEAP _SZ AUTOMATIC DEFERRED
DB20000I  The UPDATE DATABASE MANAGER CONFIGURATION command completed 
successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 update db cfg using DDL _CONSTRAINT _DEF YES
DB20000I  The UPDATE DATABASE CONFIGURATION command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _SKIPINSERTED=ON
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _INLIST _TO _NLJN=YES
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _MINIMIZE _LISTPREFETCH=Y
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _EVALUNCOMMITTED=YES
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _FMP _COMM _HEAPSZ=65536
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _SKIPDELETED=ON
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2set DB2 _USE _ALTERNATE _PAGE _CLEANING=ON
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 CREATE BUFFERPOOL MAXBUFPOOL IMMEDIATE SIZE 4096 AUTOMATIC PAGESIZE 32 K
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 CREATE REGULAR TABLESPACE MAXDATA PAGESIZE 32 K MANAGED BY AUTOMATIC STORAG[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ RAGE INITIALSIZE 5000 M BUFFERPOOL MAXBUFPOOL                                           <
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 CREATE TEMPORARY TABLESPACE MAXTED BY AUTOMATIC STORAGE BUFFERPOOL MAXBUFPOOL                                           <
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 CREATEZE 32 K MANAGED BY AUTOMATIC STORAGE INITIALS                                           <IZE 5000 M BUFFERPOOL MAXBUFPOOL
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 CREATE SCHEMA MAXIMO AUTHORIZATION MAXIMO
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 GRANT DBADM,CREATETAB,BINDADD,CONNECT,CREATE _NOT _FENCED _ROUTINE,IMPLICIT _SC[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ UIESCE _CONNECT,SECADM ON DATABASE TO USER MAX                                           <IMO
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 GRANT USE OF TABLESPACE MAXDATA TO USER MAXIMO
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 GRANT CREATEIN,DROPIN,ALTERIN ON SCHEMA MAXIMO TO USER MAXIMO
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 connect reset
DB20000I  The SQL command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 terminate
DB20000I  The TERMINATE command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 force applications all
DB20000I  The FORCE APPLICATION command completed successfully.
DB21024I  This command is asynchronous and may not be effective immediately.

[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 deactivate db BLUDB
DB20000I  The DEACTIVATE DATABASE command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2stop
04/14/2024 08:31:14     0   0   SQL1025N  The database manager was not stopped because databases are still active.
SQL1025N  The database manager was not stopped because databases are still active.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2start
04/14/2024 08:31:15     0   0   SQL1026N  The database manager is already active.
SQL1026N  The database manager is already active.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 activate db bludb
DB20000I  The ACTIVATE DATABASE command completed successfully.
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 get db cfg for BLUDB | grep -i org
     Automatic re[01;31m[Korg[m[Kanization               (AUTO_RE[01;31m[KORG[m[K) = ON
 Default table [01;31m[Korg[m[Kanization              (DFT_TABLE_[01;31m[KORG[m[K) = ROW
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ 
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 get db cfg for BLUDB | grep LOGARCHMETH
 First log archive method                 ([01;31m[KLOGARCHMETH[m[K1) = OFF
 Second log archive method                ([01;31m[KLOGARCHMETH[m[K2) = OFF
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ db2 get db cfg for BLUDB | grep LOGARCHMETH
 First log archive method                 ([01;31m[KLOGARCHMETH[m[K1) = OFF
 Second log archive method                ([01;31m[KLOGARCHMETH[m[K2) = OFF
[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ clear
[3J[H[2J[db2inst1@c-db2u-manage-db2u-0 - Db2U db2inst1]$ exit
]777;notify;Command completed;oc rsh pod/c-db2u-manage-db2u-0 su - db2inst1]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ c[Kclear
[3J[H[2J]777;notify;Command completed;clear]0;admin@bastion:~]7;file://bastion/home/admin[admin@bastion ~]$ exit
exit

Script done on 2024-04-14 04:32:16-04:00
